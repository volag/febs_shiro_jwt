2019-04-28 09:51:57.603 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 14752 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-04-28 09:51:57.606 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-04-28 09:52:00.238 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-28 09:52:00.244 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-04-28 09:52:00.415 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 140ms. Found 0 repository interfaces.
2019-04-28 09:52:01.014 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$927f338] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:01.439 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:01.607 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e3773edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:01.618 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:01.682 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:01.731 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$79e8ce0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:01.797 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$e568cfb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:02.162 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$de2d8708] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:02.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:02.227 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:02.425 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:02.444 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$cb702a1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:02.454 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:02.474 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$b7b13aa5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:02.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:02.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:52:02.499 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-04-28 09:52:02.514 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-04-28 09:52:04.904 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-28 09:54:41.151 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 16112 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-04-28 09:54:41.156 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-04-28 09:54:42.915 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-28 09:54:42.918 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-04-28 09:54:43.029 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91ms. Found 0 repository interfaces.
2019-04-28 09:54:43.573 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$6277a453] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:43.720 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:43.836 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3cc6eff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:43.849 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:43.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:43.869 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3387f26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:43.890 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3eb880cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.016 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$377d3823] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.053 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.058 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.134 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.141 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$24bfdb35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.146 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.153 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$1100ebc0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.161 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.166 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-04-28 09:54:44.173 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-04-28 09:54:44.435 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-04-28 09:54:44.436 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-04-28 09:54:44.436 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-04-28 09:54:44.436 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-04-28 09:54:44.436 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.455 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:44.467 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:45.896 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:45.903 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:45.909 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:45.916 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:45.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:45.952 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:45.960 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:45.961 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:45.963 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.014 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.053 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.085 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.086 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.126 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.169 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.171 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.175 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.197 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.220 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$2ecbfeb7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.224 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$e118c0d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.227 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$9c2fa6bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.237 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.242 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$c2fb1ded] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.250 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.253 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$10d79c46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.266 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.301 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.344 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.345 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.364 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.394 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 09:54:46.799 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-04-28 09:54:46.814 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-04-28 09:54:46.819 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-04-28 09:54:46.819 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-04-28 09:54:46.825 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-04-28 09:54:46.825 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-04-28 09:54:46.825 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-04-28 09:54:47.923 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-04-28 09:54:48.113 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-04-28 09:54:48.113 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6784 ms
2019-04-28 09:54:48.842 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-28 09:54:48.842 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-04-28 09:54:48.842 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-28 09:54:48.842 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-04-28 09:54:48.842 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-04-28 09:54:48.842 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-04-28 09:54:48.842 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-28 09:54:48.842 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-04-28 09:54:49.981 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-04-28 09:54:51.277 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-04-28 09:54:51.350 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-04-28 09:54:51.458 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-04-28 09:54:51.471 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-04-28 09:54:51.479 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-04-28 09:54:51.499 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-04-28 09:54:51.502 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 11.537 seconds (JVM running for 14.468)
2019-04-28 09:54:51.514 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-04-28 09:54:51.525 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-04-28 09:54:51.525 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-04-28 09:54:51.616 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 9 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-04-28 09:54:51.650 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 7 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 09:54:51.793 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 09:54:51.826 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 10 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 09:54:51.844 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-04-28 09:54:51.849 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-04-28 09:54:51.852 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-04-28 09:54:51.855 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-04-28 09:54:51.861 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-04-28 09:54:51.864 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-04-28 09:54:51.868 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-04-28 09:54:51.871 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-04-28 09:54:51.874 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-04-28 09:54:51.877 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-04-28 09:54:51.880 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-04-28 09:54:51.884 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-04-28 09:54:51.886 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-04-28 09:54:51.888 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-04-28 09:54:51.892 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-04-28 09:54:51.899 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-04-28 09:54:51.902 febs [main] INFO  p6spy - 2019-04-28 09:54:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-04-28 09:54:51.903 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-04-28 09:54:51.903 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-04-28 09:54:51.904 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-04-28 09:54:51.904 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-04-28 09:54:51.904 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-04-28T09:54:51.904
2019-04-28 09:54:53.093 febs [RMI TCP Connection(7)-127.0.0.1] INFO  p6spy - 2019-04-28 09:54:53 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-04-28 09:54:53.101 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-04-28 09:54:53.101 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-04-28 09:54:53.124 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2019-04-28 09:55:22.773 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 09:55:22.912 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 09:55:22 | 耗时 3 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T09:55:22.887+0800' WHERE username = 'mrbird';
2019-04-28 09:55:22.915 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 09:55:22 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 09:55:23.653 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 09:55:23 | 耗时 6 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T09:55:22.993+0800', '', '127.0.0.1' );
2019-04-28 09:55:24.020 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 09:55:24.047 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 09:55:24 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-04-28 09:55:24.577 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 09:55:24.582 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 09:55:24.589 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 09:55:24 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log;
2019-04-28 09:55:24.593 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 09:55:24 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-04-28 09:55:24.596 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 09:55:24 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-04-28 09:55:24.603 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 09:55:24 | 耗时 4 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-04-28 09:55:24.607 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 09:55:24 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-04-28 09:55:24.702 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 09:55:24 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 09:55:25.051 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 09:55:25 | 耗时 2 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 10:00:26.576 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 17520 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-04-28 10:00:26.580 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-04-28 10:00:28.325 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-28 10:00:28.328 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-04-28 10:00:28.427 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78ms. Found 0 repository interfaces.
2019-04-28 10:00:29.012 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$2f988385] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.155 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.258 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9e7cf29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.267 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.281 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a0595e58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.301 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$bd96001] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.450 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$49e1755] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.474 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.479 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.563 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.573 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$f1e0ba67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.578 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.586 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$de21caf2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.597 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.599 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.603 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-04-28 10:00:29.612 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-04-28 10:00:29.877 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-04-28 10:00:29.877 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-04-28 10:00:29.877 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-04-28 10:00:29.877 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-04-28 10:00:29.878 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.893 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:29.903 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.091 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.095 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.098 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.136 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.147 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.148 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.195 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.250 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.252 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.254 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.281 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.322 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.326 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.349 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$fbecdde9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.381 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$ae39a002] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.384 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$695085f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.394 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$901bfd1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.419 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$ddf87b78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.429 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.431 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.435 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.439 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.481 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.487 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.496 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:31.510 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:00:32.182 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-04-28 10:00:32.202 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-04-28 10:00:32.209 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-04-28 10:00:32.209 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-04-28 10:00:32.216 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-04-28 10:00:32.216 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-04-28 10:00:32.216 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-04-28 10:00:33.290 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-04-28 10:00:33.476 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-04-28 10:00:33.476 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6808 ms
2019-04-28 10:00:34.121 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-28 10:00:34.121 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-04-28 10:00:34.121 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-28 10:00:34.121 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-04-28 10:00:34.121 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-04-28 10:00:34.121 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-04-28 10:00:34.121 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-28 10:00:34.121 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-04-28 10:00:35.074 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-04-28 10:00:36.305 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-04-28 10:00:36.401 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-04-28 10:00:36.528 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-04-28 10:00:36.548 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-04-28 10:00:36.560 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-04-28 10:00:36.575 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-04-28 10:00:36.579 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 11.153 seconds (JVM running for 13.616)
2019-04-28 10:00:36.590 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-04-28 10:00:36.592 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-04-28 10:00:36.592 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-04-28 10:00:36.681 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-04-28 10:00:36.712 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 10:00:36.845 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 10:00:36.864 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 10:00:36.884 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-04-28 10:00:36.891 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-04-28 10:00:36.895 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-04-28 10:00:36.900 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-04-28 10:00:36.904 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-04-28 10:00:36.909 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-04-28 10:00:36.913 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-04-28 10:00:36.917 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-04-28 10:00:36.921 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-04-28 10:00:36.925 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-04-28 10:00:36.929 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-04-28 10:00:36.933 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-04-28 10:00:36.936 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-04-28 10:00:36.940 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-04-28 10:00:36.945 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-04-28 10:00:36.954 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-04-28 10:00:36.958 febs [main] INFO  p6spy - 2019-04-28 10:00:36 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-04-28 10:00:36.960 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-04-28 10:00:36.960 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-04-28 10:00:36.960 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-04-28 10:00:36.960 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-04-28 10:00:36.960 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-04-28T10:00:36.960
2019-04-28 10:00:37.916 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-04-28 10:00:37.916 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-04-28 10:00:37.930 febs [RMI TCP Connection(8)-127.0.0.1] INFO  p6spy - 2019-04-28 10:00:37 | 耗时 4 ms | SQL 语句：
/* ping */ SELECT 1;
2019-04-28 10:00:37.935 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2019-04-28 10:00:54.339 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:00:54.339 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:00:54.512 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:00:54 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-04-28 10:00:54.515 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:00:54 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-04-28 10:00:54.518 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:00:54 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-04-28 10:00:54.522 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:00:54 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-04-28 10:00:54.527 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:00:54 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-04-28 10:00:54.561 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 10:00:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 10:00:54.572 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 10:00:54 | 耗时 2 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 10:41:01.576 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:41:01.615 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 10:41:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_resume u WHERE 1 = 1 AND u.user_id = 1;
2019-04-28 10:41:01.618 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 10:41:01 | 耗时 1 ms | SQL 语句：
SELECT * from t_resume u where 1 = 1 AND u.user_id = 1 ORDER BY resume_id ASC LIMIT 0,10;
2019-04-28 10:41:14.854 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:41:14.888 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 10:41:14 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.position_sort, u.need_work_time, u.need_education, u.issue_company, u.requested, d.id sendId FROM t_position u LEFT JOIN t_position_send d ON (u.id = d.position_id) WHERE 1 = 1 AND d.user_id = '1' GROUP BY u.position_name ) TOTAL;
2019-04-28 10:41:14.890 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 10:41:14 | 耗时 0 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.position_sort, u.need_work_time, u.need_education, u.issue_company, u.requested, d.id sendId FROM t_position u LEFT JOIN t_position_send d ON (u.id = d.position_id) WHERE 1 = 1 AND d.user_id = '1' group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-04-28 10:41:30.634 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:41:30.642 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 10:41:30 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.position_sort, u.need_work_time, u.need_education, u.issue_company, u.requested, d.id collectId FROM t_position u LEFT JOIN t_position_collect d ON (u.id = d.position_id) WHERE 1 = 1 AND d.user_id = '1' GROUP BY u.position_name ) TOTAL;
2019-04-28 10:41:30.645 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 10:41:30 | 耗时 1 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.position_sort, u.need_work_time, u.need_education, u.issue_company, u.requested, d.id collectId FROM t_position u LEFT JOIN t_position_collect d ON (u.id = d.position_id) WHERE 1 = 1 AND d.user_id = '1' group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-04-28 10:41:34.379 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:41:34.413 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 10:41:34 | 耗时 17 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM sys_position u LEFT JOIN t_company tc ON tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 AND u.user_id = 1 GROUP BY u.position_name ) TOTAL;
2019-04-28 10:42:15.288 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:42:15.298 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 10:42:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM sys_position u LEFT JOIN t_company tc ON tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 AND u.user_id = 1 GROUP BY u.position_name ) TOTAL;
2019-04-28 10:44:41.997 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 21300 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-04-28 10:44:42.003 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-04-28 10:44:44.375 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-28 10:44:44.378 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-04-28 10:44:44.484 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91ms. Found 0 repository interfaces.
2019-04-28 10:44:45.093 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$29042b5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.240 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.357 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3537702] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.368 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.384 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$99c50631] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.404 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$54507da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.545 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$fe09bf2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.572 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.580 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.660 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.668 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$eb4c6240] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.672 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.680 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$d78d72cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.690 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.692 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:45.695 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-04-28 10:44:45.704 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-04-28 10:44:46.383 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-04-28 10:44:46.383 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-04-28 10:44:46.383 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-04-28 10:44:46.383 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-04-28 10:44:46.383 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:46.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:46.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:47.849 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:47.865 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:47.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:47.875 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:47.919 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:47.920 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:47.932 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:47.933 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:47.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:47.997 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.033 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.071 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.073 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.104 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.106 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.153 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.154 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.163 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.193 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.240 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$f55885c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.247 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$a7a547db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.251 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$62bc2dca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.260 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$8987a4f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.281 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.295 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$d7642351] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.316 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.320 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.332 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.336 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.371 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.390 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.396 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.396 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.404 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.420 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 10:44:48.812 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-04-28 10:44:48.827 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-04-28 10:44:48.834 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-04-28 10:44:48.835 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-04-28 10:44:48.841 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-04-28 10:44:48.842 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-04-28 10:44:48.842 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-04-28 10:44:49.953 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-04-28 10:44:50.224 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-04-28 10:44:50.224 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7156 ms
2019-04-28 10:44:50.872 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-28 10:44:50.873 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-04-28 10:44:50.873 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-28 10:44:50.873 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-04-28 10:44:50.873 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-04-28 10:44:50.873 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-04-28 10:44:50.873 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-28 10:44:50.873 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-04-28 10:44:51.815 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-04-28 10:44:53.069 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-04-28 10:44:53.138 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-04-28 10:44:53.245 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-04-28 10:44:53.260 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-04-28 10:44:53.267 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-04-28 10:44:53.282 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-04-28 10:44:53.286 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 12.546 seconds (JVM running for 15.124)
2019-04-28 10:44:53.296 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-04-28 10:44:53.297 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-04-28 10:44:53.297 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-04-28 10:44:53.436 febs [main] INFO  p6spy - 2019-04-28 10:44:53 | 耗时 30 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-04-28 10:44:53.502 febs [main] INFO  p6spy - 2019-04-28 10:44:53 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 10:44:53.638 febs [main] INFO  p6spy - 2019-04-28 10:44:53 | 耗时 29 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 10:44:53.685 febs [main] INFO  p6spy - 2019-04-28 10:44:53 | 耗时 29 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 10:44:54.069 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 28 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-04-28 10:44:54.109 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 32 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-04-28 10:44:54.149 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 31 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-04-28 10:44:54.197 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 38 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-04-28 10:44:54.239 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 32 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-04-28 10:44:54.277 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-04-28 10:44:54.326 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 39 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-04-28 10:44:54.358 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 28 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-04-28 10:44:54.395 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 31 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-04-28 10:44:54.436 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-04-28 10:44:54.474 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 31 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-04-28 10:44:54.525 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 45 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-04-28 10:44:54.559 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 31 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-04-28 10:44:54.590 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 28 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-04-28 10:44:54.623 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 29 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-04-28 10:44:54.660 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 30 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-04-28 10:44:54.704 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 30 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-04-28 10:44:54.737 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 30 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '你好牙牙' group by u.username;
2019-04-28 10:44:54.774 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 31 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '你好牙牙';
2019-04-28 10:44:54.806 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 29 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '你好牙牙' and m.perms is not null and m.perms <> '';
2019-04-28 10:44:54.844 febs [main] INFO  p6spy - 2019-04-28 10:44:54 | 耗时 33 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-04-28 10:44:54.847 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-04-28 10:44:54.847 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-04-28 10:44:54.848 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-04-28 10:44:54.848 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-04-28 10:44:54.848 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-04-28T10:44:54.848
2019-04-28 10:44:55.646 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-04-28 10:44:55.647 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-04-28 10:44:55.670 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2019-04-28 10:44:55.706 febs [RMI TCP Connection(9)-127.0.0.1] INFO  p6spy - 2019-04-28 10:44:55 | 耗时 28 ms | SQL 语句：
/* ping */ SELECT 1;
2019-04-28 10:45:11.924 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:45:12.268 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 10:45:12 | 耗时 29 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc ON tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 AND u.user_id = 1 GROUP BY u.position_name ) TOTAL;
2019-04-28 10:45:12.307 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 10:45:12 | 耗时 30 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc on tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 AND u.user_id = 1 group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-04-28 10:46:30.288 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:46:30.399 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 10:46:30 | 耗时 36 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:46:51.902 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:46:51.997 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:46:51 | 耗时 31 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 10:47:11.171 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:47:11.368 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 10:47:11 | 耗时 56 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 144, '新增', 'position:add', '1', '2019-04-28T10:47:11.302+0800' );
2019-04-28 10:47:12.012 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:47:12.331 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 10:47:12 | 耗时 25 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:47:12.338 febs [asyncTaskExecutor-1] INFO  p6spy - 2019-04-28 10:47:12 | 耗时 57 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 366, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=165, parentId=144, menuName=新增, path=null, component=null, perms=position:add, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 10:47:11 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T10:47:11.653+0800', '' );
2019-04-28 10:47:36.988 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:47:37.053 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 10:47:37 | 耗时 29 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 10:48:00.411 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:48:00.539 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 10:48:00 | 耗时 62 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 144, '删除', 'position:delete', '1', '2019-04-28T10:48:00.475+0800' );
2019-04-28 10:48:01.098 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:48:01.155 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:48:01 | 耗时 25 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:48:01.479 febs [asyncTaskExecutor-2] INFO  p6spy - 2019-04-28 10:48:01 | 耗时 57 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 260, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=166, parentId=144, menuName=删除, path=null, component=null, perms=position:delete, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 10:48:00 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T10:48:00.708+0800', '' );
2019-04-28 10:48:19.147 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:48:19.213 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 10:48:19 | 耗时 29 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 10:48:42.777 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:48:42.881 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 10:48:42 | 耗时 48 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 144, '修改', 'position:edit', '1', '2019-04-28T10:48:42.830+0800' );
2019-04-28 10:48:43.676 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:48:43.732 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 10:48:43 | 耗时 24 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:48:44.497 febs [asyncTaskExecutor-3] INFO  p6spy - 2019-04-28 10:48:44 | 耗时 64 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 247, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=167, parentId=144, menuName=修改, path=null, component=null, perms=position:edit, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 10:48:42 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T10:48:43.092+0800', '' );
2019-04-28 10:48:56.893 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:48:56.971 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 10:48:56 | 耗时 40 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 10:49:02.227 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:49:02.340 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:49:02 | 耗时 48 ms | SQL 语句：
UPDATE t_menu SET parent_id=144, menu_name='修改', perms='position:update', type='1', modify_time='2019-04-28T10:49:02.287+0800' WHERE MENU_ID=167;
2019-04-28 10:49:02.366 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:49:02 | 耗时 25 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '167' );
2019-04-28 10:49:03.205 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:49:03.262 febs [asyncTaskExecutor-4] INFO  p6spy - 2019-04-28 10:49:03 | 耗时 65 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 252, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=167, parentId=144, menuName=修改, path=null, component=null, perms=position:update, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Sun Apr 28 10:49:02 CST 2019, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T10:49:02.544+0800', '' );
2019-04-28 10:49:03.276 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 10:49:03 | 耗时 27 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:50:12.751 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:50:12.819 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 10:50:12 | 耗时 28 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc ON tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 GROUP BY u.position_name ) TOTAL;
2019-04-28 10:50:12.849 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 10:50:12 | 耗时 29 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc on tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-04-28 10:50:33.328 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:50:33.420 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 10:50:33 | 耗时 30 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-04-28 10:50:33.454 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 10:50:33 | 耗时 32 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-04-28 10:52:25.512 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:52:25.603 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:52:25 | 耗时 27 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '147' );
2019-04-28 10:52:25.667 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:52:25 | 耗时 58 ms | SQL 语句：
DELETE FROM t_menu WHERE menu_id IN ( SELECT m.menu_id FROM ( SELECT menu_id FROM t_menu WHERE FIND_IN_SET( menu_id, findMenuChildren ( '147' ) ) > 0 ) m );
2019-04-28 10:52:25.695 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:52:25 | 耗时 24 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='1';
2019-04-28 10:52:25.723 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:52:25 | 耗时 24 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 10:52:25.750 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:52:25 | 耗时 25 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 10:52:26.960 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:52:27.014 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 10:52:27 | 耗时 25 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:52:27.017 febs [asyncTaskExecutor-5] INFO  p6spy - 2019-04-28 10:52:27 | 耗时 56 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '删除菜单/按钮', 398, 'cc.mrbird.febs.system.controller.MenuController.deleteMenus()', ' menuIds: "147"', '127.0.0.1', '2019-04-28T10:52:25.975+0800', '' );
2019-04-28 10:52:37.589 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:52:37.652 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 10:52:37 | 耗时 29 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 10:52:52.249 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:52:52.355 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 10:52:52 | 耗时 48 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 149, '新增', 'company:add', '1', '2019-04-28T10:52:52.305+0800' );
2019-04-28 10:52:52.972 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:52:53.028 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 10:52:53 | 耗时 26 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:52:53.281 febs [asyncTaskExecutor-1] INFO  p6spy - 2019-04-28 10:52:53 | 耗时 60 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 224, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=168, parentId=149, menuName=新增, path=null, component=null, perms=company:add, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 10:52:52 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T10:52:52.542+0800', '' );
2019-04-28 10:53:01.972 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:53:02.029 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:53:02 | 耗时 26 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 10:53:18.335 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:53:18.437 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 10:53:18 | 耗时 46 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 149, '修改', 'company:update', '1', '2019-04-28T10:53:18.389+0800' );
2019-04-28 10:53:19.236 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:53:19.297 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 10:53:19 | 耗时 26 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:53:19.730 febs [asyncTaskExecutor-2] INFO  p6spy - 2019-04-28 10:53:19 | 耗时 57 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 225, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=169, parentId=149, menuName=修改, path=null, component=null, perms=company:update, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 10:53:18 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T10:53:18.621+0800', '' );
2019-04-28 10:53:22.979 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:53:23.041 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 10:53:23 | 耗时 26 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 10:53:39.983 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:53:40.089 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 10:53:40 | 耗时 46 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 149, '删除', 'company:delete', '1', '2019-04-28T10:53:40.041+0800' );
2019-04-28 10:53:40.671 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:53:40.726 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 10:53:40 | 耗时 24 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:53:40.951 febs [asyncTaskExecutor-3] INFO  p6spy - 2019-04-28 10:53:40 | 耗时 56 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 218, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=170, parentId=149, menuName=删除, path=null, component=null, perms=company:delete, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 10:53:40 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T10:53:40.264+0800', '' );
2019-04-28 10:54:12.546 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:54:12.603 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 10:54:12 | 耗时 25 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 10:55:14.236 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:55:14.359 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 10:55:14 | 耗时 58 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 149, '导出Excel', 'company:export', '1', '2019-04-28T10:55:14.299+0800' );
2019-04-28 10:55:15.252 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:55:15.313 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 10:55:15 | 耗时 26 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:55:15.674 febs [asyncTaskExecutor-4] INFO  p6spy - 2019-04-28 10:55:15 | 耗时 58 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 249, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=171, parentId=149, menuName=导出Excel, path=null, component=null, perms=company:export, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 10:55:14 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T10:55:14.519+0800', '' );
2019-04-28 10:55:21.598 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 10:55:21.744 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 10:55:21 | 耗时 61 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T10:55:21.677+0800' WHERE username = 'mrbird';
2019-04-28 10:55:21.777 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 10:55:21 | 耗时 31 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 10:55:22.518 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 10:55:22 | 耗时 59 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T10:55:21.910+0800', '', '127.0.0.1' );
2019-04-28 10:55:22.761 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:55:22.805 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 10:55:22 | 耗时 39 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-04-28 10:55:23.340 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:55:23.348 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:55:23.405 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 10:55:23 | 耗时 27 ms | SQL 语句：
select count(1) from t_login_log;
2019-04-28 10:55:23.417 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 10:55:23 | 耗时 23 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 10:55:23.435 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 10:55:23 | 耗时 27 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-04-28 10:55:23.445 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 10:55:23 | 耗时 26 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 10:55:23.464 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 10:55:23 | 耗时 28 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-04-28 10:55:23.494 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 10:55:23 | 耗时 28 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-04-28 10:55:23.525 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 10:55:23 | 耗时 28 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-04-28 10:55:28.642 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:55:28.701 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 10:55:28 | 耗时 28 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:56:08.485 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:56:08.562 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 10:56:08 | 耗时 39 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 10:56:28.598 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:56:28.697 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 10:56:28 | 耗时 46 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 149, '导入Excel', 'company:import', '1', '2019-04-28T10:56:28.649+0800' );
2019-04-28 10:56:29.373 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 10:56:29.429 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 10:56:29 | 耗时 27 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 10:56:30.010 febs [asyncTaskExecutor-5] INFO  p6spy - 2019-04-28 10:56:30 | 耗时 56 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 268, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=172, parentId=149, menuName=导入Excel, path=null, component=null, perms=company:import, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 10:56:28 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T10:56:28.928+0800', '' );
2019-04-28 11:01:45.480 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:01:45.545 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 11:01:45 | 耗时 33 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-04-28 11:01:45.574 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 11:01:45 | 耗时 26 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 11:01:59.582 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:01:59.676 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 11:01:59 | 耗时 32 ms | SQL 语句：
SELECT COUNT(1) FROM t_person_project t LEFT JOIN t_person tp ON (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp ON tpp.PROJECT_ID = t.PROJECT_ID WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 11:01:59.708 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 11:01:59 | 耗时 30 ms | SQL 语句：
select t.PERSON_PROJECT_ID, t.PERSON_ID, t.PROJECT_ID, t.PERSON_STATUS, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME, t.TITLE, t.DESCRIPTION, tp.PERSON_NAME, tp.MOBILE_PHONE, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, tpp.GATHER_STATUS gatherStatus from t_person_project t LEFT JOIN t_person tp on (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp on tpp.PROJECT_ID = t.PROJECT_ID where 1=1 and t.USER_ID = 1 ORDER BY PERSON_PROJECT_ID ASC LIMIT 0,10;
2019-04-28 11:03:49.383 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:03:49.439 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 11:03:49 | 耗时 25 ms | SQL 语句：
SELECT COUNT(1) FROM t_person_project t LEFT JOIN t_person tp ON (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp ON tpp.PROJECT_ID = t.PROJECT_ID WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 11:03:49.467 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 11:03:49 | 耗时 25 ms | SQL 语句：
select t.PERSON_PROJECT_ID, t.PERSON_ID, t.PROJECT_ID, t.PERSON_STATUS, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME, t.TITLE, t.DESCRIPTION, tp.PERSON_NAME, tp.MOBILE_PHONE, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, tpp.GATHER_STATUS gatherStatus from t_person_project t LEFT JOIN t_person tp on (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp on tpp.PROJECT_ID = t.PROJECT_ID where 1=1 and t.USER_ID = 1 ORDER BY PERSON_PROJECT_ID ASC LIMIT 0,10;
2019-04-28 11:04:06.591 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:04:06.645 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 11:04:06 | 耗时 24 ms | SQL 语句：
SELECT COUNT(1) FROM t_person_project t LEFT JOIN t_person tp ON (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp ON tpp.PROJECT_ID = t.PROJECT_ID WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 11:04:06.674 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 11:04:06 | 耗时 25 ms | SQL 语句：
select t.PERSON_PROJECT_ID, t.PERSON_ID, t.PROJECT_ID, t.PERSON_STATUS, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME, t.TITLE, t.DESCRIPTION, tp.PERSON_NAME, tp.MOBILE_PHONE, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, tpp.GATHER_STATUS gatherStatus from t_person_project t LEFT JOIN t_person tp on (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp on tpp.PROJECT_ID = t.PROJECT_ID where 1=1 and t.USER_ID = 1 ORDER BY PERSON_PROJECT_ID ASC LIMIT 0,10;
2019-04-28 11:08:59.652 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 28768 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-04-28 11:08:59.656 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-04-28 11:09:01.735 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-28 11:09:01.738 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-04-28 11:09:01.840 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83ms. Found 0 repository interfaces.
2019-04-28 11:09:02.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$54ad6612] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.420 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.532 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2efcb1b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.556 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.561 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.572 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c56e40e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.593 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$30ee428e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.779 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$29b2f9e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.834 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.841 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.958 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.969 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$16f59cf4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.977 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:02.991 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$336ad7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:03.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:03.015 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:08.830 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 21428 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-04-28 11:09:08.837 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-04-28 11:09:10.806 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-28 11:09:10.808 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-04-28 11:09:10.906 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82ms. Found 0 repository interfaces.
2019-04-28 11:09:11.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$603404a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.423 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.522 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3a835049] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.551 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.561 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d0f4df78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.582 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$3c74e121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.730 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$35399875] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.752 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.824 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.832 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$227c3b87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.836 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.843 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$ebd4c12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.851 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:11.858 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-04-28 11:09:11.867 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-04-28 11:09:12.282 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-04-28 11:09:12.282 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-04-28 11:09:12.282 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-04-28 11:09:12.282 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-04-28 11:09:12.282 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:12.295 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:12.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.471 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.476 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.512 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.513 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.521 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.523 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.525 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.585 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.611 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.652 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.657 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.701 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.703 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.750 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.752 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.759 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.794 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.833 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$2c885f09] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.839 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$ded52122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.843 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$99ec0711] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.853 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.856 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.864 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$c0b77e3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.873 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.877 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e93fc98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.891 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.892 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.902 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.936 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.960 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.967 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.967 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:13.981 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:14.004 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 11:09:14.462 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-04-28 11:09:14.478 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-04-28 11:09:14.485 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-04-28 11:09:14.485 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-04-28 11:09:14.493 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-04-28 11:09:14.493 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-04-28 11:09:14.493 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-04-28 11:09:15.593 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-04-28 11:09:15.840 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-04-28 11:09:15.840 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6909 ms
2019-04-28 11:09:16.776 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-28 11:09:16.776 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-04-28 11:09:16.776 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-28 11:09:16.776 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-04-28 11:09:16.777 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-04-28 11:09:16.777 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-04-28 11:09:16.777 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-28 11:09:16.777 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-04-28 11:09:17.772 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-04-28 11:09:18.983 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-04-28 11:09:19.050 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-04-28 11:09:19.150 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-04-28 11:09:19.164 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-04-28 11:09:19.170 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-04-28 11:09:19.184 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-04-28 11:09:19.188 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 11.78 seconds (JVM running for 14.726)
2019-04-28 11:09:19.199 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-04-28 11:09:19.201 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-04-28 11:09:19.201 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-04-28 11:09:19.270 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-04-28 11:09:19.314 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 11:09:19.403 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 11:09:19.415 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 11:09:19.432 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-04-28 11:09:19.437 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-04-28 11:09:19.441 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-04-28 11:09:19.444 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-04-28 11:09:19.448 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-04-28 11:09:19.452 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-04-28 11:09:19.455 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-04-28 11:09:19.458 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-04-28 11:09:19.461 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-04-28 11:09:19.465 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-04-28 11:09:19.468 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-04-28 11:09:19.471 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-04-28 11:09:19.473 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-04-28 11:09:19.476 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-04-28 11:09:19.483 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-04-28 11:09:19.486 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-04-28 11:09:19.490 febs [main] INFO  p6spy - 2019-04-28 11:09:19 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-04-28 11:09:19.491 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-04-28 11:09:19.491 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-04-28 11:09:19.492 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-04-28 11:09:19.492 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-04-28 11:09:19.492 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-04-28T11:09:19.492
2019-04-28 11:09:20.159 febs [RMI TCP Connection(5)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-04-28 11:09:20.160 febs [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-04-28 11:09:20.183 febs [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2019-04-28 11:09:20.214 febs [RMI TCP Connection(7)-127.0.0.1] INFO  p6spy - 2019-04-28 11:09:20 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-04-28 11:12:35.600 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:12:35.851 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 11:12:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_person_project t LEFT JOIN t_person tp ON (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp ON tpp.PROJECT_ID = t.PROJECT_ID WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 11:12:35.858 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 11:12:35 | 耗时 1 ms | SQL 语句：
select t.PERSON_PROJECT_ID, t.PERSON_ID, t.PROJECT_ID, t.PERSON_STATUS, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME, t.TITLE, t.DESCRIPTION, tp.PERSON_NAME personName, tp.MOBILE_PHONE phone, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, tpp.GATHER_STATUS gatherStatus from t_person_project t LEFT JOIN t_person tp on (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp on tpp.PROJECT_ID = t.PROJECT_ID where 1=1 and t.USER_ID = 1 ORDER BY PERSON_PROJECT_ID ASC LIMIT 0,10;
2019-04-28 11:12:52.372 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:12:52.417 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 11:12:52 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 11:16:05.237 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 11:16:05.266 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 11:16:05 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T11:16:05.244+0800' WHERE username = 'mrbird';
2019-04-28 11:16:05.270 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 11:16:05 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 11:16:05.914 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 11:16:05 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T11:16:05.306+0800', '', '127.0.0.1' );
2019-04-28 11:16:29.230 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 11:16:29.236 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 11:16:29 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T11:16:29.233+0800' WHERE username = 'mrbird';
2019-04-28 11:16:29.237 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 11:16:29 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 11:16:29.998 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 11:16:29 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T11:16:29.330+0800', '', '127.0.0.1' );
2019-04-28 11:16:52.518 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 11:16:52.525 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 11:16:52 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T11:16:52.520+0800' WHERE username = 'mrbird';
2019-04-28 11:16:52.528 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 11:16:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 11:16:53.616 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 11:16:53 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T11:16:52.539+0800', '', '127.0.0.1' );
2019-04-28 11:16:53.790 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:16:53.794 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 11:16:53 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-04-28 11:16:54.280 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:16:54.281 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:16:54.287 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 11:16:54 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2019-04-28 11:16:54.290 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 11:16:54 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-04-28 11:16:54.293 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 11:16:54 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-04-28 11:16:54.296 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 11:16:54 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-04-28 11:16:54.301 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 11:16:54 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-04-28 11:16:54.324 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 11:16:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 11:16:54.328 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 11:16:54 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 11:16:58.007 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:16:58.017 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 11:16:58 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 11:17:12.177 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:17:12.195 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 11:17:12 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 11:17:25.529 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:17:25.553 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 11:17:25 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 163, '新增', 'person:add', '1', '2019-04-28T11:17:25.549+0800' );
2019-04-28 11:17:26.115 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:17:26.412 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 11:17:26 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 11:17:26.417 febs [asyncTaskExecutor-1] INFO  p6spy - 2019-04-28 11:17:26 | 耗时 5 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 146, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=173, parentId=163, menuName=新增, path=null, component=null, perms=person:add, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 11:17:25 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T11:17:25.708+0800', '' );
2019-04-28 11:17:31.092 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:17:31.102 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 11:17:31 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 11:17:46.489 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:17:46.497 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 11:17:46 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 163, '删除', 'person:delete', '1', '2019-04-28T11:17:46.495+0800' );
2019-04-28 11:17:47.115 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:17:47.123 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 11:17:47 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 11:17:47.665 febs [asyncTaskExecutor-2] INFO  p6spy - 2019-04-28 11:17:47 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 113, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=174, parentId=163, menuName=删除, path=null, component=null, perms=person:delete, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 11:17:46 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T11:17:46.623+0800', '' );
2019-04-28 11:17:50.645 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:17:50.654 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 11:17:50 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 11:18:07.031 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:18:07.046 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 11:18:07 | 耗时 6 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 163, '修改', 'person:update', '1', '2019-04-28T11:18:07.037+0800' );
2019-04-28 11:18:07.663 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:18:07.672 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 11:18:07 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 11:18:07.968 febs [asyncTaskExecutor-3] INFO  p6spy - 2019-04-28 11:18:07 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 217, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=175, parentId=163, menuName=修改, path=null, component=null, perms=person:update, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 11:18:07 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T11:18:07.258+0800', '' );
2019-04-28 11:18:11.289 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:18:11.298 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 11:18:11 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 11:18:31.944 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:18:31.953 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 11:18:31 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 163, '导出Excel', 'person:export', '1', '2019-04-28T11:18:31.950+0800' );
2019-04-28 11:18:32.548 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:18:32.556 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 11:18:32 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 11:18:33.043 febs [asyncTaskExecutor-4] INFO  p6spy - 2019-04-28 11:18:33 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 96, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=176, parentId=163, menuName=导出Excel, path=null, component=null, perms=person:export, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 11:18:31 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T11:18:32.049+0800', '' );
2019-04-28 11:18:37.175 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:18:37.182 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 11:18:37 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 11:18:51.395 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:18:51.405 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 11:18:51 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 163, '导入Excel', 'person:import', '1', '2019-04-28T11:18:51.402+0800' );
2019-04-28 11:18:52.476 febs [asyncTaskExecutor-5] INFO  p6spy - 2019-04-28 11:18:52 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 206, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=177, parentId=163, menuName=导入Excel, path=null, component=null, perms=person:import, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 11:18:51 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T11:18:51.624+0800', '' );
2019-04-28 11:18:52.482 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 11:18:52.489 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 11:18:52 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:09:19.150 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-04-28 12:50:09.212 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 12:50:09.250 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 12:50:09 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T12:50:09.239+0800' WHERE username = 'mrbird';
2019-04-28 12:50:09.253 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 12:50:09 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 12:50:09.894 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 12:50:09 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T12:50:09.312+0800', '', '127.0.0.1' );
2019-04-28 12:50:10.018 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:50:10.026 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 12:50:10 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-04-28 12:50:10.554 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:50:10.555 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:50:10.559 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:50:10 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2019-04-28 12:50:10.563 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:50:10 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-04-28 12:50:10.567 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:50:10 | 耗时 2 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-04-28 12:50:10.570 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 12:50:10 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 12:50:10.570 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:50:10 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-04-28 12:50:10.573 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 12:50:10 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 12:50:10.573 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:50:10 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-04-28 12:50:14.121 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:50:14.149 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 12:50:14 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_contract t WHERE 1 = 1;
2019-04-28 12:50:14.151 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 12:50:14 | 耗时 0 ms | SQL 语句：
select t.CONTRACT_ID, t.CONTRACT_NAME contractName, t.CONTRACT_CODE, t.START_TIME startTime, t.FINISH_TIME finishTime, t.MAKE_INVOICE_TIME makeInvoiceTime, t.PAY_WAY, t.COMPANY_SIGNED, t.CUSTOMER_SIGNED, t.SIGNED_TIME, t.SIGNED_ADDRESS, t.STORE_ADDRESS, t.FILL_TIME, t.MONEY, t.EXECUTE_STATUS, t.CONTRACT_INFO, t.ORDER_NUMBER, t.INFO, t.USER_ID, t.CREATE_TIME createTime, t.MODIFY_TIME from t_contract t where 1=1 ORDER BY CONTRACT_ID ASC LIMIT 0,10;
2019-04-28 12:50:21.262 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:50:21.270 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 12:50:21 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:50:25.775 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:50:25.786 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 12:50:25 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:50:45.692 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:50:45.705 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 12:50:45 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 158, '新增', 'contract:add', '1', '2019-04-28T12:50:45.703+0800' );
2019-04-28 12:50:46.302 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:50:46.310 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 12:50:46 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:50:46.590 febs [asyncTaskExecutor-1] INFO  p6spy - 2019-04-28 12:50:46 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 193, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=178, parentId=158, menuName=新增, path=null, component=null, perms=contract:add, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:50:45 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:50:45.897+0800', '' );
2019-04-28 12:50:50.371 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:50:50.380 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 12:50:50 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:51:05.043 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:51:05.054 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 12:51:05 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 158, '修改', 'contract:update', '1', '2019-04-28T12:51:05.051+0800' );
2019-04-28 12:51:06.170 febs [asyncTaskExecutor-2] INFO  p6spy - 2019-04-28 12:51:06 | 耗时 4 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 127, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=179, parentId=158, menuName=修改, path=null, component=null, perms=contract:update, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:51:05 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:51:05.179+0800', '' );
2019-04-28 12:51:06.172 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:51:06.181 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 12:51:06 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:51:45.518 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:51:45.526 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:51:45 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:51:58.212 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:51:58.222 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 12:51:58 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:52:21.618 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:52:21.627 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 12:52:21 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:52:31.803 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:52:31.811 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 12:52:31 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, type, create_time ) VALUES ( 158, '删除', '1', '2019-04-28T12:52:31.808+0800' );
2019-04-28 12:52:32.434 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:52:32.443 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:52:32 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:52:32.630 febs [asyncTaskExecutor-3] INFO  p6spy - 2019-04-28 12:52:32 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 104, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=180, parentId=158, menuName=删除, path=null, component=null, perms=null, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:52:31 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:52:31.912+0800', '' );
2019-04-28 12:52:39.829 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:52:39.837 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:52:39 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_contract t WHERE 1 = 1;
2019-04-28 12:52:39.839 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:52:39 | 耗时 1 ms | SQL 语句：
select t.CONTRACT_ID, t.CONTRACT_NAME contractName, t.CONTRACT_CODE, t.START_TIME startTime, t.FINISH_TIME finishTime, t.MAKE_INVOICE_TIME makeInvoiceTime, t.PAY_WAY, t.COMPANY_SIGNED, t.CUSTOMER_SIGNED, t.SIGNED_TIME, t.SIGNED_ADDRESS, t.STORE_ADDRESS, t.FILL_TIME, t.MONEY, t.EXECUTE_STATUS, t.CONTRACT_INFO, t.ORDER_NUMBER, t.INFO, t.USER_ID, t.CREATE_TIME createTime, t.MODIFY_TIME from t_contract t where 1=1 ORDER BY CONTRACT_ID ASC LIMIT 0,10;
2019-04-28 12:52:59.891 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:52:59.899 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 12:52:59 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:53:16.139 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:53:16.146 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 12:53:16 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 158, '合同信息', 'contract:view', '1', '2019-04-28T12:53:16.144+0800' );
2019-04-28 12:53:16.940 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:53:16.947 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 12:53:16 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:53:17.260 febs [asyncTaskExecutor-4] INFO  p6spy - 2019-04-28 12:53:17 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 177, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=181, parentId=158, menuName=合同信息, path=null, component=null, perms=contract:view, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:53:16 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:53:16.322+0800', '' );
2019-04-28 12:53:22.326 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:53:22.334 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:53:22 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:53:42.010 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:53:42.019 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:53:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 158, '导出Excel', 'contract:export', '1', '2019-04-28T12:53:42.016+0800' );
2019-04-28 12:53:42.717 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:53:42.724 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 12:53:42 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:53:42.889 febs [asyncTaskExecutor-5] INFO  p6spy - 2019-04-28 12:53:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 191, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=182, parentId=158, menuName=导出Excel, path=null, component=null, perms=contract:export, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:53:42 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:53:42.207+0800', '' );
2019-04-28 12:53:50.823 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:53:50.830 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 12:53:50 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:53:59.001 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:53:59.016 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 12:53:59 | 耗时 4 ms | SQL 语句：
UPDATE t_menu SET parent_id=158, menu_name='删除', perms='contract:delete', type='1', modify_time='2019-04-28T12:53:59.007+0800' WHERE MENU_ID=180;
2019-04-28 12:53:59.019 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 12:53:59 | 耗时 1 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '180' );
2019-04-28 12:53:59.730 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:54:00.119 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:54:00 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:54:00.119 febs [asyncTaskExecutor-1] INFO  p6spy - 2019-04-28 12:54:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 116, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=180, parentId=158, menuName=删除, path=null, component=null, perms=contract:delete, icon=null, type=1, orderNum=null, createTime=null, modifyTime=Sun Apr 28 12:53:59 CST 2019, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:53:59.124+0800', '' );
2019-04-28 12:54:13.775 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:54:13.783 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:54:13 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:54:28.717 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:54:28.725 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 12:54:28 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 163, '人才信息', 'person:view', '1', '2019-04-28T12:54:28.722+0800' );
2019-04-28 12:54:29.590 febs [asyncTaskExecutor-2] INFO  p6spy - 2019-04-28 12:54:29 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 140, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=183, parentId=163, menuName=人才信息, path=null, component=null, perms=person:view, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:54:28 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:54:28.864+0800', '' );
2019-04-28 12:54:29.615 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:54:29.620 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 12:54:29 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:55:04.182 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:55:04.210 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 12:55:04 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_project_contact t LEFT JOIN t_person_project tp ON (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp ON (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe ON tpe.PERSON_ID = tp.PERSON_ID WHERE 1 = 1 AND tp.USER_ID = 1;
2019-04-28 12:55:04.212 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 12:55:04 | 耗时 1 ms | SQL 语句：
select t.PROJECT_CONTACT_ID, t.PERSON_PROJECT_ID, t.CONTACT_TYPE, tp.PERSON_STATUS, tpe.PERSON_NAME, tpe.MOBILE_PHONE, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, t.MODIFY_TIME, t.CREATE_TIME from t_project_contact t LEFT JOIN t_person_project tp on (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp on (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe on tpe.PERSON_ID = tp.PERSON_ID where 1=1 and tp.USER_ID = 1 ORDER BY PROJECT_CONTACT_ID ASC LIMIT 0,10;
2019-04-28 12:55:08.802 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:55:08.809 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:55:08 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 12:55:08.812 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:55:08 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 12:55:16.605 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:55:16.612 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:55:16 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:55:26.723 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:55:26.730 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 12:55:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-04-28 12:55:26.733 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 12:55:26 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 12:55:32.267 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:55:32.274 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 12:55:32 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:55:55.350 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:55:55.357 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 12:55:55 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 161, '新增', 'project:add', '1', '2019-04-28T12:55:55.355+0800' );
2019-04-28 12:55:56.355 febs [asyncTaskExecutor-3] INFO  p6spy - 2019-04-28 12:55:56 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 99, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=184, parentId=161, menuName=新增, path=null, component=null, perms=project:add, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:55:55 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:55:55.456+0800', '' );
2019-04-28 12:55:56.363 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:55:56.376 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:55:56 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:55:59.173 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:55:59.181 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:55:59 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:56:13.254 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:56:13.261 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 12:56:13 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 161, '修改', 'project:update', '1', '2019-04-28T12:56:13.259+0800' );
2019-04-28 12:56:13.902 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:56:13.908 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 12:56:13 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:56:14.054 febs [asyncTaskExecutor-4] INFO  p6spy - 2019-04-28 12:56:14 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 141, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=185, parentId=161, menuName=修改, path=null, component=null, perms=project:update, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:56:13 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:56:13.401+0800', '' );
2019-04-28 12:56:17.743 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:56:17.751 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 12:56:17 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:56:34.492 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:56:34.499 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:56:34 | 耗时 0 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 161, '项目信息', 'project:view', '1', '2019-04-28T12:56:34.497+0800' );
2019-04-28 12:56:35.350 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:56:35.357 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:56:35 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:56:35.542 febs [asyncTaskExecutor-5] INFO  p6spy - 2019-04-28 12:56:35 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 103, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=186, parentId=161, menuName=项目信息, path=null, component=null, perms=project:view, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:56:34 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:56:34.601+0800', '' );
2019-04-28 12:56:46.126 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:56:46.134 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 12:56:46 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:57:00.153 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:57:00.161 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 12:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 161, '删除', 'project:delete', '1', '2019-04-28T12:57:00.159+0800' );
2019-04-28 12:57:00.764 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:57:00.771 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 12:57:00 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:57:00.892 febs [asyncTaskExecutor-1] INFO  p6spy - 2019-04-28 12:57:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 61, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=187, parentId=161, menuName=删除, path=null, component=null, perms=project:delete, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:57:00 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:57:00.222+0800', '' );
2019-04-28 12:57:24.351 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:57:24.358 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:57:24 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:57:42.534 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:57:42.542 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:57:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 161, '导出Excel', 'project:export', '1', '2019-04-28T12:57:42.539+0800' );
2019-04-28 12:57:43.503 febs [asyncTaskExecutor-2] INFO  p6spy - 2019-04-28 12:57:43 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 116, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=188, parentId=161, menuName=导出Excel, path=null, component=null, perms=project:export, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:57:42 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:57:42.657+0800', '' );
2019-04-28 12:57:43.508 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:57:43.515 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 12:57:43 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:57:45.756 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:57:45.764 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 12:57:45 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 12:58:07.373 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:58:07.380 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 12:58:07 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 161, '导入Excel', 'project:import', '1', '2019-04-28T12:58:07.377+0800' );
2019-04-28 12:58:08.322 febs [asyncTaskExecutor-3] INFO  p6spy - 2019-04-28 12:58:08 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 195, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=189, parentId=161, menuName=导入Excel, path=null, component=null, perms=project:import, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 12:58:07 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T12:58:07.574+0800', '' );
2019-04-28 12:58:08.337 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:58:08.343 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:58:08 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:58:36.508 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:58:36.520 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:58:36 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM t_person_project t LEFT JOIN t_person tp ON (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp ON tpp.PROJECT_ID = t.PROJECT_ID WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 12:58:36.523 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:58:36 | 耗时 1 ms | SQL 语句：
select t.PERSON_PROJECT_ID, t.PERSON_ID, t.PROJECT_ID, t.PERSON_STATUS, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME, t.TITLE, t.DESCRIPTION, tp.PERSON_NAME personName, tp.MOBILE_PHONE phone, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, tpp.GATHER_STATUS gatherStatus from t_person_project t LEFT JOIN t_person tp on (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp on tpp.PROJECT_ID = t.PROJECT_ID where 1=1 and t.USER_ID = 1 ORDER BY PERSON_PROJECT_ID ASC LIMIT 0,10;
2019-04-28 12:58:54.853 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:58:54.874 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 12:58:54 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2019-04-28 12:58:54.877 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 12:58:54 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2019-04-28 12:58:59.452 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:58:59.458 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 12:58:59 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 12:58:59.520 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:58:59.531 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 12:58:59 | 耗时 0 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '1';
2019-04-28 12:59:57.839 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:59:57.860 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:57 | 耗时 2 ms | SQL 语句：
SELECT user_id,role_id FROM t_user_role WHERE role_id IN ('[Ljava.lang.String;@1e99a88b');
2019-04-28 12:59:57.918 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:57 | 耗时 54 ms | SQL 语句：
UPDATE t_role SET role_name='管理员', remark='管理员', modify_time='2019-04-28T12:59:57.861+0800' WHERE ROLE_ID=1;
2019-04-28 12:59:57.938 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:57 | 耗时 16 ms | SQL 语句：
DELETE FROM t_role_menu WHERE role_id = 1;
2019-04-28 12:59:57.954 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:57 | 耗时 14 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 1 );
2019-04-28 12:59:57.960 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:57 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 3 );
2019-04-28 12:59:57.974 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:57 | 耗时 12 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 11 );
2019-04-28 12:59:57.979 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:57 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 12 );
2019-04-28 12:59:57.992 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:57 | 耗时 11 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 13 );
2019-04-28 12:59:57.999 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:57 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 4 );
2019-04-28 12:59:58.004 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 14 );
2019-04-28 12:59:58.009 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 15 );
2019-04-28 12:59:58.014 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 16 );
2019-04-28 12:59:58.040 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 24 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 5 );
2019-04-28 12:59:58.045 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 17 );
2019-04-28 12:59:58.050 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 18 );
2019-04-28 12:59:58.058 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 19 );
2019-04-28 12:59:58.063 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 6 );
2019-04-28 12:59:58.073 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 20 );
2019-04-28 12:59:58.107 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 33 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 21 );
2019-04-28 12:59:58.113 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 22 );
2019-04-28 12:59:58.119 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 64 );
2019-04-28 12:59:58.124 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 65 );
2019-04-28 12:59:58.139 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 14 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 66 );
2019-04-28 12:59:58.147 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 67 );
2019-04-28 12:59:58.153 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 125 );
2019-04-28 12:59:58.158 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 101 );
2019-04-28 12:59:58.165 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 102 );
2019-04-28 12:59:58.170 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 103 );
2019-04-28 12:59:58.178 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 104 );
2019-04-28 12:59:58.188 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 10 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 105 );
2019-04-28 12:59:58.214 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 24 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 106 );
2019-04-28 12:59:58.219 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 107 );
2019-04-28 12:59:58.227 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 108 );
2019-04-28 12:59:58.240 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 11 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 109 );
2019-04-28 12:59:58.245 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 110 );
2019-04-28 12:59:58.252 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 58 );
2019-04-28 12:59:58.259 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 59 );
2019-04-28 12:59:58.287 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 26 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 61 );
2019-04-28 12:59:58.304 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 15 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 81 );
2019-04-28 12:59:58.309 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 82 );
2019-04-28 12:59:58.317 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 83 );
2019-04-28 12:59:58.322 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 128 );
2019-04-28 12:59:58.329 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 129 );
2019-04-28 12:59:58.336 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 130 );
2019-04-28 12:59:58.361 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 24 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 135 );
2019-04-28 12:59:58.371 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 131 );
2019-04-28 12:59:58.416 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 43 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 132 );
2019-04-28 12:59:58.499 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 81 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 133 );
2019-04-28 12:59:58.505 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 134 );
2019-04-28 12:59:58.510 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 137 );
2019-04-28 12:59:58.518 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 138 );
2019-04-28 12:59:58.527 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 8 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 139 );
2019-04-28 12:59:58.534 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 140 );
2019-04-28 12:59:58.539 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 141 );
2019-04-28 12:59:58.544 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 142 );
2019-04-28 12:59:58.553 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 143 );
2019-04-28 12:59:58.560 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 144 );
2019-04-28 12:59:58.577 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 16 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 145 );
2019-04-28 12:59:58.583 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 146 );
2019-04-28 12:59:58.608 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 24 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 147 );
2019-04-28 12:59:58.617 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 148 );
2019-04-28 12:59:58.624 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 149 );
2019-04-28 12:59:58.655 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 29 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 151 );
2019-04-28 12:59:58.660 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 152 );
2019-04-28 12:59:58.674 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 12 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 153 );
2019-04-28 12:59:58.681 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 154 );
2019-04-28 12:59:58.686 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 155 );
2019-04-28 12:59:58.691 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 156 );
2019-04-28 12:59:58.698 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 158 );
2019-04-28 12:59:58.726 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 26 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 157 );
2019-04-28 12:59:58.731 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 159 );
2019-04-28 12:59:58.739 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 161 );
2019-04-28 12:59:58.744 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 162 );
2019-04-28 12:59:58.750 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 163 );
2019-04-28 12:59:58.755 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 164 );
2019-04-28 12:59:58.782 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 26 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 2 );
2019-04-28 12:59:58.788 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 8 );
2019-04-28 12:59:58.803 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 14 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 10 );
2019-04-28 12:59:58.808 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 113 );
2019-04-28 12:59:58.838 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 28 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 121 );
2019-04-28 12:59:58.844 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 122 );
2019-04-28 12:59:58.850 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 123 );
2019-04-28 12:59:58.919 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 124 );
2019-04-28 12:59:58.928 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 127 );
2019-04-28 12:59:58.934 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 23 );
2019-04-28 12:59:58.942 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 24 );
2019-04-28 12:59:58.952 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 136 );
2019-04-28 12:59:58.958 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 165 );
2019-04-28 12:59:58.964 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 166 );
2019-04-28 12:59:58.971 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 167 );
2019-04-28 12:59:58.981 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 8 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 168 );
2019-04-28 12:59:58.988 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:58 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 169 );
2019-04-28 12:59:59.009 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 20 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 170 );
2019-04-28 12:59:59.016 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 171 );
2019-04-28 12:59:59.022 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 172 );
2019-04-28 12:59:59.028 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 184 );
2019-04-28 12:59:59.033 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 185 );
2019-04-28 12:59:59.039 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 186 );
2019-04-28 12:59:59.045 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 187 );
2019-04-28 12:59:59.062 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 13 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 188 );
2019-04-28 12:59:59.075 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 11 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 189 );
2019-04-28 12:59:59.080 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 178 );
2019-04-28 12:59:59.087 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 179 );
2019-04-28 12:59:59.092 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 180 );
2019-04-28 12:59:59.098 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 181 );
2019-04-28 12:59:59.104 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 182 );
2019-04-28 12:59:59.109 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 173 );
2019-04-28 12:59:59.114 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 174 );
2019-04-28 12:59:59.119 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 175 );
2019-04-28 12:59:59.136 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 16 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 176 );
2019-04-28 12:59:59.142 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 177 );
2019-04-28 12:59:59.150 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 183 );
2019-04-28 12:59:59.659 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 12:59:59.671 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2019-04-28 12:59:59.673 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 12:59:59 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2019-04-28 13:00:00.152 febs [asyncTaskExecutor-4] INFO  p6spy - 2019-04-28 13:00:00 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改角色', 1424, 'cc.mrbird.febs.system.controller.RoleController.updateRole()', ' role: "Role(roleId=1, roleName=管理员, remark=管理员, createTime=null, modifyTime=Sun Apr 28 12:59:57 CST 2019, createTimeFrom=null, createTimeTo=null, menuId=1,3,11,12,13,4,14,15,16,5,17,18,19,6,20,21,22,64,65,66,67,125,101,102,103,104,105,106,107,108,109,110,58,59,61,81,82,83,128,129,130,135,131,132,133,134,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,158,157,159,161,162,163,164,2,8,10,113,121,122,123,124,127,23,24,136,165,166,167,168,169,170,171,172,184,185,186,187,188,189,178,179,180,181,182,173,174,175,176,177,183)"', '127.0.0.1', '2019-04-28T12:59:59.271+0800', '' );
2019-04-28 13:00:35.043 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:00:35.047 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:00:35.065 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:00:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-04-28 13:00:35.067 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:00:35 | 耗时 0 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-04-28 13:00:35.079 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:00:35 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username ) TOTAL;
2019-04-28 13:00:35.082 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:00:35 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 group by u.username ORDER BY userId ASC LIMIT 0,10;
2019-04-28 13:02:50.010 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:02:50.022 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 13:02:50 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username ) TOTAL;
2019-04-28 13:02:50.025 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 13:02:50 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 group by u.username ORDER BY userId ASC LIMIT 0,10;
2019-04-28 13:02:50.042 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:02:50.047 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:02:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-04-28 13:02:50.049 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:02:50 | 耗时 0 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-04-28 13:02:55.738 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:02:55.739 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:02:55.742 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:02:55 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-04-28 13:02:55.744 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:02:55 | 耗时 0 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-04-28 13:02:55.746 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:02:55 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2019-04-28 13:02:55.747 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:02:55 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2019-04-28 13:04:24.137 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:04:24.137 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:04:24.142 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:04:24 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-04-28 13:04:24.144 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:04:24 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-04-28 13:04:24.146 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 13:04:24 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username ) TOTAL;
2019-04-28 13:04:24.148 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 13:04:24 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 group by u.username ORDER BY userId ASC LIMIT 0,10;
2019-04-28 13:04:45.988 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:04:45.993 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:04:45.997 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:04:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 GROUP BY u.username ) TOTAL;
2019-04-28 13:04:45.999 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:04:45 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-04-28 13:04:46.000 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:04:45 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 group by u.username ORDER BY userId ASC LIMIT 0,10;
2019-04-28 13:04:46.001 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:04:46 | 耗时 0 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-04-28 13:06:57.384 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:06:57.391 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:06:57 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:09:19.148 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-04-28 13:45:34.335 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:45:34.336 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:45:34.345 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:45:34 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-04-28 13:45:34.346 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:45:34 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 13:45:34.347 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:45:34 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:45:34.348 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:45:34 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 13:45:34.350 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:45:34 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:45:34.352 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:45:34 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-04-28 13:45:34.356 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:45:34 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-04-28 13:45:48.533 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:45:48.575 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:45:48 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc ON tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 AND u.user_id = 1 GROUP BY u.position_name ) TOTAL;
2019-04-28 13:45:48.577 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:45:48 | 耗时 1 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc on tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 AND u.user_id = 1 group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-04-28 13:45:59.925 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 13:45:59.931 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:45:59 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T13:45:59.928+0800' WHERE username = 'mrbird';
2019-04-28 13:45:59.933 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:45:59 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 13:46:00.658 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:46:00 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T13:46:00.032+0800', '', '127.0.0.1' );
2019-04-28 13:46:00.784 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:46:00.789 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 13:46:00 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-04-28 13:46:01.280 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:46:01.282 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:46:01.287 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:46:01 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-04-28 13:46:01.287 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:46:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 13:46:01.290 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:46:01 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:46:01.290 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:46:01 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 13:46:01.292 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:46:01 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:46:01.294 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:46:01 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-04-28 13:46:01.297 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:46:01 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-04-28 13:46:06.922 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:46:06.928 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:46:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc ON tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 AND u.user_id = 1 GROUP BY u.position_name ) TOTAL;
2019-04-28 13:46:06.929 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:46:06 | 耗时 0 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc on tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 AND u.user_id = 1 group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-04-28 13:46:32.031 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:46:32.066 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:46:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_person t WHERE 1 = 1;
2019-04-28 13:46:32.069 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:46:32 | 耗时 1 ms | SQL 语句：
select t.PERSON_ID, t.PERSON_NAME personName, t.PERSON_SEX, t.PERSON_SORT, t.PERSON_LEVEL, t.COMPANY_NAME, t.BIRTHDAY, t.ACCOUNT, t.COMPUTER, t.CONTENT, t.CREATE_TIME, t.CURRENT_ADDRESS, t.CURRENT_SALARY, t.EDUCATION_BACKGROUND, t.EDUCATION_RECORD, t.HEIGHT, t.WEIGHT, t.IDENTITY_CARD, t.EMAIL, t.LANGUAGE_SKILL, t.GRADUATE_INSTITUTIONS, t.GRADUATE_TIME, t.WORK_YEARS, t.WORK_EXPERIENCE, t.WORK_PHONE, t.MAJOR, t.MARITAL_STATUS, t.MOBILE_PHONE, t.MODIFY_TIME, t.OFFICE_TERM, t.NATION, t.NATIONALITY, t.NATIVE_PLACE, t.SELF_ASSESSMENT, t.FAMILY_PHONE, t.POSITION_NAME, t.PROJECT_EXPERIENCE, t.TRAIN_RECORD, t.RELATED_SKILL, t.USER_ID, t.RESUME from t_person t where 1=1 ORDER BY person_id ASC LIMIT 0,10;
2019-04-28 13:46:39.650 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:46:39.655 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 13:46:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_contract t WHERE 1 = 1;
2019-04-28 13:46:39.657 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 13:46:39 | 耗时 1 ms | SQL 语句：
select t.CONTRACT_ID, t.CONTRACT_NAME contractName, t.CONTRACT_CODE, t.START_TIME startTime, t.FINISH_TIME finishTime, t.MAKE_INVOICE_TIME makeInvoiceTime, t.PAY_WAY, t.COMPANY_SIGNED, t.CUSTOMER_SIGNED, t.SIGNED_TIME, t.SIGNED_ADDRESS, t.STORE_ADDRESS, t.FILL_TIME, t.MONEY, t.EXECUTE_STATUS, t.CONTRACT_INFO, t.ORDER_NUMBER, t.INFO, t.USER_ID, t.CREATE_TIME createTime, t.MODIFY_TIME from t_contract t where 1=1 ORDER BY CONTRACT_ID ASC LIMIT 0,10;
2019-04-28 13:47:17.506 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 1000 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-04-28 13:47:17.509 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-04-28 13:47:19.184 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-28 13:47:19.188 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-04-28 13:47:19.318 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 112ms. Found 0 repository interfaces.
2019-04-28 13:47:19.944 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$daa58306] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.377 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b4f4ceaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.393 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.399 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4b665dd9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$b6e65f82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$afab16d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.750 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.763 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.955 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.971 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$9cedb9e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.981 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:20.994 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$892eca73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:21.011 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:21.015 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:21.021 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-04-28 13:47:21.036 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-04-28 13:47:22.755 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-04-28 13:47:22.756 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-04-28 13:47:22.756 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-04-28 13:47:22.756 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-04-28 13:47:22.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:22.775 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:22.785 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.175 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.183 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.194 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.239 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.240 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.251 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.253 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.255 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.329 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.417 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.419 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.424 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.540 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.542 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.547 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.577 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.616 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$a6f9dd6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.622 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$59469f83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.625 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$145d8572] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.636 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.639 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.645 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$3b28fca0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.656 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$89057af9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.672 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.675 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.683 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.688 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.726 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.749 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.760 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.761 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.770 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:24.788 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:47:25.201 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-04-28 13:47:25.215 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-04-28 13:47:25.221 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-04-28 13:47:25.222 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-04-28 13:47:25.228 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-04-28 13:47:25.228 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-04-28 13:47:25.228 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-04-28 13:47:26.303 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-04-28 13:47:26.525 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-04-28 13:47:26.525 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 8867 ms
2019-04-28 13:47:27.196 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-28 13:47:27.196 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-04-28 13:47:27.196 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-28 13:47:27.196 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-04-28 13:47:27.196 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-04-28 13:47:27.196 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-04-28 13:47:27.197 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-28 13:47:27.197 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-04-28 13:47:28.075 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-04-28 13:47:29.429 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-04-28 13:47:29.507 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-04-28 13:47:29.664 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-04-28 13:47:29.682 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-04-28 13:47:29.690 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-04-28 13:47:29.702 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-04-28 13:47:29.706 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 13.559 seconds (JVM running for 17.326)
2019-04-28 13:47:29.718 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-04-28 13:47:29.720 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-04-28 13:47:29.720 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-04-28 13:47:29.804 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-04-28 13:47:29.837 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 13:47:29.940 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 13:47:29.956 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 13:47:29.976 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-04-28 13:47:29.982 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-04-28 13:47:29.985 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-04-28 13:47:29.988 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-04-28 13:47:29.991 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-04-28 13:47:29.993 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-04-28 13:47:29.996 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-04-28 13:47:29.999 febs [main] INFO  p6spy - 2019-04-28 13:47:29 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-04-28 13:47:30.003 febs [main] INFO  p6spy - 2019-04-28 13:47:30 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-04-28 13:47:30.007 febs [main] INFO  p6spy - 2019-04-28 13:47:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-04-28 13:47:30.012 febs [main] INFO  p6spy - 2019-04-28 13:47:30 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-04-28 13:47:30.016 febs [main] INFO  p6spy - 2019-04-28 13:47:30 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-04-28 13:47:30.018 febs [main] INFO  p6spy - 2019-04-28 13:47:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-04-28 13:47:30.031 febs [main] INFO  p6spy - 2019-04-28 13:47:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-04-28 13:47:30.037 febs [main] INFO  p6spy - 2019-04-28 13:47:30 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-04-28 13:47:30.043 febs [main] INFO  p6spy - 2019-04-28 13:47:30 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-04-28 13:47:30.047 febs [main] INFO  p6spy - 2019-04-28 13:47:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-04-28 13:47:30.049 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-04-28 13:47:30.049 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-04-28 13:47:30.049 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-04-28 13:47:30.049 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-04-28 13:47:30.049 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-04-28T13:47:30.049
2019-04-28 13:47:30.795 febs [RMI TCP Connection(7)-127.0.0.1] INFO  p6spy - 2019-04-28 13:47:30 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-04-28 13:47:30.853 febs [RMI TCP Connection(8)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-04-28 13:47:30.854 febs [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-04-28 13:47:30.877 febs [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2019-04-28 13:47:42.719 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 13:47:42.761 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:47:42 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T13:47:42.736+0800' WHERE username = 'mrbird';
2019-04-28 13:47:42.765 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:47:42 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 13:47:43.442 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:47:43 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T13:47:42.852+0800', '', '127.0.0.1' );
2019-04-28 13:47:43.762 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:47:43.787 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:47:43 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-04-28 13:47:44.687 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:47:44.696 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:47:44.703 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:47:44 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-04-28 13:47:44.706 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:47:44 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:47:44.708 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:47:44 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:47:44.712 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:47:44 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-04-28 13:47:44.716 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:47:44 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-04-28 13:47:44.800 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:47:44 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 13:47:44.811 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:47:44 | 耗时 2 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 13:47:49.193 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:48:06.639 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:48:06.659 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:48:06 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2019-04-28 13:48:06.661 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:48:06 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2019-04-28 13:48:09.761 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:48:09.772 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:48:09 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:48:09.856 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:48:09.870 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 13:48:09 | 耗时 1 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '1';
2019-04-28 13:48:25.362 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:48:25.373 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:48:25 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:49:07.638 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:49:07.656 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:49:07 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 13:49:46.427 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:49:46.452 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:49:46 | 耗时 1 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, perms, type, create_time ) VALUES ( 144, '职位信息', 'position:view', '1', '2019-04-28T13:49:46.448+0800' );
2019-04-28 13:49:47.105 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:49:47.235 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:49:47 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:49:47.239 febs [asyncTaskExecutor-1] INFO  p6spy - 2019-04-28 13:49:47 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 135, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=190, parentId=144, menuName=职位信息, path=null, component=null, perms=position:view, icon=null, type=1, orderNum=null, createTime=Sun Apr 28 13:49:46 CST 2019, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T13:49:46.594+0800', '' );
2019-04-28 13:49:54.808 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:49:54.816 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:49:54 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:49:54.862 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:49:54.867 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 13:49:54 | 耗时 1 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '1';
2019-04-28 13:50:01.901 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:50:01.918 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:01 | 耗时 1 ms | SQL 语句：
SELECT user_id,role_id FROM t_user_role WHERE role_id IN ('[Ljava.lang.String;@1719f2f');
2019-04-28 13:50:01.993 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:01 | 耗时 69 ms | SQL 语句：
UPDATE t_role SET role_name='管理员', remark='管理员', modify_time='2019-04-28T13:50:01.920+0800' WHERE ROLE_ID=1;
2019-04-28 13:50:02.002 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
DELETE FROM t_role_menu WHERE role_id = 1;
2019-04-28 13:50:02.029 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 25 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 1 );
2019-04-28 13:50:02.035 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 3 );
2019-04-28 13:50:02.040 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 11 );
2019-04-28 13:50:02.048 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 12 );
2019-04-28 13:50:02.056 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 13 );
2019-04-28 13:50:02.067 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 8 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 4 );
2019-04-28 13:50:02.076 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 14 );
2019-04-28 13:50:02.085 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 15 );
2019-04-28 13:50:02.090 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 16 );
2019-04-28 13:50:02.115 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 22 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 5 );
2019-04-28 13:50:02.119 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 17 );
2019-04-28 13:50:02.127 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 18 );
2019-04-28 13:50:02.134 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 19 );
2019-04-28 13:50:02.139 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 6 );
2019-04-28 13:50:02.144 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 20 );
2019-04-28 13:50:02.151 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 21 );
2019-04-28 13:50:02.156 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 22 );
2019-04-28 13:50:02.164 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 64 );
2019-04-28 13:50:02.171 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 65 );
2019-04-28 13:50:02.178 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 66 );
2019-04-28 13:50:02.184 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 67 );
2019-04-28 13:50:02.194 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 8 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 125 );
2019-04-28 13:50:02.200 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 101 );
2019-04-28 13:50:02.206 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 102 );
2019-04-28 13:50:02.211 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 103 );
2019-04-28 13:50:02.232 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 19 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 104 );
2019-04-28 13:50:02.238 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 105 );
2019-04-28 13:50:02.273 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 33 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 106 );
2019-04-28 13:50:02.280 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 107 );
2019-04-28 13:50:02.294 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 13 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 108 );
2019-04-28 13:50:02.301 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 109 );
2019-04-28 13:50:02.306 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 110 );
2019-04-28 13:50:02.312 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 58 );
2019-04-28 13:50:02.323 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 59 );
2019-04-28 13:50:02.330 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 61 );
2019-04-28 13:50:02.339 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 81 );
2019-04-28 13:50:02.356 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 16 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 82 );
2019-04-28 13:50:02.362 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 83 );
2019-04-28 13:50:02.367 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 128 );
2019-04-28 13:50:02.372 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 129 );
2019-04-28 13:50:02.378 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 130 );
2019-04-28 13:50:02.385 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 135 );
2019-04-28 13:50:02.390 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 131 );
2019-04-28 13:50:02.416 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 24 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 132 );
2019-04-28 13:50:02.421 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 133 );
2019-04-28 13:50:02.426 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 134 );
2019-04-28 13:50:02.430 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 137 );
2019-04-28 13:50:02.436 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 138 );
2019-04-28 13:50:02.440 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 139 );
2019-04-28 13:50:02.445 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 140 );
2019-04-28 13:50:02.452 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 141 );
2019-04-28 13:50:02.458 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 142 );
2019-04-28 13:50:02.463 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 143 );
2019-04-28 13:50:02.468 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 144 );
2019-04-28 13:50:02.473 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 145 );
2019-04-28 13:50:02.481 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 146 );
2019-04-28 13:50:02.486 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 147 );
2019-04-28 13:50:02.490 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 148 );
2019-04-28 13:50:02.495 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 149 );
2019-04-28 13:50:02.502 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 151 );
2019-04-28 13:50:02.509 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 152 );
2019-04-28 13:50:02.514 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 153 );
2019-04-28 13:50:02.517 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 154 );
2019-04-28 13:50:02.526 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 7 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 155 );
2019-04-28 13:50:02.532 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 156 );
2019-04-28 13:50:02.539 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 158 );
2019-04-28 13:50:02.544 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 157 );
2019-04-28 13:50:02.550 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 159 );
2019-04-28 13:50:02.564 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 12 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 161 );
2019-04-28 13:50:02.570 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 162 );
2019-04-28 13:50:02.575 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 163 );
2019-04-28 13:50:02.580 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 164 );
2019-04-28 13:50:02.585 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 2 );
2019-04-28 13:50:02.591 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 8 );
2019-04-28 13:50:02.597 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 10 );
2019-04-28 13:50:02.602 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 113 );
2019-04-28 13:50:02.607 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 121 );
2019-04-28 13:50:02.612 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 122 );
2019-04-28 13:50:02.617 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 123 );
2019-04-28 13:50:02.625 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 124 );
2019-04-28 13:50:02.630 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 127 );
2019-04-28 13:50:02.637 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 23 );
2019-04-28 13:50:02.642 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 24 );
2019-04-28 13:50:02.647 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 136 );
2019-04-28 13:50:02.653 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 165 );
2019-04-28 13:50:02.658 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 166 );
2019-04-28 13:50:02.662 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 167 );
2019-04-28 13:50:02.668 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 168 );
2019-04-28 13:50:02.674 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 169 );
2019-04-28 13:50:02.678 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 170 );
2019-04-28 13:50:02.684 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 171 );
2019-04-28 13:50:02.692 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 172 );
2019-04-28 13:50:02.697 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 184 );
2019-04-28 13:50:02.702 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 185 );
2019-04-28 13:50:02.707 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 186 );
2019-04-28 13:50:02.715 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 187 );
2019-04-28 13:50:02.720 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 188 );
2019-04-28 13:50:02.724 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 189 );
2019-04-28 13:50:02.741 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 15 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 178 );
2019-04-28 13:50:02.746 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 179 );
2019-04-28 13:50:02.753 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 180 );
2019-04-28 13:50:02.760 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 181 );
2019-04-28 13:50:02.771 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 9 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 182 );
2019-04-28 13:50:02.776 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 173 );
2019-04-28 13:50:02.783 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 6 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 174 );
2019-04-28 13:50:02.792 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 8 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 175 );
2019-04-28 13:50:02.798 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 4 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 176 );
2019-04-28 13:50:02.804 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 5 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 177 );
2019-04-28 13:50:02.809 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 183 );
2019-04-28 13:50:02.814 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 13:50:02 | 耗时 3 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 1, 190 );
2019-04-28 13:50:03.611 febs [asyncTaskExecutor-2] INFO  p6spy - 2019-04-28 13:50:03 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改角色', 960, 'cc.mrbird.febs.system.controller.RoleController.updateRole()', ' role: "Role(roleId=1, roleName=管理员, remark=管理员, createTime=null, modifyTime=Sun Apr 28 13:50:01 CST 2019, createTimeFrom=null, createTimeTo=null, menuId=1,3,11,12,13,4,14,15,16,5,17,18,19,6,20,21,22,64,65,66,67,125,101,102,103,104,105,106,107,108,109,110,58,59,61,81,82,83,128,129,130,135,131,132,133,134,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,158,157,159,161,162,163,164,2,8,10,113,121,122,123,124,127,23,24,136,165,166,167,168,169,170,171,172,184,185,186,187,188,189,178,179,180,181,182,173,174,175,176,177,183,190)"', '127.0.0.1', '2019-04-28T13:50:02.869+0800', '' );
2019-04-28 13:50:03.620 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:50:03.628 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:50:03 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2019-04-28 13:50:03.630 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:50:03 | 耗时 1 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2019-04-28 13:50:08.938 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 13:50:08.944 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:50:08 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T13:50:08.941+0800' WHERE username = 'mrbird';
2019-04-28 13:50:08.945 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:50:08 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 13:50:09.943 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:50:09 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T13:50:08.968+0800', '', '127.0.0.1' );
2019-04-28 13:50:10.052 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:50:10.056 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 13:50:10 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-04-28 13:50:10.558 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:50:10.562 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:50:10.568 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:50:10 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-04-28 13:50:10.569 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:50:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 13:50:10.571 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:50:10 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:50:10.572 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:50:10 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 13:50:10.574 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:50:10 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:50:10.579 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:50:10 | 耗时 4 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-04-28 13:50:10.583 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:50:10 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-04-28 13:50:15.869 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:50:27.135 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 22024 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-04-28 13:50:27.140 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-04-28 13:50:30.174 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-28 13:50:30.176 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-04-28 13:50:30.288 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 95ms. Found 0 repository interfaces.
2019-04-28 13:50:30.722 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$b7076010] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:30.911 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.256 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9156abb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.295 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$27c83ae3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$93483c8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.490 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$8c0cf3e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.524 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.532 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.641 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.655 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$794f96f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.662 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.670 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$6590a77d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.681 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.683 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.687 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-04-28 13:50:31.698 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-04-28 13:50:31.975 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-04-28 13:50:31.975 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-04-28 13:50:31.975 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-04-28 13:50:31.975 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-04-28 13:50:31.975 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:31.998 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.539 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.547 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.551 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.556 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.589 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.590 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.598 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.600 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.601 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.658 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.685 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.717 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.718 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.721 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.750 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.753 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.800 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.801 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.806 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.836 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.882 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$835bba74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.889 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$35a87c8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.894 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$f0bf627c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.905 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.910 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.918 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$178ad9aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.929 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.931 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$65675803] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.945 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.947 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.962 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:33.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:34.023 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:34.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:34.033 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:34.045 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:34.071 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 13:50:34.710 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-04-28 13:50:34.733 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-04-28 13:50:34.743 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-04-28 13:50:34.744 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-04-28 13:50:34.756 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-04-28 13:50:34.756 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-04-28 13:50:34.756 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-04-28 13:50:35.867 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-04-28 13:50:36.206 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-04-28 13:50:36.207 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 8885 ms
2019-04-28 13:50:37.259 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-28 13:50:37.259 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-04-28 13:50:37.260 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-28 13:50:37.260 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-04-28 13:50:37.260 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-04-28 13:50:37.260 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-04-28 13:50:37.260 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-28 13:50:37.260 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-04-28 13:50:38.349 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-04-28 13:50:40.034 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-04-28 13:50:40.128 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-04-28 13:50:40.273 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-04-28 13:50:40.290 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-04-28 13:50:40.302 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-04-28 13:50:40.316 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-04-28 13:50:40.320 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 14.432 seconds (JVM running for 17.683)
2019-04-28 13:50:40.336 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-04-28 13:50:40.338 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-04-28 13:50:40.338 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-04-28 13:50:40.439 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-04-28 13:50:40.478 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 13:50:40.617 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 13:50:40.638 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 13:50:40.662 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-04-28 13:50:40.670 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-04-28 13:50:40.675 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-04-28 13:50:40.679 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-04-28 13:50:40.684 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-04-28 13:50:40.688 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-04-28 13:50:40.693 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-04-28 13:50:40.697 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-04-28 13:50:40.702 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-04-28 13:50:40.706 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-04-28 13:50:40.711 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-04-28 13:50:40.717 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-04-28 13:50:40.720 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-04-28 13:50:40.724 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-04-28 13:50:40.729 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-04-28 13:50:40.738 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-04-28 13:50:40.742 febs [main] INFO  p6spy - 2019-04-28 13:50:40 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-04-28 13:50:40.744 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-04-28 13:50:40.744 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-04-28 13:50:40.744 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-04-28 13:50:40.744 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-04-28 13:50:40.744 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-04-28T13:50:40.744
2019-04-28 13:50:41.679 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-04-28 13:50:41.679 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-04-28 13:50:41.685 febs [RMI TCP Connection(9)-127.0.0.1] INFO  p6spy - 2019-04-28 13:50:41 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-04-28 13:50:41.703 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2019-04-28 13:52:16.320 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 13:52:16.514 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:52:16 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T13:52:16.484+0800' WHERE username = 'mrbird';
2019-04-28 13:52:16.516 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:52:16 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 13:52:17.211 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:52:17 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T13:52:16.558+0800', '', '127.0.0.1' );
2019-04-28 13:53:39.639 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 13:53:39.648 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:53:39 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T13:53:39.643+0800' WHERE username = 'mrbird';
2019-04-28 13:53:39.651 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:53:39 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 13:53:40.399 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:53:40 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T13:53:39.738+0800', '', '127.0.0.1' );
2019-04-28 13:53:40.600 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:53:40.633 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:53:40 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-04-28 13:53:41.162 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:53:41.168 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:53:41.174 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:53:41 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-04-28 13:53:41.178 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:53:41 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:53:41.181 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:53:41 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:53:41.185 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:53:41 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-04-28 13:53:41.190 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-04-28 13:53:41 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-04-28 13:53:41.280 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:53:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 13:53:41.290 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:53:41 | 耗时 2 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 13:53:45.526 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:53:45.571 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:53:45 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc ON tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 AND u.user_id = 1 GROUP BY u.position_name ) TOTAL;
2019-04-28 13:53:45.574 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:53:45 | 耗时 1 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc on tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 AND u.user_id = 1 group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-04-28 13:54:21.140 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:54:46.795 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:54:46.809 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:54:46 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:54:56.406 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:54:56.423 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:54:56 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 13:55:03.283 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:55:03.314 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:03 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET parent_id=148, menu_name='客户信息', path='/company/company', component='company/company/Company', perms='company:view', icon='file-text', type='0', order_num=1.0, modify_time='2019-04-28T13:55:03.306+0800' WHERE MENU_ID=149;
2019-04-28 13:55:03.316 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:03 | 耗时 0 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '149' );
2019-04-28 13:55:03.320 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:03 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='1';
2019-04-28 13:55:03.322 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:03 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 13:55:03.326 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:03 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 13:55:04.114 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:55:04.654 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:55:04 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:55:04.658 febs [asyncTaskExecutor-1] INFO  p6spy - 2019-04-28 13:55:04 | 耗时 3 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 127, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=149, parentId=148, menuName=客户信息, path=/company/company, component=company/company/Company, perms=company:view, icon=file-text, type=0, orderNum=1.0, createTime=null, modifyTime=Sun Apr 28 13:55:03 CST 2019, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T13:55:03.985+0800', '' );
2019-04-28 13:55:17.263 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:55:17.271 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:55:17 | 耗时 1 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '147' );
2019-04-28 13:55:17.288 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:55:17 | 耗时 15 ms | SQL 语句：
DELETE FROM t_menu WHERE menu_id IN ( SELECT m.menu_id FROM ( SELECT menu_id FROM t_menu WHERE FIND_IN_SET( menu_id, findMenuChildren ( '147' ) ) > 0 ) m );
2019-04-28 13:55:17.290 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:55:17 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='1';
2019-04-28 13:55:17.293 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:55:17 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 13:55:17.299 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:55:17 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 13:55:17.919 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:55:17.928 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:55:17 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:55:18.159 febs [asyncTaskExecutor-2] INFO  p6spy - 2019-04-28 13:55:18 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '删除菜单/按钮', 132, 'cc.mrbird.febs.system.controller.MenuController.deleteMenus()', ' menuIds: "147"', '127.0.0.1', '2019-04-28T13:55:17.433+0800', '' );
2019-04-28 13:55:45.576 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:55:45.584 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:55:45 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 13:55:51.948 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:55:51.958 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:51 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET parent_id=0, menu_name='职位管理', path='/position', component='PageView', perms='position:view', icon='team', type='0', order_num=4.0, modify_time='2019-04-28T13:55:51.954+0800' WHERE MENU_ID=141;
2019-04-28 13:55:51.960 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:51 | 耗时 1 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '141' );
2019-04-28 13:55:51.963 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='2';
2019-04-28 13:55:51.966 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-04-28 13:55:51.970 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:51 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-04-28 13:55:51.973 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='1';
2019-04-28 13:55:51.975 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 13:55:51.981 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:51 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 13:55:51.987 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:51 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='16';
2019-04-28 13:55:51.989 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:51 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-04-28 13:55:51.992 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:55:51 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-04-28 13:55:52.821 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:55:52.829 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:55:52 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:55:53.329 febs [asyncTaskExecutor-3] INFO  p6spy - 2019-04-28 13:55:53 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 181, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=141, parentId=0, menuName=职位管理, path=/position, component=PageView, perms=position:view, icon=team, type=0, orderNum=4.0, createTime=null, modifyTime=Sun Apr 28 13:55:51 CST 2019, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T13:55:52.146+0800', '' );
2019-04-28 13:56:01.001 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:56:01.009 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:56:01 | 耗时 0 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '190' );
2019-04-28 13:56:01.022 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:56:01 | 耗时 11 ms | SQL 语句：
DELETE FROM t_menu WHERE menu_id IN ( SELECT m.menu_id FROM ( SELECT menu_id FROM t_menu WHERE FIND_IN_SET( menu_id, findMenuChildren ( '190' ) ) > 0 ) m );
2019-04-28 13:56:01.024 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:56:01 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='1';
2019-04-28 13:56:01.026 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:56:01 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 13:56:01.031 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:56:01 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 13:56:01.817 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:56:01.824 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:56:01 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:56:02.018 febs [asyncTaskExecutor-4] INFO  p6spy - 2019-04-28 13:56:02 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '删除菜单/按钮', 133, 'cc.mrbird.febs.system.controller.MenuController.deleteMenus()', ' menuIds: "190"', '127.0.0.1', '2019-04-28T13:56:01.143+0800', '' );
2019-04-28 13:56:10.223 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:56:10.232 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:56:10 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 13:56:17.378 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:56:17.387 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:56:17 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET parent_id=0, menu_name='项目管理', path='/project', component='PageView', perms='project:view', icon='folder-open', type='0', order_num=7.0, modify_time='2019-04-28T13:56:17.384+0800' WHERE MENU_ID=152;
2019-04-28 13:56:17.388 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:56:17 | 耗时 0 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '152' );
2019-04-28 13:56:17.391 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:56:17 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='1';
2019-04-28 13:56:17.394 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:56:17 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 13:56:17.398 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:56:17 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 13:56:34.904 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:56:34.914 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:56:34 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET parent_id=0, menu_name='项目管理', path='/project', component='PageView', perms='project:view', icon='folder-open', type='0', order_num=7.0, modify_time='2019-04-28T13:56:34.911+0800' WHERE MENU_ID=152;
2019-04-28 13:56:34.916 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:56:34 | 耗时 1 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '152' );
2019-04-28 13:56:34.918 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:56:34 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='1';
2019-04-28 13:56:34.921 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:56:34 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 13:56:34.925 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:56:34 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 13:56:35.757 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:56:35.766 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:56:35 | 耗时 2 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:56:36.197 febs [asyncTaskExecutor-5] INFO  p6spy - 2019-04-28 13:56:36 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 205, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=152, parentId=0, menuName=项目管理, path=/project, component=PageView, perms=project:view, icon=folder-open, type=0, orderNum=7.0, createTime=null, modifyTime=Sun Apr 28 13:56:34 CST 2019, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T13:56:35.119+0800', '' );
2019-04-28 13:56:41.889 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:56:41.898 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:56:41 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 13:56:48.879 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:56:48.889 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:56:48 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET parent_id=0, menu_name='合同管理', path='/contract', component='PageView', perms='contract:view', icon='file', type='0', order_num=8.0, modify_time='2019-04-28T13:56:48.885+0800' WHERE MENU_ID=153;
2019-04-28 13:56:48.891 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:56:48 | 耗时 1 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '153' );
2019-04-28 13:56:48.893 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:56:48 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='1';
2019-04-28 13:56:48.896 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:56:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 13:56:48.900 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:56:48 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 13:56:55.204 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:56:55.213 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:56:55 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET parent_id=0, menu_name='合同管理', path='/contract', component='PageView', perms='contract:view', icon='file', type='0', order_num=8.0, modify_time='2019-04-28T13:56:55.211+0800' WHERE MENU_ID=153;
2019-04-28 13:56:55.215 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:56:55 | 耗时 1 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '153' );
2019-04-28 13:56:55.218 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:56:55 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='1';
2019-04-28 13:56:55.220 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:56:55 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 13:56:55.226 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:56:55 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 13:56:55.829 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:56:55.837 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-04-28 13:56:55 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:56:55.982 febs [asyncTaskExecutor-1] INFO  p6spy - 2019-04-28 13:56:55 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 82, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=153, parentId=0, menuName=合同管理, path=/contract, component=PageView, perms=contract:view, icon=file, type=0, orderNum=8.0, createTime=null, modifyTime=Sun Apr 28 13:56:55 CST 2019, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T13:56:55.295+0800', '' );
2019-04-28 13:56:59.635 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:56:59.644 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:56:59 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2019-04-28 13:57:09.624 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:57:09.633 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:57:09 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET parent_id=0, menu_name='人才库', path='/person', component='PageView', perms='person:view', icon='user', type='0', order_num=9.0, modify_time='2019-04-28T13:57:09.630+0800' WHERE MENU_ID=162;
2019-04-28 13:57:09.635 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:57:09 | 耗时 1 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '162' );
2019-04-28 13:57:09.637 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:57:09 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user WHERE USER_ID='1';
2019-04-28 13:57:09.639 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:57:09 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 13:57:09.645 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:57:09 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 13:57:10.439 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:57:10.446 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:57:10 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2019-04-28 13:57:10.794 febs [asyncTaskExecutor-2] INFO  p6spy - 2019-04-28 13:57:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 129, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=162, parentId=0, menuName=人才库, path=/person, component=PageView, perms=person:view, icon=user, type=0, orderNum=9.0, createTime=null, modifyTime=Sun Apr 28 13:57:09 CST 2019, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-04-28T13:57:09.760+0800', '' );
2019-04-28 13:57:19.986 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 13:57:19.994 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:57:19 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T13:57:19.990+0800' WHERE username = 'mrbird';
2019-04-28 13:57:19.996 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:57:19 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 13:57:20.646 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:57:20 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T13:57:20.032+0800', '', '127.0.0.1' );
2019-04-28 13:57:23.374 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 13:57:23.381 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:57:23 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T13:57:23.378+0800' WHERE username = 'mrbird';
2019-04-28 13:57:23.384 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:57:23 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 13:57:24.465 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:57:24 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T13:57:23.398+0800', '', '127.0.0.1' );
2019-04-28 13:57:24.592 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:57:24.596 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:57:24 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-04-28 13:57:25.086 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:57:25.088 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:57:25.092 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:57:25 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-04-28 13:57:25.096 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:57:25 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:57:25.096 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 13:57:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 13:57:25.098 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:57:25 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-04-28 13:57:25.099 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 13:57:25 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 13:57:25.100 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:57:25 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-04-28 13:57:25.104 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 13:57:25 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-04-28 13:57:42.667 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:57:42.696 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:57:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-04-28 13:57:42.698 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:57:42 | 耗时 0 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-04-28 13:57:45.530 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:57:45.546 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:57:45 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-04-28 13:57:45.548 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:57:45 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 13:57:48.346 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:57:48.377 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:57:48 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_project_contact t LEFT JOIN t_person_project tp ON (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp ON (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe ON tpe.PERSON_ID = tp.PERSON_ID WHERE 1 = 1 AND tp.USER_ID = 1;
2019-04-28 13:57:48.380 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-04-28 13:57:48 | 耗时 1 ms | SQL 语句：
select t.PROJECT_CONTACT_ID, t.PERSON_PROJECT_ID, t.CONTACT_TYPE, tp.PERSON_STATUS, tpe.PERSON_NAME, tpe.MOBILE_PHONE, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, t.MODIFY_TIME, t.CREATE_TIME from t_project_contact t LEFT JOIN t_person_project tp on (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp on (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe on tpe.PERSON_ID = tp.PERSON_ID where 1=1 and tp.USER_ID = 1 ORDER BY PROJECT_CONTACT_ID ASC LIMIT 0,10;
2019-04-28 13:57:50.699 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:57:50.709 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:57:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 13:57:50.712 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-04-28 13:57:50 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 13:57:53.167 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:57:53.193 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 13:57:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_contract t WHERE 1 = 1;
2019-04-28 13:57:53.195 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 13:57:53 | 耗时 0 ms | SQL 语句：
select t.CONTRACT_ID, t.CONTRACT_NAME contractName, t.CONTRACT_CODE, t.START_TIME startTime, t.FINISH_TIME finishTime, t.MAKE_INVOICE_TIME makeInvoiceTime, t.PAY_WAY, t.COMPANY_SIGNED, t.CUSTOMER_SIGNED, t.SIGNED_TIME, t.SIGNED_ADDRESS, t.STORE_ADDRESS, t.FILL_TIME, t.MONEY, t.EXECUTE_STATUS, t.CONTRACT_INFO, t.ORDER_NUMBER, t.INFO, t.USER_ID, t.CREATE_TIME createTime, t.MODIFY_TIME from t_contract t where 1=1 ORDER BY CONTRACT_ID ASC LIMIT 0,10;
2019-04-28 13:57:55.546 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:57:55.581 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:57:55 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_person t WHERE 1 = 1;
2019-04-28 13:57:55.583 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-04-28 13:57:55 | 耗时 0 ms | SQL 语句：
select t.PERSON_ID, t.PERSON_NAME personName, t.PERSON_SEX, t.PERSON_SORT, t.PERSON_LEVEL, t.COMPANY_NAME, t.BIRTHDAY, t.ACCOUNT, t.COMPUTER, t.CONTENT, t.CREATE_TIME, t.CURRENT_ADDRESS, t.CURRENT_SALARY, t.EDUCATION_BACKGROUND, t.EDUCATION_RECORD, t.HEIGHT, t.WEIGHT, t.IDENTITY_CARD, t.EMAIL, t.LANGUAGE_SKILL, t.GRADUATE_INSTITUTIONS, t.GRADUATE_TIME, t.WORK_YEARS, t.WORK_EXPERIENCE, t.WORK_PHONE, t.MAJOR, t.MARITAL_STATUS, t.MOBILE_PHONE, t.MODIFY_TIME, t.OFFICE_TERM, t.NATION, t.NATIONALITY, t.NATIVE_PLACE, t.SELF_ASSESSMENT, t.FAMILY_PHONE, t.POSITION_NAME, t.PROJECT_EXPERIENCE, t.TRAIN_RECORD, t.RELATED_SKILL, t.USER_ID, t.RESUME from t_person t where 1=1 ORDER BY person_id ASC LIMIT 0,10;
2019-04-28 13:58:01.775 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 13:58:01.805 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:58:01 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_resume u WHERE 1 = 1 AND u.user_id = 1;
2019-04-28 13:58:01.808 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-04-28 13:58:01 | 耗时 1 ms | SQL 语句：
SELECT * from t_resume u where 1 = 1 AND u.user_id = 1 ORDER BY resume_id ASC LIMIT 0,10;
2019-04-28 14:06:33.154 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 14:06:33.170 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 14:06:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-04-28 14:06:33.181 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-04-28 14:06:33 | 耗时 9 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 14:06:33.762 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 14:06:33.773 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 14:06:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-04-28 14:06:33.775 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-04-28 14:06:33 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-04-28 14:07:38.947 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 14:07:38.975 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 14:07:38 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_person_project t LEFT JOIN t_person tp ON (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp ON tpp.PROJECT_ID = t.PROJECT_ID WHERE 1 = 1 AND t.USER_ID = 1;
2019-04-28 14:07:38.978 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 14:07:38 | 耗时 1 ms | SQL 语句：
select t.PERSON_PROJECT_ID, t.PERSON_ID, t.PROJECT_ID, t.PERSON_STATUS, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME, t.TITLE, t.DESCRIPTION, tp.PERSON_NAME personName, tp.MOBILE_PHONE phone, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, tpp.GATHER_STATUS gatherStatus from t_person_project t LEFT JOIN t_person tp on (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp on tpp.PROJECT_ID = t.PROJECT_ID where 1=1 and t.USER_ID = 1 ORDER BY PERSON_PROJECT_ID ASC LIMIT 0,10;
2019-04-28 14:44:03.443 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 52044 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-04-28 14:44:03.447 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-04-28 14:44:04.988 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-28 14:44:04.990 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-04-28 14:44:05.090 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 86ms. Found 0 repository interfaces.
2019-04-28 14:44:05.482 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$88bc862c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:05.824 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:05.959 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$630bd1d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:05.977 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:05.984 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.002 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f97d60ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.039 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$64fd62a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$5dc219fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.232 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.238 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.330 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$4b04bd0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.348 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.357 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$3745cd99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:06.376 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-04-28 14:44:06.386 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-04-28 14:44:07.541 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-04-28 14:44:07.541 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-04-28 14:44:07.541 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-04-28 14:44:07.541 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-04-28 14:44:07.541 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:07.578 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:07.609 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.048 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.059 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.066 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.071 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.109 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.110 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.118 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.119 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.174 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.201 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.239 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.240 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.312 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.315 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.366 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$5510e090] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$75da2a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c2748898] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.380 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.383 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.389 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$e93fffc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.396 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.398 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$371c7e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.410 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.412 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.420 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.444 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.468 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.469 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.480 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.500 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:44:09.893 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-04-28 14:44:09.908 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-04-28 14:44:09.914 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-04-28 14:44:09.914 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-04-28 14:44:09.921 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-04-28 14:44:09.921 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-04-28 14:44:09.921 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-04-28 14:44:11.000 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-04-28 14:44:11.216 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-04-28 14:44:11.216 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7603 ms
2019-04-28 14:44:12.132 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-28 14:44:12.133 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-04-28 14:44:12.133 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-28 14:44:12.133 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-04-28 14:44:12.133 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-04-28 14:44:12.133 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-04-28 14:44:12.133 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-28 14:44:12.133 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-04-28 14:44:13.037 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-04-28 14:44:14.335 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-04-28 14:44:14.405 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-04-28 14:44:14.546 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-04-28 14:44:14.569 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-04-28 14:44:14.585 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-04-28 14:44:14.594 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-04-28 14:44:14.597 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 12.462 seconds (JVM running for 15.036)
2019-04-28 14:44:14.609 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-04-28 14:44:14.610 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-04-28 14:44:14.610 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-04-28 14:44:14.679 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-04-28 14:44:14.706 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 14:44:14.806 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 14:44:14.824 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 14:44:14.848 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-04-28 14:44:14.855 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-04-28 14:44:14.860 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-04-28 14:44:14.864 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-04-28 14:44:14.869 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-04-28 14:44:14.872 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-04-28 14:44:14.876 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-04-28 14:44:14.880 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-04-28 14:44:14.884 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-04-28 14:44:14.888 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-04-28 14:44:14.892 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-04-28 14:44:14.896 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-04-28 14:44:14.899 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-04-28 14:44:14.904 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-04-28 14:44:14.911 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-04-28 14:44:14.914 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-04-28 14:44:14.918 febs [main] INFO  p6spy - 2019-04-28 14:44:14 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-04-28 14:44:14.919 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-04-28 14:44:14.920 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-04-28 14:44:14.920 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-04-28 14:44:14.920 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-04-28 14:44:14.920 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-04-28T14:44:14.920
2019-04-28 14:44:15.909 febs [RMI TCP Connection(8)-127.0.0.1] INFO  p6spy - 2019-04-28 14:44:15 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-04-28 14:44:15.994 febs [RMI TCP Connection(9)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-04-28 14:44:15.994 febs [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-04-28 14:44:16.011 febs [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2019-04-28 14:45:41.843 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 39860 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-04-28 14:45:41.848 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-04-28 14:45:43.466 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-28 14:45:43.469 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-04-28 14:45:43.571 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87ms. Found 0 repository interfaces.
2019-04-28 14:45:44.249 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$1d37ab1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.499 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f786f6bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.508 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.512 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.523 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8df885ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.542 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f9788797] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$f23d3eeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.730 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.736 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.835 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.846 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$df7fe1fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.852 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.861 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$cbc0f288] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.872 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.876 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:44.880 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-04-28 14:45:44.898 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-04-28 14:45:45.913 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-04-28 14:45:45.913 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-04-28 14:45:45.913 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-04-28 14:45:45.913 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-04-28 14:45:45.913 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:45.927 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:45.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.288 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.306 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.310 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.369 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.371 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.386 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.390 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.455 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.478 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.512 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.515 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.519 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.583 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.589 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.629 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.632 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.657 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.679 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$e98c057f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.684 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$9bd8c798] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.686 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$56efad87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.694 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.697 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.702 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$7dbb24b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.709 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.712 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$cb97a30e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.723 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.726 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.731 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.734 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.761 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.782 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.788 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.788 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.797 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:47.814 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-28 14:45:48.240 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-04-28 14:45:48.253 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-04-28 14:45:48.259 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-04-28 14:45:48.259 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-04-28 14:45:48.266 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-04-28 14:45:48.266 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-04-28 14:45:48.266 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-04-28 14:45:49.344 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-04-28 14:45:49.572 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-04-28 14:45:49.572 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7518 ms
2019-04-28 14:45:50.438 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-28 14:45:50.438 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-04-28 14:45:50.438 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-28 14:45:50.438 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-04-28 14:45:50.438 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-04-28 14:45:50.438 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-04-28 14:45:50.438 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-28 14:45:50.438 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-04-28 14:45:51.782 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-04-28 14:45:53.059 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-04-28 14:45:53.131 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-04-28 14:45:53.239 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-04-28 14:45:53.254 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-04-28 14:45:53.261 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-04-28 14:45:53.274 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-04-28 14:45:53.276 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 12.743 seconds (JVM running for 15.651)
2019-04-28 14:45:53.287 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-04-28 14:45:53.288 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-04-28 14:45:53.288 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-04-28 14:45:53.361 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-04-28 14:45:53.388 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 14:45:53.480 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-04-28 14:45:53.494 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-04-28 14:45:53.514 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-04-28 14:45:53.521 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-04-28 14:45:53.525 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-04-28 14:45:53.528 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-04-28 14:45:53.533 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-04-28 14:45:53.537 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-04-28 14:45:53.540 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-04-28 14:45:53.544 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-04-28 14:45:53.547 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-04-28 14:45:53.551 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-04-28 14:45:53.556 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-04-28 14:45:53.560 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-04-28 14:45:53.567 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-04-28 14:45:53.572 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-04-28 14:45:53.580 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-04-28 14:45:53.588 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-04-28 14:45:53.594 febs [main] INFO  p6spy - 2019-04-28 14:45:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-04-28 14:45:53.595 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-04-28 14:45:53.595 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-04-28 14:45:53.596 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-04-28 14:45:53.596 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-04-28 14:45:53.596 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-04-28T14:45:53.596
2019-04-28 14:45:54.230 febs [RMI TCP Connection(5)-127.0.0.1] INFO  p6spy - 2019-04-28 14:45:54 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-04-28 14:45:54.243 febs [RMI TCP Connection(7)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-04-28 14:45:54.243 febs [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-04-28 14:45:54.264 febs [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2019-04-28 14:46:15.925 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-04-28 14:46:16.081 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 14:46:16 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-04-28T14:46:16.056+0800' WHERE username = 'mrbird';
2019-04-28 14:46:16.084 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 14:46:16 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-04-28 14:46:16.720 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-04-28 14:46:16 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-04-28T14:46:16.172+0800', '', '127.0.0.1' );
2019-04-28 14:46:48.738 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-04-28 14:46:48.861 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 14:46:48 | 耗时 1 ms | SQL 语句：
INSERT INTO t_user ( username, password, email, mobile, status, create_time, ssex, avatar ) VALUES ( '蹦跶蹦跶', '86296b165286224d5f8032025a79c2f6', '15779551333@163.com', '15779551333', '1', '2019-04-28T14:46:48.855+0800', '0', 'default.jpg' );
2019-04-28 14:46:48.862 febs [http-nio-9527-exec-3] INFO  c.m.f.s.service.impl.UserServiceImpl - userId:17
2019-04-28 14:46:48.865 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 14:46:48 | 耗时 1 ms | SQL 语句：
INSERT INTO t_user_role ( user_id, role_id ) VALUES ( 17, 1 );
2019-04-28 14:46:48.869 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 14:46:48 | 耗时 1 ms | SQL 语句：
INSERT INTO t_user_config ( USER_ID, theme, layout, multi_page, fix_siderbar, fix_header, color ) VALUES ( 17, 'dark', 'side', '0', '1', '1', 'rgb(66, 185, 131)' );
2019-04-28 14:46:48.871 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 14:46:48 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-04-28 14:46:48.874 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 14:46:48 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-04-28 14:46:48.877 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 14:46:48 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-04-28 14:46:48.884 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-04-28 14:46:48 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-04-28 14:46:49.784 febs [asyncTaskExecutor-1] INFO  p6spy - 2019-04-28 14:46:49 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增用户', 125, 'cc.mrbird.febs.system.controller.UserController.addUser()', ' user: "User(userId=17, username=蹦跶蹦跶, password=86296b165286224d5f8032025a79c2f6, companyName=null, email=15779551333@163.com, mobile=15779551333, status=1, createTime=Sun Apr 28 14:46:48 CST 2019, modifyTime=null, birthday=null, lastLoginTime=null, ssex=0, description=null, avatar=default.jpg, resume=null, roleId=1, roleName=null, sortField=null, sortOrder=null, createTimeFrom=null, createTimeTo=null, id=null)"', '127.0.0.1', '2019-04-28T14:46:49.012+0800', '' );
