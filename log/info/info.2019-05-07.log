2019-05-07 09:12:20.366 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 6772 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-07 09:12:20.377 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-07 09:12:29.741 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-07 09:12:29.757 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-07 09:12:29.912 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 120ms. Found 0 repository interfaces.
2019-05-07 09:12:31.121 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$66c4c03d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:31.393 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:31.711 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$41140be1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:31.727 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:31.727 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:31.758 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d7859b10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:31.789 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$43059cb9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:32.201 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$3bca540d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:32.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:32.257 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:32.458 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:32.472 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$290cf71f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:32.481 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:32.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$154e07aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:32.515 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:32.518 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:32.537 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-07 09:12:32.554 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-07 09:12:33.110 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-07 09:12:33.110 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-07 09:12:33.110 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-07 09:12:33.110 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-07 09:12:33.110 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:33.126 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:33.142 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.745 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.761 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.761 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.761 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.792 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.792 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.917 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.948 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.995 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.995 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:35.995 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.054 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.056 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.104 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.229 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.282 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$33191aa1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.300 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$e565dcba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.304 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$a07cc2a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.344 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.360 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$c74839d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.375 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.391 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$1524b830] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.406 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.406 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.435 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.445 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.484 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.517 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.526 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.526 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.544 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:36.573 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 09:12:37.072 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-07 09:12:37.097 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-07 09:12:37.108 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-07 09:12:37.108 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-07 09:12:37.118 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-07 09:12:37.118 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-07 09:12:37.119 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-07 09:12:38.308 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-07 09:12:38.622 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-07 09:12:38.622 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 18144 ms
2019-05-07 09:12:40.142 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-07 09:12:40.142 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-07 09:12:40.142 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-07 09:12:40.142 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-07 09:12:40.142 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-07 09:12:40.142 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-07 09:12:40.142 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-07 09:12:40.142 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-07 09:12:41.424 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-07 09:12:42.945 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-07 09:12:43.100 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-07 09:12:43.288 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-07 09:12:43.366 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-07 09:12:43.381 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-07 09:12:43.381 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 27.075 seconds (JVM running for 33.773)
2019-05-07 09:12:43.397 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-07 09:12:43.428 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-07 09:12:43.428 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-07 09:12:43.428 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-07 09:12:43.614 febs [main] INFO  p6spy - 2019-05-07 09:12:43 | 耗时 21 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-07 09:12:43.677 febs [main] INFO  p6spy - 2019-05-07 09:12:43 | 耗时 27 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-07 09:12:43.817 febs [main] INFO  p6spy - 2019-05-07 09:12:43 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-07 09:12:43.850 febs [main] INFO  p6spy - 2019-05-07 09:12:43 | 耗时 20 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-07 09:12:43.994 febs [main] INFO  p6spy - 2019-05-07 09:12:43 | 耗时 5 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-07 09:12:44.000 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-07 09:12:44.000 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-07 09:12:44.000 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-07 09:12:44.015 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-07 09:12:44.015 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-07 09:12:44.015 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-07 09:12:44.031 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-07 09:12:44.031 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-07 09:12:44.031 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-07 09:12:44.046 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-07 09:12:44.046 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-07 09:12:44.046 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-07 09:12:44.046 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-07 09:12:44.062 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-07 09:12:44.062 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-07 09:12:44.077 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-07 09:12:44.118 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-07 09:12:44.118 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-07 09:12:44.118 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-07 09:12:44.118 febs [main] INFO  p6spy - 2019-05-07 09:12:44 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-07 09:12:44.118 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-07 09:12:44.118 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-07 09:12:44.134 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-07 09:12:44.134 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-07 09:12:44.134 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-07T09:12:44.134
2019-05-07 09:12:45.314 febs [RMI TCP Connection(18)-127.0.0.1] INFO  p6spy - 2019-05-07 09:12:45 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-07 09:12:46.036 febs [RMI TCP Connection(17)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-07 09:12:46.036 febs [RMI TCP Connection(17)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-07 09:12:46.068 febs [RMI TCP Connection(17)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 32 ms
2019-05-07 10:45:01.394 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 23956 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-07 10:45:01.400 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-07 10:45:04.179 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-07 10:45:04.185 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-07 10:45:04.365 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 144ms. Found 0 repository interfaces.
2019-05-07 10:45:04.959 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$e5d8c002] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.359 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.477 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c0280ba6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.493 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.508 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$56999ad5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.536 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c2199c7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.737 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$bade53d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.776 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.900 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.912 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$a820f6e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.916 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.923 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9462076f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.934 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.936 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:05.939 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-07 10:45:05.966 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-07 10:45:07.322 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-07 10:45:07.322 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-07 10:45:07.322 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-07 10:45:07.322 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-07 10:45:07.322 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:07.335 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:07.344 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:08.857 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:08.865 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:08.870 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:08.873 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:08.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:08.909 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:08.917 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:08.919 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:08.920 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:08.965 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:08.993 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.033 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.036 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.086 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.131 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.133 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.181 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.221 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.268 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b22d1a66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$6479dc7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.280 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$1f90c26e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.302 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.310 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$465c399c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.320 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.324 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$9438b7f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.341 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.347 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.358 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.397 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.423 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.429 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.429 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.443 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.461 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-07 10:45:09.884 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-07 10:45:09.900 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-07 10:45:09.905 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-07 10:45:09.905 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-07 10:45:09.912 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-07 10:45:09.912 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-07 10:45:09.912 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-07 10:45:10.982 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-07 10:45:11.616 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-07 10:45:11.617 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 10031 ms
2019-05-07 10:45:12.314 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-07 10:45:12.315 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-07 10:45:12.315 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-07 10:45:12.315 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-07 10:45:12.315 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-07 10:45:12.316 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-07 10:45:12.316 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-07 10:45:12.316 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-07 10:45:14.344 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-07 10:45:16.069 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-07 10:45:16.287 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-07 10:45:16.432 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-07 10:45:16.447 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-07 10:45:16.447 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-07 10:45:16.463 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-07 10:45:16.463 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 16.393 seconds (JVM running for 20.435)
2019-05-07 10:45:16.479 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-07 10:45:16.479 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-07 10:45:16.479 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-07 10:45:16.580 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-07 10:45:16.611 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-07 10:45:16.704 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-07 10:45:16.720 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-07 10:45:16.751 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-07 10:45:16.751 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-07 10:45:16.767 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-07 10:45:16.767 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-07 10:45:16.767 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-07 10:45:16.783 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-07 10:45:16.783 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-07 10:45:16.783 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-07 10:45:16.783 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-07 10:45:16.798 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-07 10:45:16.798 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-07 10:45:16.798 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-07 10:45:16.798 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-07 10:45:16.814 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-07 10:45:16.845 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-07 10:45:16.861 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 6 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-07 10:45:16.861 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-07 10:45:16.861 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-07 10:45:16.876 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-07 10:45:16.876 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-07 10:45:16.876 febs [main] INFO  p6spy - 2019-05-07 10:45:16 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-07 10:45:16.892 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-07 10:45:16.892 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-07 10:45:16.892 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-07 10:45:16.892 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-07 10:45:16.892 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-07T10:45:16.892
2019-05-07 10:45:18.722 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-07 10:45:18.722 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-07 10:45:18.786 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 64 ms
2019-05-07 10:45:20.741 febs [RMI TCP Connection(14)-127.0.0.1] INFO  p6spy - 2019-05-07 10:45:20 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-07 10:45:26.658 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-07 10:45:26.878 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-07 10:45:26 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-07T10:45:26.850+0800' WHERE username = 'mrbird';
2019-05-07 10:45:26.882 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-07 10:45:26 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-07 10:45:27.672 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-07 10:45:27 | 耗时 19 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-07T10:45:26.895+0800', '', '127.0.0.1' );
2019-05-07 10:45:33.291 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:45:33.325 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-07 10:45:33 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-07 10:45:34.646 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:45:34.646 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:45:34.652 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-07 10:45:34 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-07 10:45:34.658 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-07 10:45:34 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-07 10:45:34.660 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-07 10:45:34 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-07 10:45:34.665 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-07 10:45:34 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-07 10:45:34.669 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-07 10:45:34 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-07 10:45:34.776 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:45:34 | 耗时 11 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-07 10:45:34.786 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:45:34 | 耗时 2 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-07 10:45:44.049 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:45:44.084 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-07 10:45:44 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_resume u WHERE 1 = 1 AND u.user_id = 1;
2019-05-07 10:45:44.087 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-07 10:45:44 | 耗时 1 ms | SQL 语句：
SELECT u.resume_id, u.user_id, u.photo, u.profession, u.user_address, u.self_assessment, u.status, u.school_name, u.major_name, u.study_end, u.study_start, u.education, u.recruitment_flag, u.user_company, u.company_trade, u.position_name, u.company_address, u.under_number, u.employment_period_to, u.employment_period_from, u.department, u.job_performance, u.company_nature, u.company_scale, u.company_intro, u.monthly_pay_number, u.monthly_pay, u.add_information, u.label_name, u.language, u.proficiency, u.grade, u.project_name, u.company_name, u.time_end, u.time_start, u.description, u.duty, u.performance, u.resume_name, u.trade, u.functional, u.work_address, u.annual_salary, u.current_salary from t_resume u where 1 = 1 AND u.user_id = 1 ORDER BY resume_id ASC LIMIT 0,10;
2019-05-07 10:46:04.335 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:46:04.384 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-07 10:46:04 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-07 10:46:04.387 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-07 10:46:04 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.avatar, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-07 10:46:22.015 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:46:22.060 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-07 10:46:22 | 耗时 6 ms | SQL 语句：
SELECT COUNT(1) FROM t_person t WHERE 1 = 1;
2019-05-07 10:46:22.063 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-07 10:46:22 | 耗时 1 ms | SQL 语句：
select t.PERSON_ID, t.PERSON_NAME personName, t.PERSON_SEX, t.PERSON_SORT, t.PERSON_LEVEL, t.COMPANY_NAME, t.BIRTHDAY, t.ACCOUNT, t.COMPUTER, t.CONTENT, t.CREATE_TIME, t.CURRENT_ADDRESS, t.CURRENT_SALARY, t.EDUCATION_BACKGROUND, t.EDUCATION_RECORD, t.HEIGHT, t.WEIGHT, t.IDENTITY_CARD, t.EMAIL, t.LANGUAGE_SKILL, t.GRADUATE_INSTITUTIONS, t.GRADUATE_TIME, t.WORK_YEARS, t.WORK_EXPERIENCE, t.WORK_PHONE, t.MAJOR, t.MARITAL_STATUS, t.MOBILE_PHONE, t.MODIFY_TIME, t.OFFICE_TERM, t.NATION, t.NATIONALITY, t.NATIVE_PLACE, t.SELF_ASSESSMENT, t.FAMILY_PHONE, t.POSITION_NAME, t.PROJECT_EXPERIENCE, t.TRAIN_RECORD, t.RELATED_SKILL, t.USER_ID, t.RESUME from t_person t where 1=1 ORDER BY person_id ASC LIMIT 0,10;
2019-05-07 10:46:33.866 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:46:33.908 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-07 10:46:33 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc ON tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 GROUP BY u.position_name ) TOTAL;
2019-05-07 10:46:33.911 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-07 10:46:33 | 耗时 1 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc on tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-05-07 10:46:43.606 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:46:43.623 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-07 10:46:43 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc ON tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 OR u.position_name LIKE '%java%' GROUP BY u.position_name ) TOTAL;
2019-05-07 10:46:43.626 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-07 10:46:43 | 耗时 1 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc on tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 or u.position_name like '%java%' group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-05-07 10:48:45.669 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-07 10:48:45.686 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-07 10:48:45 | 耗时 8 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-07T10:48:45.675+0800' WHERE username = 'zhb666';
2019-05-07 10:48:45.689 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-07 10:48:45 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-07 10:48:46.301 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-07 10:48:46 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'zhb666', '2019-05-07T10:48:45.704+0800', '', '127.0.0.1' );
2019-05-07 10:48:46.933 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:48:46.938 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-07 10:48:46 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666') order by m.order_num;
2019-05-07 10:48:47.352 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:48:47.355 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:48:47.359 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:48:47 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-07 10:48:47.361 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:48:47 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-07 10:48:47.364 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:48:47 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-07 10:48:47.367 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:48:47 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-07 10:48:47.371 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:48:47 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'zhb666' group by days;
2019-05-07 10:49:13.802 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-07 10:49:13.811 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-07 10:49:13 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-07T10:49:13.806+0800' WHERE username = 'mrbird';
2019-05-07 10:49:13.815 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-07 10:49:13 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-07 10:49:14.546 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-07 10:49:14 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-07T10:49:13.866+0800', '', '127.0.0.1' );
2019-05-07 10:49:15.191 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:49:15.195 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-07 10:49:15 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-07 10:49:15.695 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:49:15.697 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:49:15.702 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:49:15 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-07 10:49:15.705 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:49:15 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-07 10:49:15.708 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-07 10:49:15 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-07 10:49:15.708 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:49:15 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-07 10:49:15.710 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:49:15 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-07 10:49:15.711 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-07 10:49:15 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-07 10:49:15.714 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-07 10:49:15 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-07 10:49:22.970 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-07 10:49:22.978 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-07 10:49:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_resume u WHERE 1 = 1 AND u.user_id = 1;
2019-05-07 10:49:22.981 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-07 10:49:22 | 耗时 1 ms | SQL 语句：
SELECT u.resume_id, u.user_id, u.photo, u.profession, u.user_address, u.self_assessment, u.status, u.school_name, u.major_name, u.study_end, u.study_start, u.education, u.recruitment_flag, u.user_company, u.company_trade, u.position_name, u.company_address, u.under_number, u.employment_period_to, u.employment_period_from, u.department, u.job_performance, u.company_nature, u.company_scale, u.company_intro, u.monthly_pay_number, u.monthly_pay, u.add_information, u.label_name, u.language, u.proficiency, u.grade, u.project_name, u.company_name, u.time_end, u.time_start, u.description, u.duty, u.performance, u.resume_name, u.trade, u.functional, u.work_address, u.annual_salary, u.current_salary from t_resume u where 1 = 1 AND u.user_id = 1 ORDER BY resume_id ASC LIMIT 0,10;
