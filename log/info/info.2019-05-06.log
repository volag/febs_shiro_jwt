2019-05-06 09:34:18.143 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 4936 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-06 09:34:18.148 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-06 09:34:21.292 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 09:34:21.295 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-06 09:34:21.401 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 86ms. Found 0 repository interfaces.
2019-05-06 09:34:22.077 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$96f32633] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.234 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.355 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$714271d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.364 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.368 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.379 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7b40106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.405 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$733402af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$6bf8ba03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.589 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.598 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.748 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$593b5d15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.762 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.769 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$457c6da0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.777 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.779 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:22.782 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-06 09:34:22.801 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-06 09:34:23.959 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-06 09:34:23.959 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-06 09:34:23.959 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-06 09:34:23.959 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-06 09:34:23.959 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:23.975 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:23.983 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.445 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.454 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.458 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.493 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.496 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.504 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.505 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.506 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.550 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.603 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.604 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.606 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.632 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.633 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.677 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.678 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.687 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.727 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.730 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.766 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.799 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$63478097] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.805 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$159442b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.808 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$d0ab289f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.815 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.818 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.825 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$f7769fcd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.831 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.834 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$45531e26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.848 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.850 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.855 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.858 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.904 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.928 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.949 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:25.980 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:34:26.450 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-06 09:34:26.465 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-06 09:34:26.470 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-06 09:34:26.471 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-06 09:34:26.480 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-06 09:34:26.480 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-06 09:34:26.480 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-06 09:34:27.579 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-06 09:34:27.864 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-06 09:34:27.864 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 9619 ms
2019-05-06 09:34:28.724 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 09:34:28.725 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-06 09:34:28.725 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 09:34:28.725 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-06 09:34:28.725 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 09:34:28.725 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-06 09:34:28.725 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 09:34:28.725 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-06 09:34:29.688 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-06 09:34:31.008 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-06 09:34:31.090 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-06 09:34:31.193 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-06 09:34:31.209 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-06 09:34:31.221 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 09:34:31.235 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-06 09:34:31.238 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 14.835 seconds (JVM running for 18.731)
2019-05-06 09:34:31.300 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-06 09:34:31.301 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-06 09:34:31.301 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-06 09:34:31.392 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 12 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-06 09:34:31.437 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 8 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 09:34:31.530 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-06 09:34:31.548 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-06 09:34:31.567 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-06 09:34:31.574 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-06 09:34:31.579 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-06 09:34:31.583 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-06 09:34:31.587 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-06 09:34:31.591 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-06 09:34:31.594 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-06 09:34:31.598 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-06 09:34:31.601 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-06 09:34:31.609 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-06 09:34:31.612 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-06 09:34:31.615 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-06 09:34:31.617 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-06 09:34:31.620 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 09:34:31.627 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-06 09:34:31.630 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-06 09:34:31.633 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-06 09:34:31.636 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-06 09:34:31.647 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 3 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-06 09:34:31.659 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-06 09:34:31.667 febs [main] INFO  p6spy - 2019-05-06 09:34:31 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-06 09:34:31.669 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-06 09:34:31.669 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-06 09:34:31.671 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-06 09:34:31.671 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-06 09:34:31.671 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-06T09:34:31.671
2019-05-06 09:34:32.708 febs [RMI TCP Connection(8)-127.0.0.1] INFO  p6spy - 2019-05-06 09:34:32 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-06 09:34:32.861 febs [RMI TCP Connection(5)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-06 09:34:32.861 febs [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-06 09:34:32.882 febs [RMI TCP Connection(5)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2019-05-06 09:35:22.061 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 09:35:22.313 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 09:35:22 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T09:35:22.278+0800' WHERE username = 'mrbird';
2019-05-06 09:35:22.317 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 09:35:22 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 09:35:23.291 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 09:35:23 | 耗时 8 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T09:35:22.352+0800', '', '127.0.0.1' );
2019-05-06 09:35:42.536 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 09:35:42.544 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 09:35:42 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T09:35:42.540+0800' WHERE username = 'mrbird';
2019-05-06 09:35:42.547 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 09:35:42 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 09:35:43.318 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 09:35:43 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T09:35:42.573+0800', '', '127.0.0.1' );
2019-05-06 09:35:43.511 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 09:35:43.546 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 09:35:43 | 耗时 3 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-06 09:35:44.428 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 09:35:44.431 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 09:35:44.438 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 09:35:44 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 09:35:44.443 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 09:35:44 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 09:35:44.446 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 09:35:44 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 09:35:44.451 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 09:35:44 | 耗时 2 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 09:35:44.455 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 09:35:44 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 09:35:44.702 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 09:35:44 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 09:35:44.712 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 09:35:44 | 耗时 2 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 09:35:59.692 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 09:35:59.730 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 09:35:59 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_resume u WHERE 1 = 1 AND u.user_id = 1;
2019-05-06 09:35:59.734 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 09:35:59 | 耗时 1 ms | SQL 语句：
SELECT u.resume_id, u.user_id, u.photo, u.profession, u.user_address, u.self_assessment, u.status, u.school_name, u.major_name, u.study_end, u.study_start, u.education, u.recruitment_flag, u.user_company, u.company_trade, u.position_name, u.company_address, u.under_number, u.employment_period_to, u.employment_period_from, u.department, u.job_performance, u.company_nature, u.company_scale, u.company_intro, u.monthly_pay_number, u.monthly_pay, u.add_information, u.label_name, u.language, u.proficiency, u.grade, u.project_name, u.company_name, u.time_end, u.time_start, u.description, u.duty, u.performance, u.resume_name, u.trade, u.functional, u.work_address, u.annual_salary, u.current_salary from t_resume u where 1 = 1 AND u.user_id = 1 ORDER BY resume_id ASC LIMIT 0,10;
2019-05-06 09:39:24.853 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 09:39:24.899 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 09:39:24 | 耗时 12 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.position_sort, u.need_work_time, u.need_education, u.issue_company, u.requested, d.id sendId FROM t_position u LEFT JOIN t_position_send d ON (u.id = d.position_id) WHERE 1 = 1 AND d.user_id = '1' GROUP BY u.position_name ) TOTAL;
2019-05-06 09:39:24.902 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 09:39:24 | 耗时 1 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.position_sort, u.need_work_time, u.need_education, u.issue_company, u.requested, d.id sendId FROM t_position u LEFT JOIN t_position_send d ON (u.id = d.position_id) WHERE 1 = 1 AND d.user_id = '1' group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-05-06 09:44:53.857 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 09:44:53.901 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 09:44:53 | 耗时 5 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 09:44:53.904 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 09:44:53 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 10:04:14.338 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:04:14.358 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 10:04:14 | 耗时 7 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 10:04:14.361 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 10:04:14 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 10:04:19.279 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:04:19.292 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 10:04:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 10:04:19.295 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 10:04:19 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 10,10;
2019-05-06 10:04:22.960 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:04:22.969 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 10:04:22 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 10:04:22.972 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 10:04:22 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 10:14:02.643 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:14:02.654 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 10:14:02 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 10:14:02.657 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 10:14:02 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 10:33:50.351 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 10344 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-06 10:33:50.356 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-06 10:33:51.690 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 10:33:51.692 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-06 10:33:51.800 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85ms. Found 0 repository interfaces.
2019-05-06 10:33:52.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$c76b253f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:52.552 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:52.679 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$a1ba70e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:52.691 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:52.697 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:52.711 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$382c0012] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:52.734 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$a3ac01bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:52.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$9c70b90f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:52.923 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:52.930 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:53.003 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:53.010 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$89b35c21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:53.016 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:53.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$75f46cac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:53.030 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:53.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:53.035 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-06 10:33:53.044 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-06 10:33:53.312 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-06 10:33:53.312 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-06 10:33:53.312 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-06 10:33:53.312 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-06 10:33:53.312 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:53.325 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:53.334 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.652 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.662 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.668 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.673 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.712 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.713 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.723 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.725 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.727 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.790 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.821 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.856 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.858 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.866 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.907 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.909 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.967 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.969 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:54.976 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.024 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.051 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.090 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$93bf7fa3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.096 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$460c41bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$12327ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.116 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$27ee9ed9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.139 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.143 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$75cb1d32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.156 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.158 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.164 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.224 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.225 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.235 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.251 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:33:55.661 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-06 10:33:55.678 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-06 10:33:55.686 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-06 10:33:55.686 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-06 10:33:55.693 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-06 10:33:55.693 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-06 10:33:55.693 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-06 10:33:56.795 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-06 10:33:57.047 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-06 10:33:57.048 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6634 ms
2019-05-06 10:33:57.988 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 10:33:57.989 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-06 10:33:57.989 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 10:33:57.989 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-06 10:33:57.990 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 10:33:57.990 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-06 10:33:57.990 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 10:33:57.990 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-06 10:33:58.835 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-06 10:34:00.150 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-06 10:34:00.214 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-06 10:34:00.317 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-06 10:34:00.332 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-06 10:34:00.339 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 10:34:00.355 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-06 10:34:00.359 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 12.19 seconds (JVM running for 16.157)
2019-05-06 10:34:00.371 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-06 10:34:00.373 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-06 10:34:00.373 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-06 10:34:00.453 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-06 10:34:00.486 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 10:34:00.586 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-06 10:34:00.626 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-06 10:34:00.654 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-06 10:34:00.661 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-06 10:34:00.665 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-06 10:34:00.668 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-06 10:34:00.672 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-06 10:34:00.677 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-06 10:34:00.681 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-06 10:34:00.684 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-06 10:34:00.688 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-06 10:34:00.692 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-06 10:34:00.696 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-06 10:34:00.700 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-06 10:34:00.702 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-06 10:34:00.706 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 10:34:00.714 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-06 10:34:00.719 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-06 10:34:00.723 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-06 10:34:00.728 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-06 10:34:00.733 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-06 10:34:00.738 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-06 10:34:00.745 febs [main] INFO  p6spy - 2019-05-06 10:34:00 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-06 10:34:00.746 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-06 10:34:00.747 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-06 10:34:00.747 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-06 10:34:00.747 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-06 10:34:00.747 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-06T10:34:00.747
2019-05-06 10:34:01.869 febs [RMI TCP Connection(10)-127.0.0.1] INFO  p6spy - 2019-05-06 10:34:01 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-06 10:34:01.885 febs [RMI TCP Connection(9)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-06 10:34:01.886 febs [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-06 10:34:01.908 febs [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 22 ms
2019-05-06 10:35:50.138 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 10:35:50.285 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 10:35:50 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T10:35:50.256+0800' WHERE username = 'mrbird';
2019-05-06 10:35:50.287 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 10:35:50 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 10:35:50.951 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 10:35:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T10:35:50.384+0800', '', '127.0.0.1' );
2019-05-06 10:36:04.791 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 10:36:04.802 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 10:36:04 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T10:36:04.795+0800' WHERE username = 'mrbird';
2019-05-06 10:36:04.805 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 10:36:04 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 10:36:05.473 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 10:36:05 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T10:36:04.851+0800', '', '127.0.0.1' );
2019-05-06 10:36:28.008 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 10:36:28.015 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 10:36:28 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T10:36:28.011+0800' WHERE username = 'mrbird';
2019-05-06 10:36:28.017 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 10:36:28 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 10:36:29.138 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 10:36:29 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T10:36:28.026+0800', '', '127.0.0.1' );
2019-05-06 10:36:29.281 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:36:29.310 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 10:36:29 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-06 10:36:29.882 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:36:29.882 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:36:29.890 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 10:36:29 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 10:36:29.893 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 10:36:29 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 10:36:29.896 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 10:36:29 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 10:36:29.900 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 10:36:29 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 10:36:29.904 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 10:36:29 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 10:36:29.989 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 10:36:29 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 10:36:29.998 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 10:36:29 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 10:36:36.327 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:36:36.362 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 10:36:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 10:36:36.365 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 10:36:36 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 10:36:45.392 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:37:41.947 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:37:42.643 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 10:37:42 | 耗时 2 ms | SQL 语句：
UPDATE t_company SET avatar='d50f4c68-6cb4-4da9-9a5f-8950d12c95a2.png' WHERE COMPANY_ID=1;
2019-05-06 10:43:49.023 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:43:49.046 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 10:43:49 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 10:43:49.048 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 10:43:49 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 10:44:46.626 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:44:47.341 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 10:44:47 | 耗时 1 ms | SQL 语句：
UPDATE t_company SET avatar='45cad3b9-9e49-40fd-bf89-d2bb7a171c2c.png' WHERE COMPANY_ID=1;
2019-05-06 10:46:31.324 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:46:31.335 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 10:46:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 10:46:31.338 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 10:46:31 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 10:53:54.562 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 30644 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-06 10:53:54.570 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-06 10:53:57.282 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 10:53:57.285 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-06 10:53:57.386 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82ms. Found 0 repository interfaces.
2019-05-06 10:53:57.791 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$ec0fc79f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:57.940 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.046 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c65f1343] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.055 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.059 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.070 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5cd0a272] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.095 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$c850a41b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.348 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$c1155b6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.371 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.376 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.457 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$ae57fe81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.461 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.468 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9a990f0c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.477 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.479 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.482 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-06 10:53:58.491 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-06 10:53:58.794 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-06 10:53:58.795 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-06 10:53:58.795 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-06 10:53:58.795 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-06 10:53:58.795 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.811 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:58.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:59.974 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:59.983 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:59.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:53:59.992 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.044 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.045 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.055 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.056 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.058 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.126 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.160 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.205 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.209 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.239 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.241 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.282 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.318 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.320 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.337 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.358 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b8642203] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.363 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$6ab0e41c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.366 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$25c7ca0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.377 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.383 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$4c934139] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.389 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$9a6fbf92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.403 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.405 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.414 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.429 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.457 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.476 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.481 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.482 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.498 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.520 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:54:00.952 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-06 10:54:00.981 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-06 10:54:00.988 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-06 10:54:00.988 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-06 10:54:00.995 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-06 10:54:00.996 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-06 10:54:00.996 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-06 10:54:02.076 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-06 10:54:02.269 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-06 10:54:02.270 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7568 ms
2019-05-06 10:54:02.953 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 10:54:02.953 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-06 10:54:02.954 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 10:54:02.954 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-06 10:54:02.954 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 10:54:02.954 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-06 10:54:02.954 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 10:54:02.954 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-06 10:54:04.083 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-06 10:54:05.294 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-06 10:54:05.386 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-06 10:54:05.518 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-06 10:54:05.537 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-06 10:54:05.547 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 10:54:05.560 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-06 10:54:05.564 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 12.238 seconds (JVM running for 14.872)
2019-05-06 10:54:05.575 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-06 10:54:05.576 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-06 10:54:05.576 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-06 10:54:05.666 febs [main] INFO  p6spy - 2019-05-06 10:54:05 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-06 10:54:05.702 febs [main] INFO  p6spy - 2019-05-06 10:54:05 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 10:54:05.941 febs [main] INFO  p6spy - 2019-05-06 10:54:05 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-06 10:54:05.967 febs [main] INFO  p6spy - 2019-05-06 10:54:05 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-06 10:54:05.994 febs [main] INFO  p6spy - 2019-05-06 10:54:05 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-06 10:54:06.001 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-06 10:54:06.006 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-06 10:54:06.011 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-06 10:54:06.016 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-06 10:54:06.021 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-06 10:54:06.025 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-06 10:54:06.030 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-06 10:54:06.035 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-06 10:54:06.039 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-06 10:54:06.042 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-06 10:54:06.045 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-06 10:54:06.047 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-06 10:54:06.050 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 10:54:06.057 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-06 10:54:06.060 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-06 10:54:06.066 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-06 10:54:06.070 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-06 10:54:06.075 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-06 10:54:06.080 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-06 10:54:06.086 febs [main] INFO  p6spy - 2019-05-06 10:54:06 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-06 10:54:06.088 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-06 10:54:06.088 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-06 10:54:06.088 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-06 10:54:06.089 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-06 10:54:06.089 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-06T10:54:06.089
2019-05-06 10:54:07.036 febs [RMI TCP Connection(7)-127.0.0.1] INFO  p6spy - 2019-05-06 10:54:07 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-06 10:54:07.047 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-06 10:54:07.047 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-06 10:54:07.064 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2019-05-06 10:55:07.964 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 34392 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-06 10:55:07.968 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-06 10:55:10.636 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 10:55:10.638 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-06 10:55:10.822 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 164ms. Found 0 repository interfaces.
2019-05-06 10:55:11.380 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$5a66ffc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:11.641 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:11.833 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$34b64b6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:11.847 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:11.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:11.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cb27da9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:11.900 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$36a7dc44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:12.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$2f6c9398] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:12.136 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:12.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:12.242 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:12.252 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$1caf36aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:12.257 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:12.266 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8f04735] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:12.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:12.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:12.284 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-06 10:55:12.294 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-06 10:55:12.968 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-06 10:55:12.969 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-06 10:55:12.969 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-06 10:55:12.969 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-06 10:55:12.969 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:12.993 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:13.006 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.008 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.019 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.075 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.087 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.089 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.091 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.164 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.203 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.282 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.288 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.345 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.357 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.443 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.450 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.536 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.539 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.542 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.579 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.628 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$26bb5a2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$d9081c45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.641 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$941f0234] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.661 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.670 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.691 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$baea7962] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.709 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.718 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$8c6f7bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.746 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.750 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.763 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.769 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.818 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.852 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.861 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.862 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.879 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:15.901 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:55:16.395 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-06 10:55:16.412 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-06 10:55:16.418 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-06 10:55:16.418 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-06 10:55:16.426 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-06 10:55:16.427 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-06 10:55:16.427 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-06 10:55:17.509 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-06 10:55:17.729 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-06 10:55:17.730 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 9562 ms
2019-05-06 10:55:18.489 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 10:55:18.489 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-06 10:55:18.489 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 10:55:18.489 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-06 10:55:18.489 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 10:55:18.489 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-06 10:55:18.490 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 10:55:18.490 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-06 10:55:19.515 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-06 10:55:21.057 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-06 10:55:21.122 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-06 10:55:21.224 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-06 10:55:21.237 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-06 10:55:21.249 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 10:55:21.259 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-06 10:55:21.261 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 14.497 seconds (JVM running for 17.631)
2019-05-06 10:55:21.276 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-06 10:55:21.277 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-06 10:55:21.277 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-06 10:55:21.353 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-06 10:55:21.381 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 10:55:21.460 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-06 10:55:21.475 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-06 10:55:21.515 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-06 10:55:21.522 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-06 10:55:21.525 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-06 10:55:21.529 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-06 10:55:21.538 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 6 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-06 10:55:21.543 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-06 10:55:21.546 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-06 10:55:21.549 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-06 10:55:21.555 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-06 10:55:21.559 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-06 10:55:21.562 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-06 10:55:21.565 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-06 10:55:21.567 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-06 10:55:21.572 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 10:55:21.581 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-06 10:55:21.585 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-06 10:55:21.589 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-06 10:55:21.592 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-06 10:55:21.595 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-06 10:55:21.600 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-06 10:55:21.606 febs [main] INFO  p6spy - 2019-05-06 10:55:21 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-06 10:55:21.607 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-06 10:55:21.607 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-06 10:55:21.607 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-06 10:55:21.607 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-06 10:55:21.607 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-06T10:55:21.607
2019-05-06 10:55:22.191 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-06 10:55:22.192 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-06 10:55:22.199 febs [RMI TCP Connection(10)-127.0.0.1] INFO  p6spy - 2019-05-06 10:55:22 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-06 10:55:22.213 febs [RMI TCP Connection(6)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2019-05-06 10:55:41.093 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:55:41.473 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 10:55:41 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 10:55:41.483 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 10:55:41 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.avatar, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 10:58:32.496 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:58:32.927 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 10:58:32 | 耗时 2 ms | SQL 语句：
UPDATE t_company SET avatar='f856dac8-8b9c-488a-9674-2f7f6d27785d.png' WHERE COMPANY_ID=2;
2019-05-06 10:58:55.388 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:58:55.490 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 10:58:55 | 耗时 2 ms | SQL 语句：
UPDATE t_company SET avatar='0c814cbd-7ad3-4af6-96c8-3f6a7acc0a16.png' WHERE COMPANY_ID=2;
2019-05-06 10:59:00.763 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:59:00.777 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 10:59:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 10:59:00.780 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 10:59:00 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.avatar, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 10:59:14.823 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 10:59:14.919 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 10:59:14 | 耗时 1 ms | SQL 语句：
UPDATE t_company SET avatar='6e9131d8-a722-44e1-840c-34f158ae7b0d.png' WHERE COMPANY_ID=7;
2019-05-06 11:04:48.052 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:04:48.330 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 11:04:48 | 耗时 2 ms | SQL 语句：
UPDATE t_company SET avatar='d8e32c6f-848e-4795-8a9d-4341a14445ee.png' WHERE COMPANY_ID=8;
2019-05-06 11:05:00.044 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:05:00.108 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 11:05:00 | 耗时 1 ms | SQL 语句：
UPDATE t_company SET avatar='f09ed505-09a1-47cc-9f12-ae77b06e4630.jpg' WHERE COMPANY_ID=9;
2019-05-06 11:05:16.587 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:05:16.656 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 11:05:16 | 耗时 1 ms | SQL 语句：
UPDATE t_company SET avatar='cbe8345e-c344-4ee8-b8ad-de726376196e.png' WHERE COMPANY_ID=10;
2019-05-06 11:05:37.743 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:05:37.810 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 11:05:37 | 耗时 1 ms | SQL 语句：
UPDATE t_company SET avatar='3a92978a-2802-40bd-b179-e1aa994ba971.png' WHERE COMPANY_ID=11;
2019-05-06 11:05:47.284 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:05:47.352 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 11:05:47 | 耗时 2 ms | SQL 语句：
UPDATE t_company SET avatar='7832c2d9-c3eb-4a31-bbf6-68bfd59332ad.png' WHERE COMPANY_ID=12;
2019-05-06 11:05:57.759 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:05:57.834 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 11:05:57 | 耗时 2 ms | SQL 语句：
UPDATE t_company SET avatar='fc97e8ad-3305-4906-8786-d09a91a2dd65.png' WHERE COMPANY_ID=13;
2019-05-06 11:06:08.754 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:06:08.774 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 11:06:08 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 11:06:08.776 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 11:06:08 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.avatar, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 11:06:28.678 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:06:28.746 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 11:06:28 | 耗时 1 ms | SQL 语句：
UPDATE t_company SET avatar='870e0bd9-fd8c-41c8-a6a2-683208498e8c.png' WHERE COMPANY_ID=11;
2019-05-06 11:06:52.200 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:06:52.262 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 11:06:52 | 耗时 1 ms | SQL 语句：
UPDATE t_company SET avatar='7dfd0cd7-ee1e-4a55-a847-87c80e13a8ad.png' WHERE COMPANY_ID=12;
2019-05-06 11:07:58.979 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:07:59.622 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 11:07:59 | 耗时 0 ms | SQL 语句：
UPDATE t_company SET avatar='3c387d8f-f034-4d9c-a81e-18fbab99b83d.jpg' WHERE COMPANY_ID=1;
2019-05-06 11:08:25.970 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:08:25.983 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 11:08:25 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 11:08:25.985 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 11:08:25 | 耗时 0 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.avatar, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 10,10;
2019-05-06 11:08:34.917 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:08:34.950 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 11:08:34 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project_contact t LEFT JOIN t_person_project tp ON (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp ON (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe ON tpe.PERSON_ID = tp.PERSON_ID WHERE 1 = 1 AND tp.USER_ID = 1;
2019-05-06 11:08:34.953 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 11:08:34 | 耗时 2 ms | SQL 语句：
select t.PROJECT_CONTACT_ID, t.PERSON_PROJECT_ID, t.CONTACT_TYPE, tp.PERSON_STATUS, tpe.PERSON_NAME, tpe.MOBILE_PHONE, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, t.MODIFY_TIME, t.CREATE_TIME from t_project_contact t LEFT JOIN t_person_project tp on (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp on (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe on tpe.PERSON_ID = tp.PERSON_ID where 1=1 and tp.USER_ID = 1 ORDER BY PROJECT_CONTACT_ID ASC LIMIT 0,10;
2019-05-06 11:18:09.673 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:18:09.721 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 11:18:09 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:18:09.725 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 11:18:09 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:19:27.931 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:19:27.947 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 11:19:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:19:27.950 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 11:19:27 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:19:42.847 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:19:42.858 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 11:19:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-05-06 11:19:42.861 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 11:19:42 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:19:47.851 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:19:47.905 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 11:19:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_person_project t LEFT JOIN t_person tp ON (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp ON tpp.PROJECT_ID = t.PROJECT_ID WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:19:47.907 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 11:19:47 | 耗时 0 ms | SQL 语句：
select t.PERSON_PROJECT_ID, t.PERSON_ID, t.PROJECT_ID, t.PERSON_STATUS, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME, t.TITLE, t.DESCRIPTION, tp.PERSON_NAME personName, tp.MOBILE_PHONE phone, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, tpp.GATHER_STATUS gatherStatus from t_person_project t LEFT JOIN t_person tp on (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp on tpp.PROJECT_ID = t.PROJECT_ID where 1=1 and t.USER_ID = 1 ORDER BY PERSON_PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:20:04.813 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:20:04.846 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 11:20:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_contract t WHERE 1 = 1;
2019-05-06 11:20:04.849 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 11:20:04 | 耗时 1 ms | SQL 语句：
select t.CONTRACT_ID, t.CONTRACT_NAME contractName, t.CONTRACT_CODE, t.START_TIME startTime, t.FINISH_TIME finishTime, t.MAKE_INVOICE_TIME makeInvoiceTime, t.PAY_WAY, t.COMPANY_SIGNED, t.CUSTOMER_SIGNED, t.SIGNED_TIME, t.SIGNED_ADDRESS, t.STORE_ADDRESS, t.FILL_TIME, t.MONEY, t.EXECUTE_STATUS, t.CONTRACT_INFO, t.ORDER_NUMBER, t.INFO, t.USER_ID, t.CREATE_TIME createTime, t.MODIFY_TIME from t_contract t where 1=1 ORDER BY CONTRACT_ID ASC LIMIT 0,10;
2019-05-06 11:20:17.448 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:20:17.481 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 11:20:17 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_person t WHERE 1 = 1;
2019-05-06 11:20:17.485 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 11:20:17 | 耗时 1 ms | SQL 语句：
select t.PERSON_ID, t.PERSON_NAME personName, t.PERSON_SEX, t.PERSON_SORT, t.PERSON_LEVEL, t.COMPANY_NAME, t.BIRTHDAY, t.ACCOUNT, t.COMPUTER, t.CONTENT, t.CREATE_TIME, t.CURRENT_ADDRESS, t.CURRENT_SALARY, t.EDUCATION_BACKGROUND, t.EDUCATION_RECORD, t.HEIGHT, t.WEIGHT, t.IDENTITY_CARD, t.EMAIL, t.LANGUAGE_SKILL, t.GRADUATE_INSTITUTIONS, t.GRADUATE_TIME, t.WORK_YEARS, t.WORK_EXPERIENCE, t.WORK_PHONE, t.MAJOR, t.MARITAL_STATUS, t.MOBILE_PHONE, t.MODIFY_TIME, t.OFFICE_TERM, t.NATION, t.NATIONALITY, t.NATIVE_PLACE, t.SELF_ASSESSMENT, t.FAMILY_PHONE, t.POSITION_NAME, t.PROJECT_EXPERIENCE, t.TRAIN_RECORD, t.RELATED_SKILL, t.USER_ID, t.RESUME from t_person t where 1=1 ORDER BY person_id ASC LIMIT 0,10;
2019-05-06 11:24:20.515 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:24:20.526 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 11:24:20 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-05-06 11:24:20.530 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 11:24:20 | 耗时 2 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:25:08.203 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:25:08.216 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 11:25:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-05-06 11:25:08.220 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 11:25:08 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:25:29.913 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:25:29.921 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 11:25:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-05-06 11:25:29.923 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 11:25:29 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 10,10;
2019-05-06 11:36:37.886 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 11:36:37.929 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 11:36:37 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T11:36:37.904+0800' WHERE username = 'mrbird';
2019-05-06 11:36:37.932 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 11:36:37 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 11:36:38.693 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 11:36:38 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T11:36:38.038+0800', '', '127.0.0.1' );
2019-05-06 11:36:39.528 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:36:39.541 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 11:36:39 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-06 11:36:40.159 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:36:40.159 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:36:40.164 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 11:36:40 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 11:36:40.169 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 11:36:40 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 11:36:40.171 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 11:36:40 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:36:40.172 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 11:36:40 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 11:36:40.174 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 11:36:40 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:36:40.175 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 11:36:40 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 11:36:40.179 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 11:36:40 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 11:36:44.779 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:36:44.787 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 11:36:44 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project_contact t LEFT JOIN t_person_project tp ON (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp ON (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe ON tpe.PERSON_ID = tp.PERSON_ID WHERE 1 = 1 AND tp.USER_ID = 1;
2019-05-06 11:36:44.790 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 11:36:44 | 耗时 1 ms | SQL 语句：
select t.PROJECT_CONTACT_ID, t.PERSON_PROJECT_ID, t.CONTACT_TYPE, tp.PERSON_STATUS, tpe.PERSON_NAME, tpe.MOBILE_PHONE, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, t.MODIFY_TIME, t.CREATE_TIME from t_project_contact t LEFT JOIN t_person_project tp on (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp on (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe on tpe.PERSON_ID = tp.PERSON_ID where 1=1 and tp.USER_ID = 1 ORDER BY PROJECT_CONTACT_ID ASC LIMIT 0,10;
2019-05-06 11:36:49.979 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:36:49.994 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 11:36:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:36:49.998 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 11:36:49 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:40:44.506 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:40:44.516 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 11:40:44 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:40:44.520 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 11:40:44 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:43:10.036 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:43:10.060 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 11:43:10 | 耗时 8 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:43:10.063 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 11:43:10 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:43:31.611 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:43:31.620 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 11:43:31 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-05-06 11:43:31.623 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 11:43:31 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:44:44.277 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:44:44.298 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 11:44:44 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:44:44.302 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 11:44:44 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:47:41.153 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:47:41.164 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 11:47:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:47:41.167 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 11:47:41 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:48:21.223 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:48:21.233 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 11:48:21 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:48:21.237 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 11:48:21 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:48:32.722 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:48:32.731 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 11:48:32 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:48:32.734 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 11:48:32 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:49:54.855 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:49:54.861 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 11:49:54 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_person_project t LEFT JOIN t_person tp ON (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp ON tpp.PROJECT_ID = t.PROJECT_ID WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:49:54.864 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 11:49:54 | 耗时 1 ms | SQL 语句：
select t.PERSON_PROJECT_ID, t.PERSON_ID, t.PROJECT_ID, t.PERSON_STATUS, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME, t.TITLE, t.DESCRIPTION, tp.PERSON_NAME personName, tp.MOBILE_PHONE phone, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, tpp.GATHER_STATUS gatherStatus from t_person_project t LEFT JOIN t_person tp on (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp on tpp.PROJECT_ID = t.PROJECT_ID where 1=1 and t.USER_ID = 1 ORDER BY PERSON_PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:50:33.816 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:50:33.823 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 11:50:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_person_project t LEFT JOIN t_person tp ON (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp ON tpp.PROJECT_ID = t.PROJECT_ID WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 11:50:33.826 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 11:50:33 | 耗时 1 ms | SQL 语句：
select t.PERSON_PROJECT_ID, t.PERSON_ID, t.PROJECT_ID, t.PERSON_STATUS, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME, t.TITLE, t.DESCRIPTION, tp.PERSON_NAME personName, tp.MOBILE_PHONE phone, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, tpp.GATHER_STATUS gatherStatus from t_person_project t LEFT JOIN t_person tp on (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp on tpp.PROJECT_ID = t.PROJECT_ID where 1=1 and t.USER_ID = 1 ORDER BY PERSON_PROJECT_ID ASC LIMIT 0,10;
2019-05-06 11:50:39.307 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:50:39.315 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 11:50:39 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_person t WHERE 1 = 1;
2019-05-06 11:50:39.317 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 11:50:39 | 耗时 0 ms | SQL 语句：
select t.PERSON_ID, t.PERSON_NAME personName, t.PERSON_SEX, t.PERSON_SORT, t.PERSON_LEVEL, t.COMPANY_NAME, t.BIRTHDAY, t.ACCOUNT, t.COMPUTER, t.CONTENT, t.CREATE_TIME, t.CURRENT_ADDRESS, t.CURRENT_SALARY, t.EDUCATION_BACKGROUND, t.EDUCATION_RECORD, t.HEIGHT, t.WEIGHT, t.IDENTITY_CARD, t.EMAIL, t.LANGUAGE_SKILL, t.GRADUATE_INSTITUTIONS, t.GRADUATE_TIME, t.WORK_YEARS, t.WORK_EXPERIENCE, t.WORK_PHONE, t.MAJOR, t.MARITAL_STATUS, t.MOBILE_PHONE, t.MODIFY_TIME, t.OFFICE_TERM, t.NATION, t.NATIONALITY, t.NATIVE_PLACE, t.SELF_ASSESSMENT, t.FAMILY_PHONE, t.POSITION_NAME, t.PROJECT_EXPERIENCE, t.TRAIN_RECORD, t.RELATED_SKILL, t.USER_ID, t.RESUME from t_person t where 1=1 ORDER BY person_id ASC LIMIT 0,10;
2019-05-06 11:50:58.221 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:50:58.275 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 11:50:58 | 耗时 1 ms | SQL 语句：
UPDATE t_person SET person_name='张三', person_sex='1', person_sort='客户联系人', person_level='经理', birthday='2019-04-09T00:00:00.000+0800', work_years='3年', graduate_time='2019-04-09T00:00:00.000+0800', graduate_institutions='北京大学', major='软件工程', education_background='研究生', email='1261567819@163.com', mobile_phone='15779551676', work_phone='15779551676', family_phone='15779551676', identity_card='15779551676', nationality='中国', nation='汉', height='170', weight='65', account='中国江西', marital_status='0', native_place='中国江西', current_address='江西南昌', company_name='百度', position_name='经理', current_salary=10.0, office_term='3', self_assessment='优秀', work_experience='3年工作经验', project_experience='3年项目经验', education_record='本科研究生', train_record='1年培训经验', language_skill='英语日语', computer='计算机二级', related_skill='机车驾驶证', content='无', modify_time='2019-05-06T11:50:58.263+0800' WHERE PERSON_ID=7;
2019-05-06 11:50:58.946 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 11:50:58.956 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 11:50:58 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_person t WHERE 1 = 1;
2019-05-06 11:50:58.959 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 11:50:58 | 耗时 1 ms | SQL 语句：
select t.PERSON_ID, t.PERSON_NAME personName, t.PERSON_SEX, t.PERSON_SORT, t.PERSON_LEVEL, t.COMPANY_NAME, t.BIRTHDAY, t.ACCOUNT, t.COMPUTER, t.CONTENT, t.CREATE_TIME, t.CURRENT_ADDRESS, t.CURRENT_SALARY, t.EDUCATION_BACKGROUND, t.EDUCATION_RECORD, t.HEIGHT, t.WEIGHT, t.IDENTITY_CARD, t.EMAIL, t.LANGUAGE_SKILL, t.GRADUATE_INSTITUTIONS, t.GRADUATE_TIME, t.WORK_YEARS, t.WORK_EXPERIENCE, t.WORK_PHONE, t.MAJOR, t.MARITAL_STATUS, t.MOBILE_PHONE, t.MODIFY_TIME, t.OFFICE_TERM, t.NATION, t.NATIONALITY, t.NATIVE_PLACE, t.SELF_ASSESSMENT, t.FAMILY_PHONE, t.POSITION_NAME, t.PROJECT_EXPERIENCE, t.TRAIN_RECORD, t.RELATED_SKILL, t.USER_ID, t.RESUME from t_person t where 1=1 ORDER BY person_id ASC LIMIT 0,10;
2019-05-06 11:50:59.547 febs [asyncTaskExecutor-1] INFO  p6spy - 2019-05-06 11:50:59 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改职位信息', 469, 'cc.mrbird.febs.person.controller.PersonController.updatePerson()', ' person: "Person(personId=7, personName=张三, personSex=1, personSort=客户联系人, personLevel=经理, birthday=Tue Apr 09 00:00:00 CST 2019, workYears=3年, graduateTime=Tue Apr 09 00:00:00 CST 2019, graduateInstitutions=北京大学, major=软件工程, educationBackground=研究生, email=1261567819@163.com, mobilePhone=15779551676, workPhone=15779551676, familyPhone=15779551676, identityCard=15779551676, nationality=中国, nation=汉, height=170, weight=65, account=中国江西, maritalStatus=0, nativePlace=中国江西, currentAddress=江西南昌, companyName=百度, positionName=经理, currentSalary=10.0, officeTerm=3, selfAssessment=优秀, workExperience=3年工作经验, projectExperience=3年项目经验, educationRecord=本科研究生, trainRecord=1年培训经验, languageSkill=英语日语, computer=计算机二级, relatedSkill=机车驾驶证, content=无, resume=null, userId=null, createTime=null, modifyTime=Mon May 06 11:50:58 CST 2019, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2019-05-06T11:50:58.747+0800', '' );
2019-05-06 11:55:21.222 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 12:55:21.222 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 14:00:29.545 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 14:00:29.555 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 14:00:29 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T14:00:29.550+0800' WHERE username = 'mrbird';
2019-05-06 14:00:29.577 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 14:00:29 | 耗时 20 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 14:00:30.291 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 14:00:30 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T14:00:29.621+0800', '', '127.0.0.1' );
2019-05-06 14:00:30.607 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 14:00:30.612 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 14:00:30 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-06 14:00:31.240 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 14:00:31.240 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 14:00:31.244 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 14:00:31 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 14:00:31.247 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 14:00:31 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 14:00:31.250 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 14:00:31 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 14:00:31.253 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 14:00:31 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 14:00:31.255 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 14:00:31 | 耗时 4 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 14:00:31.256 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 14:00:31 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 14:00:31.258 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 14:00:31 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 14:00:39.123 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 14:00:39.141 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 14:00:39 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 14:00:39.147 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 14:00:39 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.avatar, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 15:58:31.732 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 15:58:31.753 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 15:58:31 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T15:58:31.745+0800' WHERE username = 'mrbird';
2019-05-06 15:58:31.756 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 15:58:31 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 15:58:32.485 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 15:58:32 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T15:58:31.822+0800', '', '127.0.0.1' );
2019-05-06 15:58:46.614 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 15:58:46.621 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 15:58:46 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T15:58:46.617+0800' WHERE username = 'mrbird';
2019-05-06 15:58:46.623 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 15:58:46 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 15:58:47.339 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 15:58:47 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T15:58:46.671+0800', '', '127.0.0.1' );
2019-05-06 15:58:49.031 febs [http-nio-9527-exec-5] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 15:58:49.038 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 15:58:49 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T15:58:49.034+0800' WHERE username = 'mrbird';
2019-05-06 15:58:49.046 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 15:58:49 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 15:58:49.969 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 15:58:49 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T15:58:49.054+0800', '', '127.0.0.1' );
2019-05-06 15:59:09.413 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 4 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 15:59:09.437 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 15:59:09 | 耗时 6 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T15:59:09.423+0800' WHERE username = 'mrbird';
2019-05-06 15:59:09.439 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 15:59:09 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 15:59:10.082 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 15:59:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T15:59:09.499+0800', '', '127.0.0.1' );
2019-05-06 15:59:12.122 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 5 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 15:59:12.128 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 15:59:12 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T15:59:12.124+0800' WHERE username = 'mrbird';
2019-05-06 15:59:12.130 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 15:59:12 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 15:59:13.038 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 15:59:13 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T15:59:12.139+0800', '', '127.0.0.1' );
2019-05-06 15:59:23.039 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 63664 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-06 15:59:23.043 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-06 15:59:24.563 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 15:59:24.567 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-06 15:59:24.664 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83ms. Found 0 repository interfaces.
2019-05-06 15:59:25.073 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$14502ba6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.213 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.321 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ee9f774a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.334 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.338 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.358 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$85110679] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f0910822] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.618 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$e955bf76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.653 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.661 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.750 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.763 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$d6986288] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.771 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.785 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$c2d97313] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.800 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.802 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:25.806 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-06 15:59:25.816 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-06 15:59:27.115 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-06 15:59:27.116 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-06 15:59:27.116 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-06 15:59:27.116 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-06 15:59:27.116 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:27.137 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:27.150 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.340 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.345 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.348 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.379 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.380 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.389 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.391 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.434 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.459 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.488 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.516 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.518 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.564 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.566 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.570 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.604 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.605 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.606 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.632 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.665 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$e0a4860a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.671 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$92f14823] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.674 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$4e082e12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.681 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.683 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.690 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$74d3a540] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.696 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.699 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$c2b02399] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.710 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.712 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.716 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.719 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.759 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.764 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.765 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.778 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:28.805 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:59:29.195 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-06 15:59:29.212 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-06 15:59:29.217 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-06 15:59:29.218 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-06 15:59:29.224 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-06 15:59:29.224 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-06 15:59:29.224 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-06 15:59:30.304 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-06 15:59:30.493 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-06 15:59:30.493 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7288 ms
2019-05-06 15:59:31.129 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 15:59:31.129 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-06 15:59:31.129 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 15:59:31.129 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-06 15:59:31.129 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 15:59:31.129 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-06 15:59:31.129 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 15:59:31.129 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-06 15:59:31.969 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-06 15:59:33.253 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-06 15:59:33.321 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-06 15:59:33.419 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-06 15:59:33.461 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-06 15:59:33.472 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 15:59:33.488 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-06 15:59:33.490 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 11.554 seconds (JVM running for 15.681)
2019-05-06 15:59:33.500 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-06 15:59:33.501 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-06 15:59:33.501 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-06 15:59:33.572 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-06 15:59:33.602 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 15:59:33.675 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-06 15:59:33.689 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-06 15:59:33.709 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-06 15:59:33.715 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-06 15:59:33.719 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-06 15:59:33.722 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-06 15:59:33.726 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-06 15:59:33.729 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-06 15:59:33.733 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-06 15:59:33.737 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-06 15:59:33.740 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-06 15:59:33.743 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-06 15:59:33.748 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-06 15:59:33.751 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-06 15:59:33.753 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-06 15:59:33.756 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 15:59:33.763 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 4 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-06 15:59:33.769 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-06 15:59:33.772 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-06 15:59:33.775 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-06 15:59:33.779 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-06 15:59:33.783 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-06 15:59:33.788 febs [main] INFO  p6spy - 2019-05-06 15:59:33 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-06 15:59:33.790 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-06 15:59:33.790 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-06 15:59:33.790 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-06 15:59:33.790 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-06 15:59:33.790 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-06T15:59:33.790
2019-05-06 15:59:34.325 febs [RMI TCP Connection(7)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-06 15:59:34.325 febs [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-06 15:59:34.333 febs [RMI TCP Connection(5)-127.0.0.1] INFO  p6spy - 2019-05-06 15:59:34 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-06 15:59:34.346 febs [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 21 ms
2019-05-06 15:59:38.954 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 15:59:39.186 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 15:59:39 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T15:59:39.149+0800' WHERE username = 'mrbird';
2019-05-06 15:59:39.192 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 15:59:39 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 15:59:39.952 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 15:59:39 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T15:59:39.210+0800', '', '127.0.0.1' );
2019-05-06 15:59:41.751 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 15:59:41.762 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 15:59:41 | 耗时 4 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T15:59:41.755+0800' WHERE username = 'mrbird';
2019-05-06 15:59:41.767 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 15:59:41 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 15:59:42.361 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 15:59:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T15:59:41.777+0800', '', '127.0.0.1' );
2019-05-06 15:59:49.115 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 15:59:49.124 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 15:59:49 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T15:59:49.120+0800' WHERE username = 'mrbird';
2019-05-06 15:59:49.127 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 15:59:49 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 15:59:50.307 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 15:59:50 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T15:59:49.210+0800', '', '127.0.0.1' );
2019-05-06 16:00:40.025 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 16:00:40.034 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:00:40 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T16:00:40.029+0800' WHERE username = 'mrbird';
2019-05-06 16:00:40.037 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:00:40 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:00:40.768 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:00:40 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T16:00:40.121+0800', '', '127.0.0.1' );
2019-05-06 16:00:45.791 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 16:00:45.797 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 16:00:45 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T16:00:45.793+0800' WHERE username = 'mrbird';
2019-05-06 16:00:45.800 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 16:00:45 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:00:46.747 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 16:00:46 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T16:00:45.820+0800', '', '127.0.0.1' );
2019-05-06 16:00:50.949 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 16:00:50.958 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:00:50 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T16:00:50.953+0800' WHERE username = 'mrbird';
2019-05-06 16:00:50.961 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:00:50 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:00:51.582 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:00:51 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T16:00:50.971+0800', '', '127.0.0.1' );
2019-05-06 16:00:53.976 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 4 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 16:00:53.985 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 16:00:53 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T16:00:53.980+0800' WHERE username = 'mrbird';
2019-05-06 16:00:53.992 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 16:00:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:00:54.897 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 16:00:54 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T16:00:54.008+0800', '', '127.0.0.1' );
2019-05-06 16:07:32.040 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 29764 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-06 16:07:32.043 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-06 16:07:33.491 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 16:07:33.494 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-06 16:07:33.603 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91ms. Found 0 repository interfaces.
2019-05-06 16:07:34.142 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$e1bf61c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.290 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.433 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$bc0ead66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.441 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.445 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$52803c95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.476 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$be003e3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.604 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$b6c4f592] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.630 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.637 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.717 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$a40798a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.732 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.739 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$9048a92f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.750 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.753 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:34.757 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-06 16:07:34.768 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-06 16:07:35.020 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-06 16:07:35.020 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-06 16:07:35.020 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-06 16:07:35.021 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-06 16:07:35.021 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:35.034 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:35.043 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.641 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.657 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.663 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.668 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.713 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.714 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.725 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.727 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.791 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.833 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.879 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.880 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.884 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.937 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.938 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.996 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:36.999 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.012 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.098 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.139 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$ae13bc26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.183 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$60607e3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$1b77642e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.198 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.202 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.211 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$4242db5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.220 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.225 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$901f59b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.245 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.251 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.256 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.318 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.331 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.332 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.346 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:07:37.959 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-06 16:07:37.979 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-06 16:07:37.988 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-06 16:07:37.988 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-06 16:07:37.997 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-06 16:07:37.997 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-06 16:07:37.997 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-06 16:07:39.099 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-06 16:07:39.286 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-06 16:07:39.286 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7193 ms
2019-05-06 16:07:39.940 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 16:07:39.940 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-06 16:07:39.940 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 16:07:39.941 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-06 16:07:39.941 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 16:07:39.941 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-06 16:07:39.941 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 16:07:39.941 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-06 16:07:41.141 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-06 16:07:42.628 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-06 16:07:42.726 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-06 16:07:42.870 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-06 16:07:42.888 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-06 16:07:42.895 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 16:07:42.909 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-06 16:07:42.913 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 12.88 seconds (JVM running for 15.793)
2019-05-06 16:07:42.927 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-06 16:07:42.928 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-06 16:07:42.928 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-06 16:07:43.025 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-06 16:07:43.058 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:07:43.167 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-06 16:07:43.181 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-06 16:07:43.198 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-06 16:07:43.204 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-06 16:07:43.207 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-06 16:07:43.210 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-06 16:07:43.214 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-06 16:07:43.217 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-06 16:07:43.220 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-06 16:07:43.223 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-06 16:07:43.226 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-06 16:07:43.229 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-06 16:07:43.233 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-06 16:07:43.236 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-06 16:07:43.237 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-06 16:07:43.240 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 16:07:43.247 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-06 16:07:43.250 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-06 16:07:43.254 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-06 16:07:43.258 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-06 16:07:43.262 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-06 16:07:43.267 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-06 16:07:43.272 febs [main] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-06 16:07:43.273 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-06 16:07:43.273 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-06 16:07:43.273 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-06 16:07:43.273 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-06 16:07:43.274 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-06T16:07:43.273
2019-05-06 16:07:43.973 febs [RMI TCP Connection(7)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-06 16:07:43.973 febs [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-06 16:07:43.984 febs [RMI TCP Connection(6)-127.0.0.1] INFO  p6spy - 2019-05-06 16:07:43 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-06 16:07:43.993 febs [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 20 ms
2019-05-06 16:07:46.149 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 16:07:46.329 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:07:46 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T16:07:46.301+0800' WHERE username = 'mrbird';
2019-05-06 16:07:46.331 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:07:46 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:07:46.937 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:07:46 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T16:07:46.351+0800', '', '127.0.0.1' );
2019-05-06 16:07:47.074 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:07:47.111 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 16:07:47 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-06 16:07:47.864 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:07:47.864 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:07:47.871 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:07:47 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 16:07:47.874 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:07:47 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 16:07:47.878 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:07:47 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 16:07:47.882 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:07:47 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 16:07:47.886 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:07:47 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 16:07:47.978 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 16:07:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 16:07:47.985 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 16:07:47 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 16:08:00.360 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:08:00.402 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:08:00 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_person t WHERE 1 = 1;
2019-05-06 16:08:00.407 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:08:00 | 耗时 2 ms | SQL 语句：
select t.PERSON_ID, t.PERSON_NAME personName, t.PERSON_SEX, t.PERSON_SORT, t.PERSON_LEVEL, t.COMPANY_NAME, t.BIRTHDAY, t.ACCOUNT, t.COMPUTER, t.CONTENT, t.CREATE_TIME, t.CURRENT_ADDRESS, t.CURRENT_SALARY, t.EDUCATION_BACKGROUND, t.EDUCATION_RECORD, t.HEIGHT, t.WEIGHT, t.IDENTITY_CARD, t.EMAIL, t.LANGUAGE_SKILL, t.GRADUATE_INSTITUTIONS, t.GRADUATE_TIME, t.WORK_YEARS, t.WORK_EXPERIENCE, t.WORK_PHONE, t.MAJOR, t.MARITAL_STATUS, t.MOBILE_PHONE, t.MODIFY_TIME, t.OFFICE_TERM, t.NATION, t.NATIONALITY, t.NATIVE_PLACE, t.SELF_ASSESSMENT, t.FAMILY_PHONE, t.POSITION_NAME, t.PROJECT_EXPERIENCE, t.TRAIN_RECORD, t.RELATED_SKILL, t.USER_ID, t.RESUME from t_person t where 1=1 ORDER BY person_id ASC LIMIT 0,10;
2019-05-06 16:08:08.106 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:08:08.123 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:08:08 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_person t WHERE 1 = 1;
2019-05-06 16:08:08.126 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:08:08 | 耗时 1 ms | SQL 语句：
select t.PERSON_ID, t.PERSON_NAME personName, t.PERSON_SEX, t.PERSON_SORT, t.PERSON_LEVEL, t.COMPANY_NAME, t.BIRTHDAY, t.ACCOUNT, t.COMPUTER, t.CONTENT, t.CREATE_TIME, t.CURRENT_ADDRESS, t.CURRENT_SALARY, t.EDUCATION_BACKGROUND, t.EDUCATION_RECORD, t.HEIGHT, t.WEIGHT, t.IDENTITY_CARD, t.EMAIL, t.LANGUAGE_SKILL, t.GRADUATE_INSTITUTIONS, t.GRADUATE_TIME, t.WORK_YEARS, t.WORK_EXPERIENCE, t.WORK_PHONE, t.MAJOR, t.MARITAL_STATUS, t.MOBILE_PHONE, t.MODIFY_TIME, t.OFFICE_TERM, t.NATION, t.NATIONALITY, t.NATIVE_PLACE, t.SELF_ASSESSMENT, t.FAMILY_PHONE, t.POSITION_NAME, t.PROJECT_EXPERIENCE, t.TRAIN_RECORD, t.RELATED_SKILL, t.USER_ID, t.RESUME from t_person t where 1=1 ORDER BY person_id ASC LIMIT 10,10;
2019-05-06 16:08:10.249 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:08:10.261 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 16:08:10 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_person t WHERE 1 = 1;
2019-05-06 16:08:10.264 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 16:08:10 | 耗时 2 ms | SQL 语句：
select t.PERSON_ID, t.PERSON_NAME personName, t.PERSON_SEX, t.PERSON_SORT, t.PERSON_LEVEL, t.COMPANY_NAME, t.BIRTHDAY, t.ACCOUNT, t.COMPUTER, t.CONTENT, t.CREATE_TIME, t.CURRENT_ADDRESS, t.CURRENT_SALARY, t.EDUCATION_BACKGROUND, t.EDUCATION_RECORD, t.HEIGHT, t.WEIGHT, t.IDENTITY_CARD, t.EMAIL, t.LANGUAGE_SKILL, t.GRADUATE_INSTITUTIONS, t.GRADUATE_TIME, t.WORK_YEARS, t.WORK_EXPERIENCE, t.WORK_PHONE, t.MAJOR, t.MARITAL_STATUS, t.MOBILE_PHONE, t.MODIFY_TIME, t.OFFICE_TERM, t.NATION, t.NATIONALITY, t.NATIVE_PLACE, t.SELF_ASSESSMENT, t.FAMILY_PHONE, t.POSITION_NAME, t.PROJECT_EXPERIENCE, t.TRAIN_RECORD, t.RELATED_SKILL, t.USER_ID, t.RESUME from t_person t where 1=1 ORDER BY person_id ASC LIMIT 0,10;
2019-05-06 16:10:50.662 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:10:50.700 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 16:10:50 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_contract t WHERE 1 = 1;
2019-05-06 16:10:50.704 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 16:10:50 | 耗时 1 ms | SQL 语句：
select t.CONTRACT_ID, t.CONTRACT_NAME contractName, t.CONTRACT_CODE, t.START_TIME startTime, t.FINISH_TIME finishTime, t.MAKE_INVOICE_TIME makeInvoiceTime, t.PAY_WAY, t.COMPANY_SIGNED, t.CUSTOMER_SIGNED, t.SIGNED_TIME, t.SIGNED_ADDRESS, t.STORE_ADDRESS, t.FILL_TIME, t.MONEY, t.EXECUTE_STATUS, t.CONTRACT_INFO, t.ORDER_NUMBER, t.INFO, t.USER_ID, t.CREATE_TIME createTime, t.MODIFY_TIME from t_contract t where 1=1 ORDER BY CONTRACT_ID ASC LIMIT 0,10;
2019-05-06 16:22:59.962 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 54392 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-06 16:22:59.967 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-06 16:23:01.530 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 16:23:01.532 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-06 16:23:01.638 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92ms. Found 0 repository interfaces.
2019-05-06 16:23:02.010 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$bd5c65c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.325 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.424 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e6251200] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.433 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.436 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.447 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7c96a12f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$e816a2d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.597 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$e0db5a2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.622 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.627 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.707 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.729 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$ce1dfd3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.735 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$ba5f0dc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.753 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.756 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:02.760 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-06 16:23:02.770 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-06 16:23:03.784 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-06 16:23:03.784 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-06 16:23:03.785 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-06 16:23:03.785 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-06 16:23:03.785 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:03.803 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:03.814 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.101 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.110 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.125 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.172 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.174 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.305 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.368 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.452 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.454 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.459 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.505 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.510 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.574 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.575 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.579 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.614 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.616 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.618 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.652 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.725 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$d82a20c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.732 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$8a76e2d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.737 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$458dc8c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.748 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.761 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$6c593ff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.775 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$ba35be4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.807 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.809 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.819 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.860 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.885 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.891 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.892 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.899 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:05.914 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:23:06.274 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-06 16:23:06.287 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-06 16:23:06.292 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-06 16:23:06.293 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-06 16:23:06.300 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-06 16:23:06.300 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-06 16:23:06.301 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-06 16:23:07.381 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-06 16:23:07.583 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-06 16:23:07.583 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7447 ms
2019-05-06 16:23:08.468 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 16:23:08.468 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-06 16:23:08.468 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 16:23:08.468 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-06 16:23:08.468 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 16:23:08.468 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-06 16:23:08.469 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 16:23:08.469 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-06 16:23:09.279 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-06 16:23:10.587 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-06 16:23:10.679 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-06 16:23:10.808 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-06 16:23:10.826 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-06 16:23:10.831 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 16:23:10.853 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-06 16:23:10.855 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 11.788 seconds (JVM running for 14.874)
2019-05-06 16:23:10.865 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-06 16:23:10.866 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-06 16:23:10.866 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-06 16:23:10.939 febs [main] INFO  p6spy - 2019-05-06 16:23:10 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-06 16:23:10.970 febs [main] INFO  p6spy - 2019-05-06 16:23:10 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:23:11.052 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-06 16:23:11.066 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-06 16:23:11.084 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-06 16:23:11.089 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-06 16:23:11.092 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-06 16:23:11.096 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-06 16:23:11.099 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-06 16:23:11.103 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-06 16:23:11.106 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-06 16:23:11.111 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-06 16:23:11.113 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-06 16:23:11.120 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-06 16:23:11.124 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-06 16:23:11.127 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-06 16:23:11.130 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-06 16:23:11.134 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 16:23:11.137 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-06 16:23:11.145 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-06 16:23:11.148 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-06 16:23:11.152 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-06 16:23:11.157 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-06 16:23:11.161 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-06 16:23:11.167 febs [main] INFO  p6spy - 2019-05-06 16:23:11 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-06 16:23:11.168 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-06 16:23:11.168 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-06 16:23:11.169 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-06 16:23:11.169 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-06 16:23:11.169 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-06T16:23:11.169
2019-05-06 16:23:12.008 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-06 16:23:12.009 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-06 16:23:12.010 febs [RMI TCP Connection(6)-127.0.0.1] INFO  p6spy - 2019-05-06 16:23:12 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-06 16:23:12.024 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 15 ms
2019-05-06 16:30:15.171 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 59028 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-06 16:30:15.175 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-06 16:30:16.084 febs [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.0.13.Final
2019-05-06 16:30:17.401 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 16:30:17.404 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-06 16:30:17.542 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 110ms. Found 0 repository interfaces.
2019-05-06 16:30:17.993 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$1c3e9435] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.182 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.303 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f68ddfd9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.315 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.331 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8cff6f08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f87f70b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.553 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$f1442805] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.585 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.590 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.690 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.703 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$de86cb17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.708 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.717 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$cac7dba2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.728 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.730 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:18.735 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-06 16:30:18.747 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-06 16:30:19.064 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-06 16:30:19.064 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-06 16:30:19.065 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-06 16:30:19.065 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-06 16:30:19.065 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:19.083 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:19.092 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.657 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.671 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.682 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.688 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.737 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.739 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.752 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.754 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.825 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.926 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.927 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.932 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.977 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:20.980 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.034 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.036 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.040 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.077 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.086 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.089 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.124 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.171 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$e892ee99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$9adfb0b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.181 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$55f696a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.192 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.195 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.204 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$7cc20dcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.212 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$ca9e8c28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.232 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.235 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.240 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.243 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.274 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.303 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.310 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.310 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:30:21.798 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-06 16:30:21.815 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-06 16:30:21.822 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-06 16:30:21.822 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-06 16:30:21.828 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-06 16:30:21.828 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-06 16:30:21.828 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-06 16:30:22.936 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-06 16:30:23.198 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-06 16:30:23.198 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7949 ms
2019-05-06 16:30:24.147 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 16:30:24.148 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-06 16:30:24.148 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 16:30:24.148 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-06 16:30:24.148 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 16:30:24.148 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-06 16:30:24.149 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 16:30:24.149 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-06 16:30:25.082 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-06 16:30:26.578 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-06 16:30:26.650 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-06 16:30:26.763 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-06 16:30:26.779 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-06 16:30:26.789 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 16:30:26.804 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-06 16:30:26.807 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 13.094 seconds (JVM running for 16.097)
2019-05-06 16:30:26.832 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-06 16:30:26.833 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-06 16:30:26.833 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-06 16:30:26.910 febs [main] INFO  p6spy - 2019-05-06 16:30:26 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-06 16:30:26.938 febs [main] INFO  p6spy - 2019-05-06 16:30:26 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:30:27.029 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-06 16:30:27.050 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-06 16:30:27.072 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-06 16:30:27.080 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-06 16:30:27.084 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-06 16:30:27.088 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-06 16:30:27.093 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-06 16:30:27.097 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-06 16:30:27.101 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-06 16:30:27.105 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-06 16:30:27.108 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-06 16:30:27.113 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-06 16:30:27.117 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-06 16:30:27.121 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-06 16:30:27.124 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-06 16:30:27.154 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 16:30:27.163 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 5 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-06 16:30:27.167 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-06 16:30:27.170 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-06 16:30:27.176 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-06 16:30:27.182 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-06 16:30:27.202 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 17 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-06 16:30:27.210 febs [main] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-06 16:30:27.212 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-06 16:30:27.212 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-06 16:30:27.212 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-06 16:30:27.212 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-06 16:30:27.212 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-06T16:30:27.212
2019-05-06 16:30:27.921 febs [RMI TCP Connection(7)-127.0.0.1] INFO  p6spy - 2019-05-06 16:30:27 | 耗时 1 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-06 16:30:27.963 febs [RMI TCP Connection(8)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-06 16:30:27.963 febs [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-06 16:30:27.987 febs [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 24 ms
2019-05-06 16:31:41.548 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 68312 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-06 16:31:41.552 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-06 16:31:44.474 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 16:31:44.481 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-06 16:31:44.786 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 270ms. Found 0 repository interfaces.
2019-05-06 16:31:46.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$d9af59f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:46.451 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:46.729 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b3fea59b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:46.747 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:46.754 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:46.775 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4a7034ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:46.829 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$b5f03673] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.154 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$aeb4edc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.193 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.205 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.359 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.377 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$9bf790d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.387 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.400 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$8838a164] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.413 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.421 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-06 16:31:47.433 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-06 16:31:47.883 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-06 16:31:47.884 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-06 16:31:47.884 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-06 16:31:47.884 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-06 16:31:47.884 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.911 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:47.924 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.354 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.366 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.403 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.404 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.417 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.418 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.467 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.530 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.533 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.560 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.562 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.608 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.611 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.616 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.652 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.653 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.675 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.697 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$a603b45b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.701 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$58507674] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.704 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$13675c63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.715 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.718 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.725 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$3a32d391] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.730 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.733 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$880f51ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.746 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.747 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.754 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.804 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.810 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.811 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.821 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:49.844 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:31:50.306 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-06 16:31:50.334 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-06 16:31:50.339 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-06 16:31:50.340 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-06 16:31:50.347 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-06 16:31:50.347 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-06 16:31:50.347 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-06 16:31:51.420 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-06 16:31:51.948 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-06 16:31:51.949 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 10202 ms
2019-05-06 16:31:53.102 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 16:31:53.102 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-06 16:31:53.102 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 16:31:53.102 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-06 16:31:53.102 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 16:31:53.102 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-06 16:31:53.103 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 16:31:53.103 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-06 16:31:54.075 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-06 16:31:55.537 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-06 16:31:55.631 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-06 16:31:55.834 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-06 16:31:55.852 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-06 16:31:55.859 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 16:31:55.873 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-06 16:31:55.875 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 15.713 seconds (JVM running for 19.102)
2019-05-06 16:31:55.887 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-06 16:31:55.888 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-06 16:31:55.888 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-06 16:31:55.990 febs [main] INFO  p6spy - 2019-05-06 16:31:55 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-06 16:31:56.020 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:31:56.128 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-06 16:31:56.147 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-06 16:31:56.169 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-06 16:31:56.176 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-06 16:31:56.179 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-06 16:31:56.182 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-06 16:31:56.185 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-06 16:31:56.191 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-06 16:31:56.195 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-06 16:31:56.198 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-06 16:31:56.201 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-06 16:31:56.206 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-06 16:31:56.209 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-06 16:31:56.211 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-06 16:31:56.213 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-06 16:31:56.216 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 16:31:56.220 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-06 16:31:56.229 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 5 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-06 16:31:56.232 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-06 16:31:56.235 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-06 16:31:56.241 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-06 16:31:56.244 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-06 16:31:56.249 febs [main] INFO  p6spy - 2019-05-06 16:31:56 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-06 16:31:56.251 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-06 16:31:56.251 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-06 16:31:56.251 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-06 16:31:56.251 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-06 16:31:56.251 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-06T16:31:56.251
2019-05-06 16:31:57.119 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-06 16:31:57.119 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-06 16:31:57.126 febs [RMI TCP Connection(6)-127.0.0.1] INFO  p6spy - 2019-05-06 16:31:57 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-06 16:31:57.150 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 31 ms
2019-05-06 16:34:18.733 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on DESKTOP-L5UH5E4 with PID 70252 (D:\demo\vue\FEBS-Vue\backend\target\classes started by volga in D:\demo\vue\FEBS-Vue\backend)
2019-05-06 16:34:18.737 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2019-05-06 16:34:20.109 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 16:34:20.111 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-05-06 16:34:20.212 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 86ms. Found 0 repository interfaces.
2019-05-06 16:34:20.644 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$74aef051] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:20.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:20.897 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$4efe3bf5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:20.905 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:20.909 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:20.922 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e56fcb24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:20.943 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$50efcccd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$49b48421] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.292 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.299 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.383 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$36f72733] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.395 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$233837be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.403 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.405 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.409 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2019-05-06 16:34:21.417 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2019-05-06 16:34:21.670 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2019-05-06 16:34:21.671 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2019-05-06 16:34:21.671 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2019-05-06 16:34:21.671 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2019-05-06 16:34:21.671 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.686 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:21.696 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.337 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.383 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.384 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.394 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.396 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.472 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.508 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.509 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.513 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.544 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy114] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.589 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.591 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.597 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.627 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.629 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.630 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'resumeService' of type [cc.mrbird.febs.resume.service.impl.ResumeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.649 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.675 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$41034ab5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.679 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$f3500cce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.682 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$ae66f2bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.689 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.691 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.697 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$d53269eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.704 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.707 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$230ee844] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.717 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.718 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.723 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.726 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.750 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.774 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.778 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.779 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.790 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:23.808 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 16:34:24.252 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2019-05-06 16:34:24.270 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2019-05-06 16:34:24.276 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2019-05-06 16:34:24.276 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-05-06 16:34:24.284 febs [main] INFO  o.a.c.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.6.3].
2019-05-06 16:34:24.285 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2019-05-06 16:34:24.285 febs [main] INFO  o.a.c.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2019-05-06 16:34:25.401 febs [main] INFO  o.a.c.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2o  27 Mar 2018]
2019-05-06 16:34:25.778 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-05-06 16:34:25.779 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6999 ms
2019-05-06 16:34:26.777 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 16:34:26.777 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-05-06 16:34:26.777 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 16:34:26.777 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2019-05-06 16:34:26.777 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 16:34:26.777 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2019-05-06 16:34:26.778 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 16:34:26.778 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2019-05-06 16:34:28.074 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2019-05-06 16:34:29.929 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2019-05-06 16:34:30.014 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-05-06 16:34:30.124 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2019-05-06 16:34:30.145 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-05-06 16:34:30.155 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2019-05-06 16:34:30.165 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2019-05-06 16:34:30.167 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 13.439 seconds (JVM running for 16.186)
2019-05-06 16:34:30.178 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2019-05-06 16:34:30.179 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2019-05-06 16:34:30.179 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2019-05-06 16:34:30.253 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,company_name,email,mobile,status,create_time,modify_time,birthday,last_login_time,ssex,description,avatar,resume FROM t_user;
2019-05-06 16:34:30.289 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:34:30.366 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2019-05-06 16:34:30.381 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2019-05-06 16:34:30.398 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1';
2019-05-06 16:34:30.404 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'scott' group by u.username;
2019-05-06 16:34:30.408 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2019-05-06 16:34:30.412 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2019-05-06 16:34:30.415 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2';
2019-05-06 16:34:30.422 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'jack' group by u.username;
2019-05-06 16:34:30.426 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2019-05-06 16:34:30.430 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2019-05-06 16:34:30.433 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12';
2019-05-06 16:34:30.438 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'liuqiang' group by u.username;
2019-05-06 16:34:30.442 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'liuqiang';
2019-05-06 16:34:30.445 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'liuqiang' and m.perms is not null and m.perms <> '';
2019-05-06 16:34:30.447 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15';
2019-05-06 16:34:30.451 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 16:34:30.455 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666';
2019-05-06 16:34:30.463 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 4 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'zhb666' and m.perms is not null and m.perms <> '';
2019-05-06 16:34:30.467 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='16';
2019-05-06 16:34:30.470 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = '蹦跶蹦跶' group by u.username;
2019-05-06 16:34:30.475 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = '蹦跶蹦跶';
2019-05-06 16:34:30.478 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = '蹦跶蹦跶' and m.perms is not null and m.perms <> '';
2019-05-06 16:34:30.484 febs [main] INFO  p6spy - 2019-05-06 16:34:30 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='17';
2019-05-06 16:34:30.485 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2019-05-06 16:34:30.485 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2019-05-06 16:34:30.485 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2019-05-06 16:34:30.485 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2019-05-06 16:34:30.485 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2019-05-06T16:34:30.485
2019-05-06 16:34:31.090 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-05-06 16:34:31.090 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2019-05-06 16:34:31.094 febs [RMI TCP Connection(9)-127.0.0.1] INFO  p6spy - 2019-05-06 16:34:31 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2019-05-06 16:34:31.113 febs [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2019-05-06 16:34:34.549 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 16:34:34.735 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:34:34 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T16:34:34.707+0800' WHERE username = 'mrbird';
2019-05-06 16:34:34.738 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:34:34 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:34:35.430 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:34:35 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T16:34:34.792+0800', '', '127.0.0.1' );
2019-05-06 16:34:35.991 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:34:36.022 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 16:34:36 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-06 16:34:36.842 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:34:36.852 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:34:36.859 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:34:36 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 16:34:36.862 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:34:36 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 16:34:36.866 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:34:36 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 16:34:36.869 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:34:36 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 16:34:36.873 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:34:36 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 16:34:36.962 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 16:34:36 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 16:34:36.973 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 16:34:36 | 耗时 2 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 16:35:33.414 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:35:33.452 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:35:33 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 16:35:33.455 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:35:33 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.avatar, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 16:35:36.368 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:35:36.400 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:35:36 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM t_project_contact t LEFT JOIN t_person_project tp ON (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp ON (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe ON tpe.PERSON_ID = tp.PERSON_ID WHERE 1 = 1 AND tp.USER_ID = 1;
2019-05-06 16:35:36.402 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:35:36 | 耗时 1 ms | SQL 语句：
select t.PROJECT_CONTACT_ID, t.PERSON_PROJECT_ID, t.CONTACT_TYPE, tp.PERSON_STATUS, tpe.PERSON_NAME, tpe.MOBILE_PHONE, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, t.MODIFY_TIME, t.CREATE_TIME from t_project_contact t LEFT JOIN t_person_project tp on (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp on (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe on tpe.PERSON_ID = tp.PERSON_ID where 1=1 and tp.USER_ID = 1 ORDER BY PROJECT_CONTACT_ID ASC LIMIT 0,10;
2019-05-06 16:35:39.765 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:35:39.785 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 16:35:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 16:35:39.789 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 16:35:39 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 16:35:43.354 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:35:43.367 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:35:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-05-06 16:35:43.371 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:35:43 | 耗时 2 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 16:35:46.718 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:35:47.099 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 16:35:47 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_person_project t LEFT JOIN t_person tp ON (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp ON tpp.PROJECT_ID = t.PROJECT_ID WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 16:35:47.101 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 16:35:47 | 耗时 1 ms | SQL 语句：
select t.PERSON_PROJECT_ID, t.PERSON_ID, t.PROJECT_ID, t.PERSON_STATUS, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME, t.TITLE, t.DESCRIPTION, tp.PERSON_NAME personName, tp.MOBILE_PHONE phone, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, tpp.GATHER_STATUS gatherStatus from t_person_project t LEFT JOIN t_person tp on (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp on tpp.PROJECT_ID = t.PROJECT_ID where 1=1 and t.USER_ID = 1 ORDER BY PERSON_PROJECT_ID ASC LIMIT 0,10;
2019-05-06 16:35:49.926 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:35:49.973 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 16:35:49 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_contract t WHERE 1 = 1;
2019-05-06 16:35:49.975 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 16:35:49 | 耗时 1 ms | SQL 语句：
select t.CONTRACT_ID, t.CONTRACT_NAME contractName, t.CONTRACT_CODE, t.START_TIME startTime, t.FINISH_TIME finishTime, t.MAKE_INVOICE_TIME makeInvoiceTime, t.PAY_WAY, t.COMPANY_SIGNED, t.CUSTOMER_SIGNED, t.SIGNED_TIME, t.SIGNED_ADDRESS, t.STORE_ADDRESS, t.FILL_TIME, t.MONEY, t.EXECUTE_STATUS, t.CONTRACT_INFO, t.ORDER_NUMBER, t.INFO, t.USER_ID, t.CREATE_TIME createTime, t.MODIFY_TIME from t_contract t where 1=1 ORDER BY CONTRACT_ID ASC LIMIT 0,10;
2019-05-06 16:35:53.252 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:35:53.286 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 16:35:53 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_person t WHERE 1 = 1;
2019-05-06 16:35:53.290 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 16:35:53 | 耗时 1 ms | SQL 语句：
select t.PERSON_ID, t.PERSON_NAME personName, t.PERSON_SEX, t.PERSON_SORT, t.PERSON_LEVEL, t.COMPANY_NAME, t.BIRTHDAY, t.ACCOUNT, t.COMPUTER, t.CONTENT, t.CREATE_TIME, t.CURRENT_ADDRESS, t.CURRENT_SALARY, t.EDUCATION_BACKGROUND, t.EDUCATION_RECORD, t.HEIGHT, t.WEIGHT, t.IDENTITY_CARD, t.EMAIL, t.LANGUAGE_SKILL, t.GRADUATE_INSTITUTIONS, t.GRADUATE_TIME, t.WORK_YEARS, t.WORK_EXPERIENCE, t.WORK_PHONE, t.MAJOR, t.MARITAL_STATUS, t.MOBILE_PHONE, t.MODIFY_TIME, t.OFFICE_TERM, t.NATION, t.NATIONALITY, t.NATIVE_PLACE, t.SELF_ASSESSMENT, t.FAMILY_PHONE, t.POSITION_NAME, t.PROJECT_EXPERIENCE, t.TRAIN_RECORD, t.RELATED_SKILL, t.USER_ID, t.RESUME from t_person t where 1=1 ORDER BY person_id ASC LIMIT 0,10;
2019-05-06 16:49:47.391 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 16:49:47.399 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:49:47 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T16:49:47.395+0800' WHERE username = 'zhb666';
2019-05-06 16:49:47.402 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:49:47 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 16:49:48.032 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:49:48 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'zhb666', '2019-05-06T16:49:47.410+0800', '', '127.0.0.1' );
2019-05-06 16:50:18.615 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:50:18.621 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:50:18 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666') order by m.order_num;
2019-05-06 16:50:18.957 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:50:18.962 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:50:18.966 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:50:18 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 16:50:18.969 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:50:18 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 16:50:18.972 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:50:18 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 16:50:18.975 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:50:18 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 16:50:18.978 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:50:18 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'zhb666' group by days;
2019-05-06 16:51:25.620 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 16:51:25.628 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 16:51:25 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T16:51:25.624+0800' WHERE username = 'mrbird';
2019-05-06 16:51:25.638 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 16:51:25 | 耗时 9 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 16:51:26.416 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 16:51:26 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T16:51:25.692+0800', '', '127.0.0.1' );
2019-05-06 16:51:57.347 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:51:57.353 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 16:51:57 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-06 16:51:57.922 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:51:57.926 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:51:57.932 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:51:57 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 16:51:57.933 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:51:57 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 16:51:57.935 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:51:57 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 16:51:57.936 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:51:57 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 16:51:57.938 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:51:57 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 16:51:57.940 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:51:57 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 16:51:57.944 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 16:51:57 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 16:53:04.082 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:53:04.112 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 16:53:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_log;
2019-05-06 16:53:04.125 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 16:53:04 | 耗时 11 ms | SQL 语句：
SELECT ID,username,operation,time,method,params,ip,create_time,location FROM t_log ORDER BY create_time DESC LIMIT 0,10;
2019-05-06 16:53:18.242 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:53:18.250 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 16:53:18 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_log;
2019-05-06 16:53:18.254 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 16:53:18 | 耗时 2 ms | SQL 语句：
SELECT ID,username,operation,time,method,params,ip,create_time,location FROM t_log ORDER BY create_time DESC LIMIT 430,10;
2019-05-06 16:53:28.500 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:53:28.508 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 16:53:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_log;
2019-05-06 16:53:28.511 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 16:53:28 | 耗时 1 ms | SQL 语句：
SELECT ID,username,operation,time,method,params,ip,create_time,location FROM t_log ORDER BY create_time DESC LIMIT 420,10;
2019-05-06 16:53:40.837 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:58:19.433 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:58:19.710 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:58:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_resume u WHERE 1 = 1 AND u.user_id = 1;
2019-05-06 16:58:19.712 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:58:19 | 耗时 1 ms | SQL 语句：
SELECT u.resume_id, u.user_id, u.photo, u.profession, u.user_address, u.self_assessment, u.status, u.school_name, u.major_name, u.study_end, u.study_start, u.education, u.recruitment_flag, u.user_company, u.company_trade, u.position_name, u.company_address, u.under_number, u.employment_period_to, u.employment_period_from, u.department, u.job_performance, u.company_nature, u.company_scale, u.company_intro, u.monthly_pay_number, u.monthly_pay, u.add_information, u.label_name, u.language, u.proficiency, u.grade, u.project_name, u.company_name, u.time_end, u.time_start, u.description, u.duty, u.performance, u.resume_name, u.trade, u.functional, u.work_address, u.annual_salary, u.current_salary from t_resume u where 1 = 1 AND u.user_id = 1 ORDER BY resume_id ASC LIMIT 0,10;
2019-05-06 16:58:26.777 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:58:26.803 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:58:26 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.position_sort, u.need_work_time, u.need_education, u.issue_company, u.requested, d.id sendId FROM t_position u LEFT JOIN t_position_send d ON (u.id = d.position_id) WHERE 1 = 1 AND d.user_id = '1' GROUP BY u.position_name ) TOTAL;
2019-05-06 16:58:26.806 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:58:26 | 耗时 1 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.position_sort, u.need_work_time, u.need_education, u.issue_company, u.requested, d.id sendId FROM t_position u LEFT JOIN t_position_send d ON (u.id = d.position_id) WHERE 1 = 1 AND d.user_id = '1' group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-05-06 16:58:30.625 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:58:30.633 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 16:58:30 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 16:58:30.635 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 16:58:30 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.avatar, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 16:58:40.928 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:58:40.934 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:58:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_person_project t LEFT JOIN t_person tp ON (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp ON tpp.PROJECT_ID = t.PROJECT_ID WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 16:58:40.937 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 16:58:40 | 耗时 1 ms | SQL 语句：
select t.PERSON_PROJECT_ID, t.PERSON_ID, t.PROJECT_ID, t.PERSON_STATUS, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME, t.TITLE, t.DESCRIPTION, tp.PERSON_NAME personName, tp.MOBILE_PHONE phone, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, tpp.GATHER_STATUS gatherStatus from t_person_project t LEFT JOIN t_person tp on (tp.PERSON_ID = t.PERSON_ID) LEFT JOIN t_project tpp on tpp.PROJECT_ID = t.PROJECT_ID where 1=1 and t.USER_ID = 1 ORDER BY PERSON_PROJECT_ID ASC LIMIT 0,10;
2019-05-06 16:58:44.332 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:58:44.342 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 16:58:44 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1;
2019-05-06 16:58:44.346 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 16:58:44 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 16:58:47.470 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:58:47.478 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:58:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_contract t WHERE 1 = 1;
2019-05-06 16:58:47.480 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 16:58:47 | 耗时 0 ms | SQL 语句：
select t.CONTRACT_ID, t.CONTRACT_NAME contractName, t.CONTRACT_CODE, t.START_TIME startTime, t.FINISH_TIME finishTime, t.MAKE_INVOICE_TIME makeInvoiceTime, t.PAY_WAY, t.COMPANY_SIGNED, t.CUSTOMER_SIGNED, t.SIGNED_TIME, t.SIGNED_ADDRESS, t.STORE_ADDRESS, t.FILL_TIME, t.MONEY, t.EXECUTE_STATUS, t.CONTRACT_INFO, t.ORDER_NUMBER, t.INFO, t.USER_ID, t.CREATE_TIME createTime, t.MODIFY_TIME from t_contract t where 1=1 ORDER BY CONTRACT_ID ASC LIMIT 0,10;
2019-05-06 16:58:49.354 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 16:58:49.364 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:58:49 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_person t WHERE 1 = 1;
2019-05-06 16:58:49.367 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 16:58:49 | 耗时 1 ms | SQL 语句：
select t.PERSON_ID, t.PERSON_NAME personName, t.PERSON_SEX, t.PERSON_SORT, t.PERSON_LEVEL, t.COMPANY_NAME, t.BIRTHDAY, t.ACCOUNT, t.COMPUTER, t.CONTENT, t.CREATE_TIME, t.CURRENT_ADDRESS, t.CURRENT_SALARY, t.EDUCATION_BACKGROUND, t.EDUCATION_RECORD, t.HEIGHT, t.WEIGHT, t.IDENTITY_CARD, t.EMAIL, t.LANGUAGE_SKILL, t.GRADUATE_INSTITUTIONS, t.GRADUATE_TIME, t.WORK_YEARS, t.WORK_EXPERIENCE, t.WORK_PHONE, t.MAJOR, t.MARITAL_STATUS, t.MOBILE_PHONE, t.MODIFY_TIME, t.OFFICE_TERM, t.NATION, t.NATIONALITY, t.NATIVE_PLACE, t.SELF_ASSESSMENT, t.FAMILY_PHONE, t.POSITION_NAME, t.PROJECT_EXPERIENCE, t.TRAIN_RECORD, t.RELATED_SKILL, t.USER_ID, t.RESUME from t_person t where 1=1 ORDER BY person_id ASC LIMIT 0,10;
2019-05-06 17:05:25.700 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:05:25.715 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 17:05:25 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 17:05:25.715 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:05:25.721 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 17:05:25 | 耗时 2 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 17:05:25.723 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:05:25 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 17:05:25.728 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:05:25 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:05:25.731 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:05:25 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:05:25.734 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:05:25 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 17:05:25.737 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:05:25 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 17:05:37.549 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 17:05:37.557 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:05:37 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T17:05:37.551+0800' WHERE username = 'zhb666';
2019-05-06 17:05:37.560 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:05:37 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 17:05:38.284 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:05:38 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'zhb666', '2019-05-06T17:05:37.673+0800', '', '127.0.0.1' );
2019-05-06 17:05:38.594 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:05:38.597 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 17:05:38 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666') order by m.order_num;
2019-05-06 17:05:38.961 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:05:38.971 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:05:38.977 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:05:38 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 17:05:38.980 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:05:38 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:05:38.983 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:05:38 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:05:38.986 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:05:38 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 17:05:38.989 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:05:38 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'zhb666' group by days;
2019-05-06 17:06:14.599 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 17:06:14.606 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:06:14 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T17:06:14.602+0800' WHERE username = 'mrbird';
2019-05-06 17:06:14.609 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:06:14 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 17:06:15.285 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:06:15 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T17:06:14.665+0800', '', '127.0.0.1' );
2019-05-06 17:06:45.933 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:06:45.938 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:06:45 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-06 17:06:46.553 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:06:46.555 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:06:46.559 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:06:46 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 17:06:46.562 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:06:46 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:06:46.562 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:06:46 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 17:06:46.565 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:06:46 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 17:06:46.576 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:06:46 | 耗时 12 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:06:46.579 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:06:46 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 17:06:46.583 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:06:46 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 17:29:02.451 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:29:02.460 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:29:02.465 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 17:29:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 17:29:02.466 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:29:02 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 17:29:02.468 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 17:29:02 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 17:29:02.469 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:29:02 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:29:02.472 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:29:02 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:29:02.475 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:29:02 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 17:29:02.479 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:29:02 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 17:29:11.124 febs [http-nio-9527-exec-9] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 17:29:11.131 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:29:11 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T17:29:11.127+0800' WHERE username = 'zhb666';
2019-05-06 17:29:11.134 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:29:11 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 17:29:12.262 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:29:12 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'zhb666', '2019-05-06T17:29:11.236+0800', '', '127.0.0.1' );
2019-05-06 17:29:18.922 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 17:29:18.930 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 17:29:18 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T17:29:18.925+0800' WHERE username = 'zhb666';
2019-05-06 17:29:18.933 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 17:29:18 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 17:29:19.621 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 17:29:19 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'zhb666', '2019-05-06T17:29:18.964+0800', '', '127.0.0.1' );
2019-05-06 17:29:53.307 febs [http-nio-9527-exec-1] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 17:29:53.313 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:29:53 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T17:29:53.310+0800' WHERE username = 'zhb666';
2019-05-06 17:29:53.316 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:29:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'zhb666' group by u.username;
2019-05-06 17:29:54.328 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:29:54 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'zhb666', '2019-05-06T17:29:53.370+0800', '', '127.0.0.1' );
2019-05-06 17:29:54.540 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:29:54.545 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:29:54 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'zhb666') order by m.order_num;
2019-05-06 17:29:55.067 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:29:55.077 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:29:55.081 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:29:55 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 17:29:55.084 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:29:55 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:29:55.086 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:29:55 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:29:55.089 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:29:55 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 17:29:55.091 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:29:55 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'zhb666' group by days;
2019-05-06 17:32:09.437 febs [http-nio-9527-exec-4] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 17:32:09.444 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:32:09 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T17:32:09.440+0800' WHERE username = 'mrbird';
2019-05-06 17:32:09.452 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:32:09 | 耗时 6 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 17:32:10.197 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:32:10 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T17:32:09.488+0800', '', '127.0.0.1' );
2019-05-06 17:32:10.988 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:32:10.995 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:32:10.996 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 17:32:10 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 17:32:10.999 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 17:32:10 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 17:32:10.999 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 17:32:10 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 17:32:11.003 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 17:32:11 | 耗时 2 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:32:11.005 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 17:32:11 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:32:11.008 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 17:32:11 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 17:32:11.011 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 17:32:11 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 17:32:13.930 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 17:32:13.936 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:32:13 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T17:32:13.933+0800' WHERE username = 'mrbird';
2019-05-06 17:32:13.939 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:32:13 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 17:32:15.028 febs [http-nio-9527-exec-8] INFO  p6spy - 2019-05-06 17:32:15 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T17:32:13.978+0800', '', '127.0.0.1' );
2019-05-06 17:32:15.182 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:32:15.187 febs [http-nio-9527-exec-9] INFO  p6spy - 2019-05-06 17:32:15 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-06 17:32:15.760 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:32:15.760 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:32:15.763 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 17:32:15 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 17:32:15.766 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 17:32:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 17:32:15.766 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 17:32:15 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:32:15.769 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 17:32:15 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:32:15.769 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 17:32:15 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 17:32:15.771 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 17:32:15 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 17:32:15.774 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 17:32:15 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2019-05-06 17:32:33.771 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:32:39.804 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:32:39.812 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:32:39 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_log;
2019-05-06 17:32:39.815 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:32:39 | 耗时 1 ms | SQL 语句：
SELECT ID,username,operation,time,method,params,ip,create_time,location FROM t_log ORDER BY create_time DESC LIMIT 0,10;
2019-05-06 17:32:43.902 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:32:43.908 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 17:32:43 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_resume u WHERE 1 = 1 AND u.user_id = 1;
2019-05-06 17:32:43.910 febs [http-nio-9527-exec-3] INFO  p6spy - 2019-05-06 17:32:43 | 耗时 1 ms | SQL 语句：
SELECT u.resume_id, u.user_id, u.photo, u.profession, u.user_address, u.self_assessment, u.status, u.school_name, u.major_name, u.study_end, u.study_start, u.education, u.recruitment_flag, u.user_company, u.company_trade, u.position_name, u.company_address, u.under_number, u.employment_period_to, u.employment_period_from, u.department, u.job_performance, u.company_nature, u.company_scale, u.company_intro, u.monthly_pay_number, u.monthly_pay, u.add_information, u.label_name, u.language, u.proficiency, u.grade, u.project_name, u.company_name, u.time_end, u.time_start, u.description, u.duty, u.performance, u.resume_name, u.trade, u.functional, u.work_address, u.annual_salary, u.current_salary from t_resume u where 1 = 1 AND u.user_id = 1 ORDER BY resume_id ASC LIMIT 0,10;
2019-05-06 17:32:50.783 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:32:50.801 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:32:50 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc ON tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 GROUP BY u.position_name ) TOTAL;
2019-05-06 17:32:50.803 febs [http-nio-9527-exec-4] INFO  p6spy - 2019-05-06 17:32:50 | 耗时 1 ms | SQL 语句：
SELECT u.id, u.position_name, u.address, u.description, u.salary, u.issue_time, u.need_education, u.position_sort, u.need_work_time, u.issue_company, u.requested, u.user_id FROM t_position u LEFT JOIN t_company tc on tc.COMPANY_NAME = u.issue_company WHERE 1 = 1 group by u.position_name ORDER BY id ASC LIMIT 0,10;
2019-05-06 17:32:57.727 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:32:57.737 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 17:32:57 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_company t WHERE 1 = 1;
2019-05-06 17:32:57.739 febs [http-nio-9527-exec-5] INFO  p6spy - 2019-05-06 17:32:57 | 耗时 1 ms | SQL 语句：
select t.COMPANY_ID, t.COMPANY_NAME companyName, t.COMPANY_ADDRESS companyAddress, t.finance, t.avatar, t.scale, t.nature, t.trade, t.info, t.tag1, t.tag2, t.tag3, t.CREATE_TIME createTime, t.MODIFY_TIME from t_company t where 1=1 ORDER BY COMPANY_ID ASC LIMIT 0,10;
2019-05-06 17:33:00.044 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:33:00.050 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 17:33:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project_contact t LEFT JOIN t_person_project tp ON (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp ON (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe ON tpe.PERSON_ID = tp.PERSON_ID WHERE 1 = 1 AND tp.USER_ID = 1;
2019-05-06 17:33:00.052 febs [http-nio-9527-exec-6] INFO  p6spy - 2019-05-06 17:33:00 | 耗时 1 ms | SQL 语句：
select t.PROJECT_CONTACT_ID, t.PERSON_PROJECT_ID, t.CONTACT_TYPE, tp.PERSON_STATUS, tpe.PERSON_NAME, tpe.MOBILE_PHONE, tpp.PROJECT_STATUS, tpp.COMPANY_NAME, tpp.PROJECT_NAME, t.MODIFY_TIME, t.CREATE_TIME from t_project_contact t LEFT JOIN t_person_project tp on (tp.PERSON_PROJECT_ID = t.PERSON_PROJECT_ID) LEFT JOIN t_project tpp on (tpp.PROJECT_ID = tp.PROJECT_ID) LEFT JOIN t_person tpe on tpe.PERSON_ID = tp.PERSON_ID where 1=1 and tp.USER_ID = 1 ORDER BY PROJECT_CONTACT_ID ASC LIMIT 0,10;
2019-05-06 17:33:36.069 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2019-05-06 17:33:36.078 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 17:33:36 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2019-05-06T17:33:36.073+0800' WHERE username = 'mrbird';
2019-05-06 17:33:36.081 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 17:33:36 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u.status, u.birthday, u.create_time createTime, u.ssex, u.company_name companyName, u.avatar, u.resume, u.description, u.last_login_time lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE 1 = 1 AND u.username = 'mrbird' group by u.username;
2019-05-06 17:33:36.964 febs [http-nio-9527-exec-7] INFO  p6spy - 2019-05-06 17:33:36 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2019-05-06T17:33:36.096+0800', '', '127.0.0.1' );
2019-05-06 17:33:37.246 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:33:37.250 febs [http-nio-9527-exec-10] INFO  p6spy - 2019-05-06 17:33:37 | 耗时 2 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2019-05-06 17:33:37.737 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:33:37.742 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2019-05-06 17:33:37.745 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 17:33:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_project t WHERE 1 = 1 AND t.USER_ID = 1;
2019-05-06 17:33:37.749 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:33:37 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2019-05-06 17:33:37.750 febs [http-nio-9527-exec-2] INFO  p6spy - 2019-05-06 17:33:37 | 耗时 1 ms | SQL 语句：
select t.PROJECT_ID, t.PROJECT_CODE, t.PROJECT_NAME projectName, t.START_TIME startTime, t.PLAN_FINISH_TIME planFinishTime, t.PROJECT_STATUS projectStatus, t.PRIORITY_LEVEL, t.COMPANY_NAME companyName, t.GATHER_STATUS gatherStatus, t.CUSTOMER_MANAGER, t.BUSINESS_PERSON, t.PROJECT_CHARGE, t.PROJECT_COUNSELOR, t.COMPANY_CONTACT, t.SEARCH_PERSON, t.COMPANY_PAYER, t.COMPANY_INFO, t.REPORT_OBJECT, t.SUBORDINATE_POSITION, t.WORK_ADDRESS, t.NUMBER, t.TRADE, t.SUITABLE_FUNCTION, t.LANGUAGE_REQUIRE, t.SEX_REQUIRE, t.POSITION_LEVEL, t.POSITION_SORT, t.AGE_REQUIRE, t.POSITION_INFO, t.POSITION_REASON, t.SALARY_RANGE, t.BONUS, t.WELFARE, t.PROGRESS, t.EXECUTION_ANALYZE, t.USER_ID, t.MODIFY_TIME, t.CREATE_TIME from t_project t where 1=1 AND t.USER_ID = 1 ORDER BY PROJECT_ID ASC LIMIT 0,10;
2019-05-06 17:33:37.751 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:33:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:33:37.754 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:33:37 | 耗时 1 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2019-05-06 17:33:37.756 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:33:37 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2019-05-06 17:33:37.759 febs [http-nio-9527-exec-1] INFO  p6spy - 2019-05-06 17:33:37 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
